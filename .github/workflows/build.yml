on:
  workflow_dispatch:
  push:
    branches:
    - main
    - 'release/**'
  schedule:
    # https://crontab.guru/#5_4_*_*_* Run weekly to automatically update RSS feed in case we forget
    - cron: '5 16 * * 6'


permissions:
  contents: write
  pull-requests: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'

    - name: Install packages
      run: yarn

    - name: Run Setup
      run: yarn setup
    - name: Run build
      run: yarn build
      env:
        POSTHOG_URL: ${{ secrets.POSTHOG_URL }}

    # We publish first so that we can then fetch the correct result from spreaker so we can generate the RSS feed. In the future this should be done completely offline which means we'll need to generate the necessary audio files and upload them automatically during the build, and also publish the episode, before generating the RSS feed.
    - name: Sync release to socials
      run: yarn publish-episode
    
    - name: Create RSS file
      run: yarn rss 

    # We only run this on schedule, because the whole point of the schedule is to ensure that the RSS feed is up to date.
    # If it isn't we'll throw an error using the "-f" flag, if it, then the site will just build normally.
    - name: Ensure Updated RSS Feed
      if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
      run: yarn rss -f

    - name: Debug files
      run: ls -lar

    - name: Upload RSS file as github artifact
      uses: actions/upload-artifact@v4
      with:
        name: saved-rss-files
        path: build/rss.xml
        # 90 days is the max: https://docs.github.com/en/organizations/managing-organization-settings/configuring-the-retention-period-for-github-actions-artifacts-and-logs-in-your-organization
        retention-days: 90

    - name: deploy build to github
      if: github.repository_owner == 'adventuresindevops' && github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: JamesIves/github-pages-deploy-action@v4.7.3
      with:
        branch: production
        folder: build
        clean: true

    - name: Configure AWS Credentials
      if: github.repository_owner == 'adventuresindevops' && github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: aws-actions/configure-aws-credentials@v5.0.0
      with:
        aws-region: us-east-1
        role-duration-seconds: 3600
        audience: sts.amazonaws.com
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubRunnerAssumedRole
        role-session-name: GitHubRunner-${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ github.run_number }}
    - name: Deploy
      if: github.repository_owner == 'adventuresindevops' && github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: yarn deploy

  # release:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   # Only run manually when necessary
  #   if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 20
  #       registry-url: 'https://registry.npmjs.org'

  #   - name: Install packages
  #     run: yarn

  #   - name: Run Setup
  #     run: yarn setup

  #   - name: Create RSS file
  #     run: yarn rss -f --output-directory rss-build

  #   - name: deploy build to github
  #     uses: JamesIves/github-pages-deploy-action@v4.7.3
  #     with:
  #       branch: production
  #       folder: rss-build
  #       clean: false
        