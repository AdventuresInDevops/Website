WEBVTT

00:00:00.229 --> 00:00:01.409
Um, oh, there we go.

00:00:02.270 --> 00:00:03.092
It's always great when the

00:00:03.132 --> 00:00:05.432
episode starts with me going, uh,

00:00:06.234 --> 00:00:11.278
that editor, but he gets rid of that.

00:00:11.417 --> 00:00:12.099
I hope so.

00:00:13.000 --> 00:00:14.041
If not, we'll hear about it.

00:00:14.441 --> 00:00:15.621
So welcome everyone to

00:00:15.702 --> 00:00:17.803
another episode of adventures in dev ops.

00:00:17.824 --> 00:00:19.484
Happy new year, Warren.

00:00:19.585 --> 00:00:20.146
Happy new year.

00:00:20.245 --> 00:00:21.746
Thanks for joining me today.

00:00:21.766 --> 00:00:24.228
Oh, thank you for having me back.

00:00:25.050 --> 00:00:25.829
Always a pleasure.

00:00:25.910 --> 00:00:26.471
Jillian.

00:00:26.631 --> 00:00:27.411
Welcome back.

00:00:27.472 --> 00:00:27.891
How are you?

00:00:28.463 --> 00:00:29.044
Good, good.

00:00:29.103 --> 00:00:29.564
How are you?

00:00:29.765 --> 00:00:30.704
And Happy New Year.

00:00:31.385 --> 00:00:32.206
I'm doing well.

00:00:32.985 --> 00:00:34.445
I'm pretty excited about

00:00:34.485 --> 00:00:37.207
today's episode because we

00:00:37.247 --> 00:00:40.389
have your background, AJ.

00:00:40.728 --> 00:00:41.909
So our guest today is AJ

00:00:41.950 --> 00:00:45.970
Funk and his background is just so cool.

00:00:46.030 --> 00:00:47.311
So you're a...

00:00:48.795 --> 00:00:51.017
software engineer for Rainforest.

00:00:52.176 --> 00:00:55.420
You live in California,

00:00:55.479 --> 00:00:56.680
you're a snowboarder,

00:00:57.240 --> 00:00:59.101
and you are a previous D-I

00:00:59.201 --> 00:01:01.304
and professional baseball player.

00:01:01.344 --> 00:01:02.145
Is that all correct?

00:01:02.664 --> 00:01:03.384
That is correct.

00:01:03.445 --> 00:01:06.027
I've taken an interesting career path.

00:01:07.548 --> 00:01:08.248
So yeah,

00:01:08.289 --> 00:01:10.409
definitely lots of stuff to do here.

00:01:10.510 --> 00:01:11.551
And I'm in the Lake Tahoe

00:01:11.691 --> 00:01:13.052
area in California,

00:01:13.072 --> 00:01:13.753
right on the border of

00:01:13.813 --> 00:01:15.933
California and Nevada.

00:01:15.974 --> 00:01:17.715
So yeah, it's all true.

00:01:18.590 --> 00:01:20.430
What position did you play in baseball?

00:01:21.031 --> 00:01:21.611
I was a pitcher.

00:01:22.251 --> 00:01:22.650
A pitcher.

00:01:22.790 --> 00:01:23.572
Okay, cool.

00:01:23.691 --> 00:01:25.072
Oh, that's what I know what it is.

00:01:28.912 --> 00:01:29.853
I was about to be like,

00:01:29.873 --> 00:01:30.453
I have no idea what we're

00:01:30.474 --> 00:01:31.293
talking about here,

00:01:31.353 --> 00:01:34.094
but I know what the pitcher is.

00:01:34.215 --> 00:01:35.534
It's all about the little connections,

00:01:35.575 --> 00:01:35.876
Jillian.

00:01:35.896 --> 00:01:37.135
It really is.

00:01:38.805 --> 00:01:39.326
So cool.

00:01:39.546 --> 00:01:40.487
AJ,

00:01:40.548 --> 00:01:43.010
tell us a little bit about your role at

00:01:43.069 --> 00:01:45.231
Rainforest and what Rainforest does.

00:01:45.471 --> 00:01:47.554
And I think I'm interested

00:01:47.573 --> 00:01:50.575
to hear what led you to go

00:01:50.656 --> 00:01:54.379
from pitching Major League

00:01:54.400 --> 00:01:56.441
Baseball to pitching code.

00:01:58.097 --> 00:01:58.897
Yeah, for sure.

00:02:00.118 --> 00:02:00.338
Yeah,

00:02:00.379 --> 00:02:03.480
so I started writing code when I was

00:02:03.500 --> 00:02:05.960
a kid, really, always as a hobby.

00:02:06.680 --> 00:02:07.822
My plan in life was always

00:02:07.861 --> 00:02:08.861
to play baseball.

00:02:09.861 --> 00:02:10.062
You know,

00:02:10.182 --> 00:02:11.582
once you become an adult and you

00:02:11.603 --> 00:02:12.543
realize that it's not

00:02:12.644 --> 00:02:14.484
always such a viable career path,

00:02:15.525 --> 00:02:16.645
I started realizing that

00:02:16.685 --> 00:02:17.925
this thing I do as a hobby

00:02:18.066 --> 00:02:19.086
I could do as a career.

00:02:19.973 --> 00:02:21.376
So just started kind of

00:02:21.395 --> 00:02:22.937
dabbling and realizing that

00:02:23.157 --> 00:02:24.618
I actually really enjoyed doing this.

00:02:24.639 --> 00:02:26.521
And it was a big pivot from

00:02:27.462 --> 00:02:29.084
just athletics all the time.

00:02:30.825 --> 00:02:33.649
So yeah, now I ended up at Rainforest QA.

00:02:33.688 --> 00:02:35.591
I've been here for seven and

00:02:35.610 --> 00:02:36.632
a half years now.

00:02:36.651 --> 00:02:37.432
Oh, wow.

00:02:38.253 --> 00:02:39.413
Yeah, it's been a long time,

00:02:39.713 --> 00:02:41.615
and it's been really fun.

00:02:41.735 --> 00:02:43.615
I work with really, really great people,

00:02:44.175 --> 00:02:46.594
really intelligent, experienced engineers,

00:02:46.936 --> 00:02:47.915
really great culture.

00:02:48.616 --> 00:02:50.135
We're distributed all over the world,

00:02:50.175 --> 00:02:50.695
so it's fun.

00:02:50.735 --> 00:02:52.276
We get to go meet up with

00:02:52.316 --> 00:02:53.736
each other every once in a

00:02:53.796 --> 00:02:55.917
while in some random place in the world.

00:02:56.937 --> 00:02:57.997
And so it's a really

00:02:58.016 --> 00:02:59.157
enjoyable place to work.

00:03:00.377 --> 00:03:01.918
I specialize in front-end development,

00:03:02.418 --> 00:03:03.457
so I spend a lot of time

00:03:03.478 --> 00:03:04.699
with the product and design

00:03:04.739 --> 00:03:06.378
team shaping how our product works.

00:03:07.532 --> 00:03:09.854
And as a quality assurance company,

00:03:10.413 --> 00:03:11.594
it's really important for

00:03:11.634 --> 00:03:13.336
us to have a really high

00:03:13.455 --> 00:03:14.676
bar of quality and

00:03:14.697 --> 00:03:16.078
reliability for our product.

00:03:16.798 --> 00:03:18.338
Obviously, if our app breaks,

00:03:18.639 --> 00:03:19.599
why are you going to trust

00:03:19.719 --> 00:03:20.920
us to make sure that your

00:03:20.980 --> 00:03:21.800
app doesn't break?

00:03:22.622 --> 00:03:23.361
Seems reasonable.

00:03:24.122 --> 00:03:25.663
Yeah, right?

00:03:26.324 --> 00:03:28.586
And to meet that high bar,

00:03:28.665 --> 00:03:31.266
we use Rainforest to test Rainforest.

00:03:31.647 --> 00:03:32.587
So being able to eat your

00:03:32.627 --> 00:03:35.289
own dog food on a daily basis is a really,

00:03:35.349 --> 00:03:36.550
really good position to be in.

00:03:37.330 --> 00:03:38.992
It allows you to identify

00:03:39.052 --> 00:03:39.992
pain points in the user

00:03:40.032 --> 00:03:42.074
experience before your users do.

00:03:42.514 --> 00:03:44.036
Hopefully, that's not always true,

00:03:44.075 --> 00:03:44.896
but we do our best.

00:03:45.977 --> 00:03:47.277
And it also means we spend a

00:03:47.318 --> 00:03:48.179
lot of time thinking about

00:03:48.218 --> 00:03:49.759
the best way to do QA,

00:03:50.139 --> 00:03:50.941
both from a kind of

00:03:50.961 --> 00:03:52.421
philosophical standpoint

00:03:52.782 --> 00:03:54.342
and from a practical

00:03:54.443 --> 00:03:56.003
implementation standpoint.

00:03:56.586 --> 00:03:59.987
reality in other words um so

00:04:00.288 --> 00:04:01.388
this experience obviously

00:04:01.427 --> 00:04:02.788
helps guide our product

00:04:02.888 --> 00:04:04.709
roadmap but it's also led

00:04:04.729 --> 00:04:05.649
me to develop a lot of

00:04:05.669 --> 00:04:07.468
strong opinions on how

00:04:07.508 --> 00:04:08.449
product and engineering

00:04:08.490 --> 00:04:09.689
teams should shape their

00:04:09.710 --> 00:04:11.330
testing strategies what

00:04:11.349 --> 00:04:12.349
kind of tools they should

00:04:12.510 --> 00:04:14.850
be using and how they can

00:04:14.890 --> 00:04:16.350
ship code quickly and

00:04:16.391 --> 00:04:18.052
continuously without having

00:04:18.072 --> 00:04:18.992
to sacrifice quality

00:04:20.797 --> 00:04:21.937
sure for me that seems like

00:04:22.036 --> 00:04:23.958
one of those um rabbit

00:04:23.978 --> 00:04:25.317
holes that it's really hard

00:04:25.358 --> 00:04:27.399
to find the balance on of

00:04:27.439 --> 00:04:29.120
like what's the minimum

00:04:29.160 --> 00:04:31.100
level of testing that you

00:04:31.500 --> 00:04:33.281
should be doing and then

00:04:33.321 --> 00:04:35.802
like what's a what's an

00:04:36.041 --> 00:04:38.041
adequate level to get into

00:04:38.081 --> 00:04:39.362
where you're actually still

00:04:40.283 --> 00:04:42.283
getting good use for your

00:04:42.302 --> 00:04:43.504
time you know because obviously you can

00:04:44.754 --> 00:04:45.855
throw something at it that

00:04:45.896 --> 00:04:47.476
tests every possible

00:04:47.577 --> 00:04:50.560
combination or path through

00:04:50.579 --> 00:04:51.600
your application that could

00:04:51.661 --> 00:04:52.382
ever be taken.

00:04:52.442 --> 00:04:53.702
And you're going to reach a

00:04:53.742 --> 00:04:55.264
point of diminishing returns there.

00:04:55.283 --> 00:04:55.925
So how do you figure out

00:04:55.944 --> 00:04:57.146
what that right spot is?

00:04:57.927 --> 00:04:58.507
Yeah, absolutely.

00:04:58.827 --> 00:04:59.728
The myth of a hundred

00:04:59.767 --> 00:05:01.629
percent test coverage, right?

00:05:02.651 --> 00:05:04.572
That we all strive for.

00:05:05.173 --> 00:05:06.434
I think they teach you very

00:05:06.593 --> 00:05:07.975
early on that like a

00:05:08.016 --> 00:05:09.817
hundred percent test coverage is

00:05:10.817 --> 00:05:12.319
What we should be doing with

00:05:12.379 --> 00:05:13.759
every time we push code there,

00:05:13.899 --> 00:05:14.420
we should make sure

00:05:14.459 --> 00:05:15.321
everything is covered.

00:05:15.880 --> 00:05:17.562
The reality is that's just not possible,

00:05:17.581 --> 00:05:17.721
right?

00:05:17.742 --> 00:05:18.483
What does that even mean?

00:05:18.502 --> 00:05:19.442
Does that mean every line of

00:05:19.483 --> 00:05:20.343
code is covered?

00:05:21.204 --> 00:05:22.105
Does that mean every

00:05:22.165 --> 00:05:23.925
possible edge case is covered?

00:05:23.985 --> 00:05:24.786
Like you're never going to

00:05:24.805 --> 00:05:25.747
get all of those things.

00:05:26.367 --> 00:05:29.088
So the trick is finding that balance,

00:05:29.149 --> 00:05:29.528
right?

00:05:30.588 --> 00:05:32.170
We want to make sure that we have...

00:05:33.451 --> 00:05:34.812
confidence in the thing that

00:05:34.872 --> 00:05:35.434
we're shipping,

00:05:35.514 --> 00:05:36.814
that both the thing we're

00:05:36.834 --> 00:05:38.216
shipping works and that

00:05:38.237 --> 00:05:39.557
we're not breaking anything else.

00:05:39.999 --> 00:05:41.019
But we also want to be able

00:05:41.040 --> 00:05:42.081
to move quickly.

00:05:42.120 --> 00:05:43.903
We don't want this to get into our way.

00:05:45.144 --> 00:05:45.545
And so

00:05:46.689 --> 00:05:47.610
The main ways we go about

00:05:47.649 --> 00:05:50.312
that is really thinking

00:05:50.331 --> 00:05:51.872
about what your testing strategy is.

00:05:52.372 --> 00:05:53.252
What are you testing?

00:05:54.334 --> 00:05:56.074
What is your bar for quality?

00:05:56.154 --> 00:05:57.314
Because in reality,

00:05:57.375 --> 00:05:59.596
sometimes we're okay if some things break,

00:05:59.656 --> 00:06:01.117
especially when we're in

00:06:01.156 --> 00:06:03.538
the early stages of prototyping something,

00:06:04.418 --> 00:06:08.420
it's a beta feature, et cetera.

00:06:10.290 --> 00:06:13.574
what are the layers of your testing,

00:06:13.675 --> 00:06:13.935
right?

00:06:14.255 --> 00:06:15.598
So we can think about our

00:06:15.637 --> 00:06:18.461
testing strategy as layers with,

00:06:21.165 --> 00:06:22.206
pictured as three layers,

00:06:22.646 --> 00:06:24.069
but more as a period, right?

00:06:24.088 --> 00:06:25.810
So your foundation of your

00:06:25.831 --> 00:06:27.932
testing strategy is your unit tests.

00:06:29.701 --> 00:06:31.083
This is something we're all familiar with.

00:06:31.103 --> 00:06:32.723
We're using code to test

00:06:32.764 --> 00:06:34.386
code in small chunks, right?

00:06:34.425 --> 00:06:36.968
What a unit is, is totally up to you.

00:06:37.290 --> 00:06:38.610
We can define it as a single

00:06:38.651 --> 00:06:41.574
function or some class component,

00:06:41.595 --> 00:06:42.035
whatever.

00:06:43.255 --> 00:06:44.637
The top of our pyramid is

00:06:44.718 --> 00:06:46.800
our end-to-end or our UI tests.

00:06:48.144 --> 00:06:49.425
um that's testing our

00:06:49.526 --> 00:06:51.266
application in a kind of

00:06:51.507 --> 00:06:53.487
real world scenario as we

00:06:53.507 --> 00:06:56.249
go up the pyramid these

00:06:56.288 --> 00:06:57.449
tests are more

00:06:57.529 --> 00:06:59.310
comprehensive we can rely

00:06:59.350 --> 00:07:00.690
on them more but they're

00:07:00.771 --> 00:07:02.572
slower they're more expensive

00:07:02.971 --> 00:07:04.612
right so at the base of our

00:07:04.653 --> 00:07:05.613
pyramid we have all of

00:07:05.653 --> 00:07:06.634
these unit tests that we

00:07:06.654 --> 00:07:08.435
could run constantly so

00:07:08.516 --> 00:07:09.877
rainforest we run these

00:07:10.237 --> 00:07:11.237
every single time you push

00:07:11.278 --> 00:07:12.559
code it just runs them

00:07:12.598 --> 00:07:13.680
because it's cheap we don't

00:07:13.699 --> 00:07:15.680
really care if you're lazy

00:07:15.701 --> 00:07:16.961
like me I like to just push

00:07:17.021 --> 00:07:18.502
my code up and oh something

00:07:18.543 --> 00:07:19.644
broke I didn't notice

00:07:20.483 --> 00:07:21.524
because I don't want to run

00:07:21.564 --> 00:07:22.326
the whole test suite all

00:07:22.365 --> 00:07:23.687
the time on my local machine

00:07:24.987 --> 00:07:27.990
But as you move up that

00:07:28.031 --> 00:07:29.673
pyramid from unit tests,

00:07:29.932 --> 00:07:30.913
the middle of that pyramid

00:07:30.934 --> 00:07:32.315
would be our integration test.

00:07:32.355 --> 00:07:33.637
So basically testing

00:07:33.697 --> 00:07:35.079
multiple chunks of these

00:07:35.238 --> 00:07:36.500
units and how they interact

00:07:36.521 --> 00:07:37.161
with each other.

00:07:37.882 --> 00:07:39.103
That could be maybe one of

00:07:39.122 --> 00:07:40.605
your microservices talking

00:07:40.625 --> 00:07:42.026
to another microservice or

00:07:42.067 --> 00:07:42.786
something like that.

00:07:43.447 --> 00:07:44.327
as we get to the top of the

00:07:44.387 --> 00:07:45.189
pyramid and we start

00:07:45.209 --> 00:07:46.088
running these end-to-end

00:07:46.129 --> 00:07:48.310
tests that's where I think

00:07:48.329 --> 00:07:49.430
strategy becomes much more

00:07:49.449 --> 00:07:51.670
important because like I

00:07:51.690 --> 00:07:53.072
mentioned they're slower so

00:07:53.112 --> 00:07:54.252
we actually care about when

00:07:54.312 --> 00:07:55.372
we run these we need to be

00:07:55.432 --> 00:07:56.952
more strategic about how

00:07:57.112 --> 00:07:59.754
often we run them um and

00:07:59.793 --> 00:08:01.574
they are more expensive so

00:08:01.634 --> 00:08:02.535
we don't want to just blow

00:08:02.555 --> 00:08:04.096
a bunch of a whole bunch of

00:08:04.115 --> 00:08:06.096
money on them right right

00:08:06.117 --> 00:08:07.177
so finding the balance

00:08:07.197 --> 00:08:08.958
between those things is the real trick

00:08:09.696 --> 00:08:10.677
I like that you pulled out

00:08:10.757 --> 00:08:12.399
test pyramid and not one of

00:08:12.439 --> 00:08:15.341
the other newer hipster

00:08:15.382 --> 00:08:19.064
trends of the test diamond

00:08:19.144 --> 00:08:21.648
or a test Klein bottle.

00:08:22.588 --> 00:08:24.569
The tried and true test pyramid.

00:08:24.651 --> 00:08:24.810
I mean,

00:08:24.831 --> 00:08:26.151
at least that's how I've always seen it.

00:08:26.271 --> 00:08:27.913
And it's also really

00:08:27.934 --> 00:08:28.995
interesting that you bring up the

00:08:30.596 --> 00:08:31.317
a hundred percent test

00:08:31.357 --> 00:08:32.980
coverage is not possible.

00:08:33.059 --> 00:08:34.100
At least from like anecdotal

00:08:34.160 --> 00:08:35.162
experience for me,

00:08:35.783 --> 00:08:36.764
I found it's almost like a

00:08:36.865 --> 00:08:39.227
Pareto distribution and

00:08:39.889 --> 00:08:40.789
follows the eighty twenty

00:08:40.850 --> 00:08:42.172
rule where if you wanted to

00:08:42.211 --> 00:08:43.693
have a hundred percent test coverage,

00:08:43.714 --> 00:08:44.875
it would actually require

00:08:45.034 --> 00:08:46.918
an infinite amount of time.

00:08:46.998 --> 00:08:47.519
Absolutely.

00:08:49.724 --> 00:08:50.485
Yeah,

00:08:50.524 --> 00:08:52.765
we certainly strive to have all that

00:08:52.785 --> 00:08:53.385
test coverage,

00:08:53.426 --> 00:08:54.986
but I think the reality of

00:08:55.167 --> 00:08:56.327
a hundred percent test

00:08:56.347 --> 00:08:58.109
coverage is more along the

00:08:58.129 --> 00:09:00.410
lines of how you define

00:09:00.711 --> 00:09:02.631
like your user workflows, right?

00:09:02.672 --> 00:09:04.613
So the typical example is

00:09:04.633 --> 00:09:05.714
like your login flow.

00:09:06.815 --> 00:09:10.197
What are the main outcomes of the login?

00:09:10.517 --> 00:09:13.219
It's successful login, failed login,

00:09:13.339 --> 00:09:14.620
maybe it forgot your password.

00:09:15.240 --> 00:09:17.241
And do you have test coverage,

00:09:17.822 --> 00:09:20.764
end-to-end test coverage on that flow?

00:09:21.125 --> 00:09:21.625
If so,

00:09:21.666 --> 00:09:23.226
we could usually consider that covered.

00:09:23.908 --> 00:09:25.889
Do I have a unit test that

00:09:25.909 --> 00:09:27.610
covers every combination of

00:09:27.691 --> 00:09:29.352
things that I could type into that box?

00:09:29.692 --> 00:09:30.514
Absolutely not.

00:09:31.674 --> 00:09:33.316
But having some sort of test

00:09:33.336 --> 00:09:34.236
coverage on it to make sure

00:09:34.256 --> 00:09:35.938
that it actually loads in

00:09:36.339 --> 00:09:37.320
some kind of real-world

00:09:37.360 --> 00:09:39.341
scenario gives me much more confidence.

00:09:42.798 --> 00:09:44.379
With a lot of things like logins,

00:09:44.460 --> 00:09:45.642
and there's so many areas

00:09:45.682 --> 00:09:47.883
these days in developing software,

00:09:47.903 --> 00:09:51.025
you're using SaaS products

00:09:51.586 --> 00:09:55.570
as the mechanism for implementing that.

00:09:56.171 --> 00:09:57.751
What's your approach for

00:09:59.393 --> 00:10:03.136
dealing with that external dependency?

00:10:03.177 --> 00:10:05.418
Because you can mock it or

00:10:05.458 --> 00:10:07.179
you can try to simulate it

00:10:07.220 --> 00:10:08.541
or you can actually call it.

00:10:08.961 --> 00:10:10.322
What do you think about those?

00:10:10.736 --> 00:10:12.779
I feel like there's a jab at me, Will.

00:10:13.399 --> 00:10:15.462
I see you coming there.

00:10:16.804 --> 00:10:19.408
No, no, I'm trying to... Yeah,

00:10:19.427 --> 00:10:20.668
I got nothing.

00:10:20.749 --> 00:10:21.289
AJ, back to you.

00:10:25.248 --> 00:10:25.488
Yeah,

00:10:25.548 --> 00:10:30.792
so I think what you're asking is when

00:10:30.871 --> 00:10:32.673
we run any kind of tests,

00:10:33.975 --> 00:10:35.056
we'll stick with unit tests

00:10:35.316 --> 00:10:36.437
for the time being,

00:10:36.956 --> 00:10:39.979
there's a context that they run inside of,

00:10:40.038 --> 00:10:40.278
right?

00:10:43.145 --> 00:10:45.626
If we wanted to test our app

00:10:46.187 --> 00:10:48.087
as close as possible to reality,

00:10:48.148 --> 00:10:49.008
we would test it in

00:10:49.028 --> 00:10:51.428
production on an actual

00:10:51.469 --> 00:10:53.149
machine with an actual human,

00:10:53.429 --> 00:10:54.890
which some people do, right?

00:10:54.910 --> 00:10:56.410
There's obviously downsides to that.

00:10:56.611 --> 00:10:57.552
Testing in production,

00:10:57.892 --> 00:10:58.672
probably don't have to get

00:10:58.692 --> 00:11:00.592
into why that's not a great idea.

00:11:02.153 --> 00:11:03.634
And... The entire video game

00:11:03.693 --> 00:11:04.695
industry is wrong?

00:11:05.034 --> 00:11:06.916
Like, how are you testing things?

00:11:06.936 --> 00:11:09.177
Touche.

00:11:10.456 --> 00:11:11.357
And yes, they are wrong.

00:11:13.596 --> 00:11:13.917
I mean,

00:11:13.937 --> 00:11:14.778
I'm not even sure that's true anymore.

00:11:14.798 --> 00:11:16.438
They don't even release games, right?

00:11:16.578 --> 00:11:18.100
It's just content that you

00:11:18.139 --> 00:11:19.480
click download on and you pay for,

00:11:19.541 --> 00:11:20.541
and then the game comes

00:11:20.660 --> 00:11:21.642
later or something.

00:11:21.662 --> 00:11:23.102
I think that's what the game

00:11:23.143 --> 00:11:24.222
industry has gone towards.

00:11:24.263 --> 00:11:25.583
That does kind of be how it goes,

00:11:25.624 --> 00:11:27.304
but I still feel like they

00:11:27.325 --> 00:11:28.245
have the users doing an

00:11:28.285 --> 00:11:29.245
awful lot of acceptance

00:11:29.285 --> 00:11:31.827
testing in the video game industry.

00:11:32.227 --> 00:11:33.869
And I'm too cheap for this nonsense.

00:11:33.928 --> 00:11:34.869
But anyways,

00:11:35.169 --> 00:11:36.169
I'm trying not to derail the

00:11:36.210 --> 00:11:37.451
entire conversation today.

00:11:38.054 --> 00:11:40.898
so we can we can skip right

00:11:40.918 --> 00:11:41.818
on over that no I I totally

00:11:41.859 --> 00:11:42.919
agree and it's like you do

00:11:43.541 --> 00:11:44.581
even when you do get a game

00:11:44.621 --> 00:11:45.743
it's an incomplete game

00:11:45.802 --> 00:11:47.384
that's buggy and you play

00:11:47.424 --> 00:11:48.466
it for an hour and you go

00:11:48.485 --> 00:11:49.246
I'm never playing this

00:11:49.307 --> 00:11:52.029
again um so I'm I'm a late

00:11:52.049 --> 00:11:53.010
adopter when it comes to

00:11:53.030 --> 00:11:54.392
these things I wait till I

00:11:54.412 --> 00:11:55.533
uh the internet stops

00:11:55.594 --> 00:11:57.014
screaming about it and then

00:11:57.034 --> 00:11:57.895
I start downloading things

00:12:01.049 --> 00:12:03.110
But yeah,

00:12:03.192 --> 00:12:04.272
obviously we don't want to test

00:12:04.572 --> 00:12:05.774
our applications in

00:12:05.813 --> 00:12:06.693
production because we're

00:12:06.714 --> 00:12:07.615
smarter than that and we

00:12:07.654 --> 00:12:09.375
have the ability to test

00:12:09.456 --> 00:12:10.977
these things in different environments.

00:12:12.418 --> 00:12:15.181
When we are running things like unit tests,

00:12:15.640 --> 00:12:17.221
we're kind of stuck inside

00:12:17.261 --> 00:12:19.524
of this artificial context, right?

00:12:21.283 --> 00:12:23.744
If you're just running code to test code,

00:12:24.063 --> 00:12:25.224
it's inside of that

00:12:25.303 --> 00:12:27.544
specific code environment.

00:12:27.565 --> 00:12:29.065
It's giving us inputs and outputs,

00:12:30.085 --> 00:12:31.765
even as we go up the chain

00:12:31.785 --> 00:12:33.546
to some things that like to

00:12:33.566 --> 00:12:35.246
call themselves end to end tests,

00:12:35.307 --> 00:12:36.567
which I kind of disagree with,

00:12:36.606 --> 00:12:38.126
which would be things like

00:12:38.187 --> 00:12:39.347
Dom based testing.

00:12:40.288 --> 00:12:41.467
You're still stuck inside

00:12:41.508 --> 00:12:43.067
some kind of context, right?

00:12:43.087 --> 00:12:45.509
So for the the Dom, if you're not familiar,

00:12:45.528 --> 00:12:47.409
it's the document object model,

00:12:47.549 --> 00:12:48.649
and it's essentially the.

00:12:49.530 --> 00:12:51.653
application interface that

00:12:51.692 --> 00:12:53.596
we have with the browser.

00:12:53.775 --> 00:12:54.817
So that's how our JavaScript

00:12:54.856 --> 00:12:56.058
code talks to the browser.

00:12:57.048 --> 00:12:58.168
how we manipulate things,

00:12:58.208 --> 00:13:00.270
how we read things from the browser.

00:13:01.010 --> 00:13:02.993
And so the important nuance

00:13:03.033 --> 00:13:04.234
here is that our code

00:13:04.274 --> 00:13:05.815
interacts with the DOM.

00:13:06.235 --> 00:13:07.296
A human being doesn't

00:13:07.375 --> 00:13:09.037
interact with the DOM, right?

00:13:09.378 --> 00:13:10.538
When you go click a button,

00:13:10.577 --> 00:13:12.200
you don't go talk to the DOM,

00:13:12.259 --> 00:13:14.802
you interact with the user interface.

00:13:16.023 --> 00:13:17.803
So we want to get our tests

00:13:17.864 --> 00:13:19.905
as close to actual

00:13:19.985 --> 00:13:21.547
end-to-end tests as possible, right?

00:13:21.626 --> 00:13:23.107
A human looking at the screen,

00:13:23.148 --> 00:13:24.828
a human interacting with the screen.

00:13:27.394 --> 00:13:28.695
If we're not in that

00:13:28.754 --> 00:13:29.936
production environment,

00:13:30.176 --> 00:13:31.596
every step we take away

00:13:31.655 --> 00:13:33.437
from that gets us further from reality,

00:13:33.476 --> 00:13:33.697
right?

00:13:33.777 --> 00:13:37.298
It gives us this false sense

00:13:37.317 --> 00:13:38.957
of security sometimes.

00:13:39.538 --> 00:13:41.239
There's a really common

00:13:41.278 --> 00:13:42.879
example with DOM-based

00:13:42.899 --> 00:13:45.940
tools might be click this button,

00:13:46.321 --> 00:13:47.541
did it work, right?

00:13:48.081 --> 00:13:49.682
well just because you can

00:13:49.782 --> 00:13:50.702
interact with that button

00:13:50.722 --> 00:13:52.043
through the dom doesn't

00:13:52.063 --> 00:13:53.124
mean your user can actually

00:13:53.163 --> 00:13:54.424
interact with that button

00:13:54.625 --> 00:13:56.826
right there might be um you

00:13:56.846 --> 00:13:57.947
know some kind of overlay

00:13:58.028 --> 00:13:59.187
over my button the button

00:13:59.207 --> 00:14:00.509
might be off of the screen

00:14:01.110 --> 00:14:01.909
but when I asked the dom

00:14:01.970 --> 00:14:02.770
can I click the button it

00:14:02.791 --> 00:14:04.451
says yeah we clicked it it

00:14:04.511 --> 00:14:06.472
worked ship the code and

00:14:06.513 --> 00:14:07.313
now no one can log into

00:14:07.333 --> 00:14:08.014
your app because no one can

00:14:08.033 --> 00:14:10.054
click the button right um

00:14:10.195 --> 00:14:11.917
and so doing our um

00:14:13.096 --> 00:14:14.778
as much as we can to get to

00:14:14.798 --> 00:14:16.139
that real world scenario,

00:14:16.198 --> 00:14:17.240
creating testing and

00:14:17.259 --> 00:14:18.440
staging environments that

00:14:18.500 --> 00:14:19.541
mirror production as much

00:14:19.581 --> 00:14:21.381
as possible and loading

00:14:21.442 --> 00:14:23.943
these things into virtual

00:14:23.964 --> 00:14:25.083
machines with operating

00:14:25.144 --> 00:14:28.005
systems instead of a headless browser,

00:14:28.046 --> 00:14:29.066
which is basically a

00:14:29.105 --> 00:14:30.947
browser with no UI and

00:14:31.028 --> 00:14:32.347
interacting with it in a

00:14:32.388 --> 00:14:33.889
way that a human doesn't

00:14:33.948 --> 00:14:35.929
interact with it just gets

00:14:35.970 --> 00:14:36.951
us further away from reality.

00:14:38.200 --> 00:14:38.320
I mean,

00:14:38.340 --> 00:14:39.400
it's interesting you bring that up

00:14:39.640 --> 00:14:41.081
and I'm sort of,

00:14:41.522 --> 00:14:42.601
now I'm intrigued if you

00:14:42.722 --> 00:14:43.923
maybe want to roast what

00:14:43.962 --> 00:14:45.203
we've been telling our customers.

00:14:45.244 --> 00:14:47.924
So obviously we provide a

00:14:47.985 --> 00:14:49.885
third party product for our

00:14:49.905 --> 00:14:51.726
customers for login and access control.

00:14:51.888 --> 00:14:53.908
So they have, you know,

00:14:53.948 --> 00:14:55.529
providing them the auth needs there.

00:14:56.269 --> 00:14:57.530
And I think the biggest

00:14:57.571 --> 00:14:58.370
advice that we end up

00:14:58.410 --> 00:14:59.152
giving them is like,

00:15:00.052 --> 00:15:02.693
We are already testing that thing.

00:15:02.994 --> 00:15:04.215
Don't focus on this.

00:15:04.294 --> 00:15:05.316
You're wasting your time

00:15:05.836 --> 00:15:06.876
duplicating our testing.

00:15:07.238 --> 00:15:09.019
If you felt the need to do that,

00:15:09.359 --> 00:15:10.500
it's almost like you don't

00:15:10.539 --> 00:15:12.282
trust us with our product.

00:15:12.381 --> 00:15:13.802
And then you probably should

00:15:13.822 --> 00:15:15.043
question why you're using

00:15:15.083 --> 00:15:16.325
that solution in the first place.

00:15:17.024 --> 00:15:18.365
If you get to that point,

00:15:18.647 --> 00:15:19.226
that's actually a

00:15:19.246 --> 00:15:20.408
conversation more than it's

00:15:20.587 --> 00:15:21.428
a technical solution.

00:15:22.490 --> 00:15:22.750
However,

00:15:22.769 --> 00:15:24.191
we do find some customers still

00:15:24.230 --> 00:15:25.932
have a need to go a little bit further.

00:15:26.133 --> 00:15:27.214
And the thing that we've done,

00:15:27.394 --> 00:15:28.654
I don't know if this is the right answer,

00:15:28.835 --> 00:15:31.116
but we provide a,

00:15:31.157 --> 00:15:32.177
given it is a SaaS product,

00:15:32.197 --> 00:15:33.798
we provide a clone of our

00:15:33.818 --> 00:15:35.280
service as a container that

00:15:35.301 --> 00:15:36.581
can run that is

00:15:37.162 --> 00:15:38.884
trimmed down only has uh

00:15:39.104 --> 00:15:41.005
minor features but allows

00:15:41.125 --> 00:15:42.486
the flows that you're going

00:15:42.506 --> 00:15:43.688
to test or you want to

00:15:44.188 --> 00:15:45.831
actually verify uh

00:15:45.951 --> 00:15:47.331
available without having to

00:15:47.351 --> 00:15:47.852
go through all the

00:15:47.873 --> 00:15:49.073
complexity that the service

00:15:49.134 --> 00:15:51.155
actually provides yeah I

00:15:51.196 --> 00:15:51.777
mean I think that's a good

00:15:51.817 --> 00:15:53.337
compromise right so in in

00:15:53.378 --> 00:15:54.298
this whole strategy of

00:15:54.339 --> 00:15:55.941
finding balance between our

00:15:56.301 --> 00:15:57.621
our confidence and and our

00:15:57.663 --> 00:15:59.543
velocity and shipping um

00:16:00.677 --> 00:16:02.418
The reality is our testing

00:16:02.438 --> 00:16:03.119
environments are not going

00:16:03.139 --> 00:16:04.100
to match our production

00:16:04.120 --> 00:16:05.500
environments all the time, right?

00:16:06.581 --> 00:16:07.481
And a lot of times we're

00:16:07.501 --> 00:16:09.202
constrained by resources.

00:16:11.583 --> 00:16:13.424
So I think in a situation like that,

00:16:13.465 --> 00:16:15.105
that totally makes sense.

00:16:15.125 --> 00:16:16.246
Some kind of pared down

00:16:16.287 --> 00:16:18.567
version of your production application.

00:16:19.048 --> 00:16:20.048
I think the important thing

00:16:20.208 --> 00:16:23.529
is how you're testing it, right?

00:16:23.750 --> 00:16:24.850
If we are able to just kind

00:16:24.890 --> 00:16:25.892
of like strip down our

00:16:25.951 --> 00:16:27.692
product and test the bare

00:16:27.732 --> 00:16:28.732
bones version of it,

00:16:30.293 --> 00:16:32.416
as long as we are in an environment,

00:16:32.456 --> 00:16:32.615
right?

00:16:32.635 --> 00:16:33.576
They're clicking on it through,

00:16:33.596 --> 00:16:33.956
I don't know,

00:16:33.976 --> 00:16:35.597
a web browser or whatever it

00:16:35.638 --> 00:16:37.519
might be versus just like

00:16:37.818 --> 00:16:39.279
running some script in the background.

00:16:39.379 --> 00:16:40.380
I think that's a really good

00:16:40.400 --> 00:16:41.861
balance between those two things.

00:16:42.381 --> 00:16:43.283
The key here is that we're

00:16:43.302 --> 00:16:45.283
still doing end-to-end testing, right?

00:16:45.583 --> 00:16:47.205
I imagine it's, you know,

00:16:47.245 --> 00:16:48.865
that someone's typing in the box,

00:16:49.086 --> 00:16:50.167
a button's being clicked,

00:16:50.427 --> 00:16:51.847
there's an HTTP request or

00:16:51.868 --> 00:16:53.068
whatever it might be to an

00:16:53.129 --> 00:16:54.789
API that reads from a database,

00:16:54.809 --> 00:16:55.551
and we're checking that all

00:16:55.591 --> 00:16:57.152
of these things actually work together.

00:16:58.371 --> 00:17:00.594
So yeah, I think that's a good compromise.

00:17:02.234 --> 00:17:02.894
I think one of the things

00:17:02.914 --> 00:17:04.496
that actually comes up a lot is,

00:17:05.256 --> 00:17:06.537
maybe just on a slight tangent,

00:17:06.957 --> 00:17:08.617
is people are so focused on

00:17:08.817 --> 00:17:09.698
end-to-end testing,

00:17:09.798 --> 00:17:12.299
they never stop to question, should we?

00:17:12.859 --> 00:17:14.480
Like for that particular flow,

00:17:14.701 --> 00:17:16.521
is that where the value is

00:17:16.582 --> 00:17:17.541
for our company?

00:17:17.662 --> 00:17:19.022
Is it really where we should

00:17:19.063 --> 00:17:20.284
put a lot of resources in?

00:17:20.324 --> 00:17:22.625
Do you find that those that

00:17:22.644 --> 00:17:24.566
you're working with or your customers

00:17:25.518 --> 00:17:26.940
may or may not know where

00:17:26.980 --> 00:17:29.382
the highest value testing should be done.

00:17:29.903 --> 00:17:30.584
And then that's a

00:17:30.624 --> 00:17:32.086
conversation or maybe it's

00:17:32.105 --> 00:17:33.086
something that your tool provides.

00:17:34.348 --> 00:17:35.068
Yeah, absolutely.

00:17:35.809 --> 00:17:38.510
And I think the trick for

00:17:38.570 --> 00:17:40.451
that is doing it early, right?

00:17:40.931 --> 00:17:41.192
So,

00:17:41.372 --> 00:17:45.012
if you have a large application in a

00:17:45.032 --> 00:17:46.133
code base and you have not

00:17:46.153 --> 00:17:47.473
written any end-to-end tests,

00:17:47.993 --> 00:17:50.015
it's hard to determine where to start,

00:17:50.095 --> 00:17:50.355
right?

00:17:50.714 --> 00:17:52.875
Versus if you start early on,

00:17:53.496 --> 00:17:55.277
it kind of writes itself, right?

00:17:55.317 --> 00:17:56.797
The first thing is your login,

00:17:56.836 --> 00:17:58.077
you have some login coverage.

00:17:59.596 --> 00:18:00.778
Determining where the

00:18:00.817 --> 00:18:04.019
highest value is is certainly up to each,

00:18:04.699 --> 00:18:06.079
usually the product team, right?

00:18:06.099 --> 00:18:08.140
What do we care most about not breaking?

00:18:09.101 --> 00:18:10.480
And can we create some kind

00:18:10.580 --> 00:18:13.162
of smoke test that spans all of these,

00:18:13.221 --> 00:18:13.501
right?

00:18:13.961 --> 00:18:15.502
So each one of these tests

00:18:15.522 --> 00:18:18.124
has a certain level of granularity to it.

00:18:19.769 --> 00:18:21.070
A good smoke test might be.

00:18:21.131 --> 00:18:22.833
Can I log into my application?

00:18:22.893 --> 00:18:24.674
Can I create a thing?

00:18:24.714 --> 00:18:26.116
Can I delete a thing and

00:18:26.156 --> 00:18:27.699
things just like generally work?

00:18:28.180 --> 00:18:30.281
Those initially are your

00:18:30.301 --> 00:18:32.104
highest value tests because

00:18:32.444 --> 00:18:34.026
I know that my app actually

00:18:34.066 --> 00:18:35.627
loads in reality, right?

00:18:35.688 --> 00:18:36.809
Regardless of what my unit

00:18:36.829 --> 00:18:38.951
tests say after that.

00:18:39.772 --> 00:18:41.233
it's usually defined by what

00:18:41.253 --> 00:18:42.794
those user flows are.

00:18:42.834 --> 00:18:43.815
So as you're scoping

00:18:43.855 --> 00:18:45.234
something out with your product team,

00:18:45.595 --> 00:18:46.415
here's this new feature

00:18:46.455 --> 00:18:47.276
that we're building.

00:18:48.336 --> 00:18:49.336
It's really important in

00:18:49.436 --> 00:18:52.478
your planning process to include that.

00:18:53.259 --> 00:18:54.999
Write tests for it.

00:18:55.019 --> 00:18:56.339
These are things that we usually

00:18:58.095 --> 00:19:00.036
as developers kind of bake

00:19:00.076 --> 00:19:01.336
into our estimates right I

00:19:01.356 --> 00:19:02.277
have to write unit tests

00:19:02.317 --> 00:19:04.038
for this at rainforest

00:19:04.057 --> 00:19:05.638
we've shifted more towards

00:19:05.878 --> 00:19:07.140
baking and rainforest tests

00:19:07.180 --> 00:19:07.900
for these things we

00:19:07.940 --> 00:19:09.201
obviously have unit tests

00:19:10.141 --> 00:19:11.761
but getting the coverage at

00:19:11.781 --> 00:19:13.563
the time of implementation

00:19:13.682 --> 00:19:14.824
or the time of release or

00:19:14.844 --> 00:19:16.525
whatever that might be is

00:19:16.644 --> 00:19:18.326
usually your best bet to get that

00:19:19.165 --> 00:19:20.346
If I have a large

00:19:21.448 --> 00:19:22.588
application and I don't

00:19:22.628 --> 00:19:23.710
have that coverage yet,

00:19:24.471 --> 00:19:25.771
it is certainly a balancing

00:19:25.852 --> 00:19:26.873
act figuring out what

00:19:26.932 --> 00:19:28.954
should we test first, right?

00:19:29.515 --> 00:19:30.256
So I would certainly start

00:19:30.276 --> 00:19:31.676
with those kind of smoke tests.

00:19:32.317 --> 00:19:34.419
And then your highest used

00:19:34.679 --> 00:19:35.799
features is usually a

00:19:36.381 --> 00:19:37.362
really good place to start.

00:19:38.782 --> 00:19:40.144
The pitfall that you go into

00:19:40.384 --> 00:19:41.904
is putting too much nuance

00:19:41.924 --> 00:19:43.145
in a lot of these tests, right?

00:19:43.486 --> 00:19:44.567
What if they click into this

00:19:44.626 --> 00:19:45.767
and click out of that and

00:19:45.807 --> 00:19:47.449
then open this menu and whatever,

00:19:48.509 --> 00:19:49.950
keeping them very coherent

00:19:50.250 --> 00:19:51.770
and legible and kind of

00:19:51.872 --> 00:19:53.031
focused on the thing that

00:19:53.071 --> 00:19:55.594
they're testing is the

00:19:55.614 --> 00:19:56.994
important piece of having

00:19:57.095 --> 00:19:58.375
efficient tests that you can maintain.

00:19:59.417 --> 00:20:00.539
I saw Will smirking there,

00:20:00.660 --> 00:20:01.942
and I know he's just

00:20:02.021 --> 00:20:03.505
entered into a new glorious

00:20:03.525 --> 00:20:05.166
position at his organization.

00:20:05.227 --> 00:20:06.769
So maybe he has some unique

00:20:06.848 --> 00:20:08.151
insight that he's

00:20:08.392 --> 00:20:10.234
interested in blessing us with.

00:20:11.108 --> 00:20:11.388
No,

00:20:11.429 --> 00:20:13.671
I was curious because this is an

00:20:13.711 --> 00:20:14.972
opportunity for me to throw

00:20:15.073 --> 00:20:17.634
in a buzzword that's trending.

00:20:17.674 --> 00:20:20.137
And so once the episode is transcribed,

00:20:20.538 --> 00:20:21.999
we'll just go viral on that.

00:20:22.058 --> 00:20:24.422
So does AI play a role in

00:20:24.461 --> 00:20:25.923
helping figure out that

00:20:26.002 --> 00:20:28.325
type of user flow in the

00:20:28.365 --> 00:20:31.167
different like odd places you can end up?

00:20:32.741 --> 00:20:33.363
Good question.

00:20:34.403 --> 00:20:36.525
Not to my knowledge yet.

00:20:36.785 --> 00:20:37.905
AI is really good at some

00:20:37.925 --> 00:20:39.748
things and really bad at some things.

00:20:39.807 --> 00:20:42.009
And we haven't quite figured

00:20:42.089 --> 00:20:44.652
out how to give it enough

00:20:44.692 --> 00:20:46.492
context to understand how

00:20:46.573 --> 00:20:48.414
it should go about testing your app.

00:20:49.715 --> 00:20:51.136
We do have some really cool

00:20:51.257 --> 00:20:52.958
AI tools at Rainforest.

00:20:55.976 --> 00:20:56.976
determine what your test

00:20:56.996 --> 00:20:57.957
coverage should be.

00:20:58.396 --> 00:21:00.176
Rather, that's kind of left up to you,

00:21:00.457 --> 00:21:02.377
and then it helps you write the test.

00:21:03.157 --> 00:21:05.719
So what we have is entering a prompt.

00:21:06.019 --> 00:21:08.179
Say it could be something pretty generic.

00:21:08.439 --> 00:21:10.660
Log in and add an item to

00:21:10.680 --> 00:21:11.700
the cart and checkout,

00:21:11.859 --> 00:21:12.440
something like that.

00:21:12.960 --> 00:21:14.040
And it will generate your

00:21:14.080 --> 00:21:15.500
rainforest steps for you.

00:21:15.840 --> 00:21:19.602
So during execution, AI is left out of it.

00:21:19.642 --> 00:21:20.902
It does the initial generation,

00:21:20.981 --> 00:21:22.803
and then we just execute things normally.

00:21:23.452 --> 00:21:25.214
And then we have some

00:21:25.275 --> 00:21:27.116
self-healing functionality.

00:21:27.156 --> 00:21:28.838
So it fails on something

00:21:28.858 --> 00:21:29.680
that we generated.

00:21:29.700 --> 00:21:30.601
We're going to try and

00:21:30.641 --> 00:21:31.803
regenerate those steps.

00:21:32.542 --> 00:21:34.306
And what's really nice about

00:21:34.346 --> 00:21:38.029
that is since Rainforest is a visual tool,

00:21:39.550 --> 00:21:41.773
we identify things on the

00:21:41.814 --> 00:21:43.415
screen based on screenshots.

00:21:45.188 --> 00:21:46.689
it's possible for you to

00:21:46.749 --> 00:21:48.368
make slight visual changes.

00:21:48.469 --> 00:21:50.529
And now that image doesn't quite match up.

00:21:50.609 --> 00:21:51.611
Your test might fail.

00:21:51.990 --> 00:21:52.770
You don't want to have to go

00:21:52.790 --> 00:21:54.011
back in and retake all of

00:21:54.031 --> 00:21:54.912
those screenshots.

00:21:55.872 --> 00:21:57.952
But since it's generated by AI,

00:21:58.032 --> 00:21:59.874
it could go back, follow the same steps,

00:21:59.933 --> 00:22:01.034
and realize this is what

00:22:01.054 --> 00:22:01.815
the button is here.

00:22:02.654 --> 00:22:04.516
It would be really cool if it could

00:22:05.276 --> 00:22:06.057
kind of add that test

00:22:06.076 --> 00:22:07.137
coverage for you or like

00:22:07.218 --> 00:22:09.159
tell you what you should be testing.

00:22:10.039 --> 00:22:11.020
We've poked at that a few

00:22:11.080 --> 00:22:12.842
times and it's honestly

00:22:12.862 --> 00:22:13.823
just really dumb in that

00:22:13.903 --> 00:22:14.884
aspect and doesn't really

00:22:14.923 --> 00:22:16.224
give you anything useful.

00:22:16.924 --> 00:22:17.526
It's like, yeah,

00:22:17.546 --> 00:22:18.946
go go test all the things

00:22:18.987 --> 00:22:20.028
and make sure things work.

00:22:20.107 --> 00:22:20.949
And it's like, cool.

00:22:20.969 --> 00:22:22.069
Yeah, I knew that.

00:22:22.089 --> 00:22:22.529
Thank you.

00:22:25.271 --> 00:22:26.212
Yes, they get smarter.

00:22:29.366 --> 00:22:30.307
I feel like part of the

00:22:30.347 --> 00:22:32.788
answer is also the domain you're in.

00:22:32.808 --> 00:22:33.669
I know something that we

00:22:33.689 --> 00:22:34.349
haven't talked about is

00:22:34.390 --> 00:22:35.529
like really at the top of

00:22:35.549 --> 00:22:37.751
the test pyramid is exploratory testing.

00:22:38.132 --> 00:22:39.772
Whereas like add your

00:22:39.792 --> 00:22:41.874
creative human instincts to

00:22:42.013 --> 00:22:43.074
where bugs could

00:22:43.115 --> 00:22:44.335
potentially pop up while

00:22:44.355 --> 00:22:45.715
you're looking at an interface or

00:22:46.135 --> 00:22:46.876
or API,

00:22:47.037 --> 00:22:49.239
and I don't think we're doing

00:22:49.278 --> 00:22:50.200
anything wrong in the

00:22:50.240 --> 00:22:52.142
creation of AI and LLM models.

00:22:52.221 --> 00:22:54.243
It's removing the creativity from them.

00:22:55.164 --> 00:22:57.106
And I think that that harms us here.

00:22:57.527 --> 00:22:58.708
But there has been one area,

00:22:58.808 --> 00:23:01.250
especially within things like protocol,

00:23:01.431 --> 00:23:03.692
protocol creation or SDKs

00:23:04.471 --> 00:23:06.211
interfaces for the services.

00:23:06.873 --> 00:23:07.192
And that's,

00:23:07.532 --> 00:23:08.772
I think the key word is fuzzing.

00:23:09.133 --> 00:23:11.114
So trying an LM,

00:23:11.473 --> 00:23:13.255
any sort of AI can spam

00:23:13.295 --> 00:23:14.414
with almost a more

00:23:14.454 --> 00:23:15.494
intelligent brute force

00:23:15.515 --> 00:23:17.236
strategy about what sorts

00:23:17.276 --> 00:23:19.217
of inputs tend to break

00:23:20.076 --> 00:23:20.916
your interface or your

00:23:20.957 --> 00:23:21.817
service or your product,

00:23:22.277 --> 00:23:24.317
and then use that as a

00:23:24.377 --> 00:23:25.919
potential test that you can

00:23:25.939 --> 00:23:26.699
commit longer term.

00:23:27.298 --> 00:23:28.479
And again, it's not for everything.

00:23:28.499 --> 00:23:28.618
Like,

00:23:28.638 --> 00:23:30.099
I don't think it really works so much

00:23:30.140 --> 00:23:31.180
in a UI world,

00:23:31.859 --> 00:23:33.460
but definitely depending on

00:23:33.480 --> 00:23:34.881
what your service or interface is doing,

00:23:35.060 --> 00:23:37.401
stuff in the crypto space, cryptography,

00:23:37.520 --> 00:23:41.281
not blockchain, just to be clear.

00:23:43.001 --> 00:23:44.522
I feel like that was a dig there, Warren.

00:23:44.722 --> 00:23:45.482
What are you trying to say?

00:23:45.502 --> 00:23:47.883
You know,

00:23:47.942 --> 00:23:49.423
it's not the sort of thing I want

00:23:49.443 --> 00:23:51.203
to bring up on an episode, Will.

00:23:51.223 --> 00:23:55.025
You don't want a record, huh?

00:23:57.142 --> 00:23:58.022
Yeah, definitely not on record.

00:23:58.222 --> 00:24:00.325
We do cryptography because

00:24:00.365 --> 00:24:01.646
we're really into security

00:24:01.686 --> 00:24:02.027
and deep there.

00:24:02.047 --> 00:24:03.709
And we're not building our own crypto,

00:24:03.749 --> 00:24:07.353
but we're very high users of it.

00:24:07.452 --> 00:24:10.255
Everything JWT creation or JWT creation,

00:24:10.895 --> 00:24:12.017
every single different kind

00:24:12.176 --> 00:24:13.259
of algorithm strategy,

00:24:13.298 --> 00:24:14.299
we end up utilizing these.

00:24:14.359 --> 00:24:15.780
And so finding where we're

00:24:15.800 --> 00:24:16.741
not using libraries

00:24:16.781 --> 00:24:17.942
effectively is certainly an

00:24:18.083 --> 00:24:20.226
area that we've potentially looked into.

00:24:21.826 --> 00:24:23.888
Actually, according to our company bylaws,

00:24:23.909 --> 00:24:24.548
we're not allowed to do

00:24:24.690 --> 00:24:26.871
anything regarding cryptocurrency.

00:24:27.011 --> 00:24:29.273
It's actually not allowed by

00:24:29.294 --> 00:24:30.134
the country of Switzerland

00:24:30.153 --> 00:24:31.454
for us to get involved in any way.

00:24:31.494 --> 00:24:32.516
We can't accept payments.

00:24:32.757 --> 00:24:34.117
We can't pay people in crypto.

00:24:34.357 --> 00:24:35.318
We can't even think about

00:24:36.038 --> 00:24:37.641
consulting for companies

00:24:37.681 --> 00:24:40.083
that want to do something crypto related.

00:24:41.763 --> 00:24:42.744
That's discrimination.

00:24:46.365 --> 00:24:47.685
I work in HPC and I'm pretty

00:24:47.705 --> 00:24:48.707
sure like some of the

00:24:48.787 --> 00:24:50.107
admins will just kind of

00:24:50.208 --> 00:24:51.009
use like a little bit of

00:24:51.028 --> 00:24:52.109
the compute power from

00:24:52.150 --> 00:24:53.009
different clusters that

00:24:53.049 --> 00:24:54.010
they have to be running

00:24:54.090 --> 00:24:55.251
different crypto schemes.

00:24:55.833 --> 00:24:56.893
But I haven't,

00:24:57.034 --> 00:24:57.773
I haven't like a hundred

00:24:57.814 --> 00:24:59.095
percent caught anybody, but I'm just,

00:24:59.194 --> 00:25:00.155
I'm waiting for the day.

00:25:00.276 --> 00:25:01.037
I'm waiting for it.

00:25:01.949 --> 00:25:02.608
Not to tell on them.

00:25:02.648 --> 00:25:03.430
I just want to know because

00:25:03.450 --> 00:25:04.069
I'm super nosy.

00:25:04.410 --> 00:25:06.270
I just like knowing things like this.

00:25:06.290 --> 00:25:06.912
You're not going to tell on

00:25:06.951 --> 00:25:08.392
them as long as they cut you in?

00:25:08.813 --> 00:25:10.373
Yeah, that's right.

00:25:10.573 --> 00:25:11.094
That's the scheme.

00:25:11.173 --> 00:25:12.173
It's like when my website

00:25:12.213 --> 00:25:13.474
got hacked by that Chinese

00:25:13.515 --> 00:25:15.776
jewelry store and I was like, guys,

00:25:15.816 --> 00:25:17.656
if you would just give me a cut,

00:25:17.696 --> 00:25:18.577
this would be fine.

00:25:18.617 --> 00:25:19.157
It was nice jewelry.

00:25:19.178 --> 00:25:21.179
I mean,

00:25:21.878 --> 00:25:22.839
I think that really is expert

00:25:22.859 --> 00:25:25.101
advice from our resident ML

00:25:25.661 --> 00:25:28.623
expert here because... Get

00:25:29.063 --> 00:25:29.742
in on the scheme?

00:25:29.762 --> 00:25:30.703
Well, yeah, I mean, Amazon...

00:25:31.997 --> 00:25:32.396
Yeah, no,

00:25:32.416 --> 00:25:33.676
because AWS just came out and

00:25:33.717 --> 00:25:35.857
said that the strategy of

00:25:36.157 --> 00:25:38.318
sharing reservations across

00:25:38.499 --> 00:25:39.739
customer AWS accounts,

00:25:39.759 --> 00:25:40.739
like if you're a consultant

00:25:40.778 --> 00:25:42.539
that does bundling for

00:25:43.059 --> 00:25:44.200
instance reservations or

00:25:44.220 --> 00:25:45.121
compute reservations,

00:25:45.401 --> 00:25:46.361
you no longer can pass

00:25:46.381 --> 00:25:48.201
along that savings to the customer.

00:25:48.520 --> 00:25:48.701
I mean,

00:25:48.741 --> 00:25:49.481
what are they going to do with all

00:25:49.501 --> 00:25:50.801
this excess capacity now

00:25:50.942 --> 00:25:52.982
other than some good old

00:25:53.022 --> 00:25:54.143
fashioned Bitcoin mining?

00:25:55.480 --> 00:25:56.981
I don't know I don't know I

00:25:57.021 --> 00:25:58.742
mean we could be making

00:25:58.782 --> 00:25:59.723
drugs for autoimmune

00:25:59.743 --> 00:26:02.086
diseases and cancer or or

00:26:02.486 --> 00:26:03.346
we could be making some

00:26:03.365 --> 00:26:12.573
cold hard cash I don't know

00:26:12.593 --> 00:26:13.773
you know it's not it's not

00:26:13.814 --> 00:26:15.074
an either or there's plenty

00:26:15.114 --> 00:26:16.634
of compute power these guys

00:26:16.675 --> 00:26:17.996
have you know they're

00:26:18.436 --> 00:26:19.396
spinning up plenty of aws

00:26:19.436 --> 00:26:20.617
things they're not going to

00:26:20.637 --> 00:26:22.599
notice if that last ten

00:26:22.640 --> 00:26:24.020
percent is using crypto

00:26:26.567 --> 00:26:27.788
So when this episode

00:26:27.828 --> 00:26:28.930
launches and we all get

00:26:29.269 --> 00:26:31.672
blocked from our respective AWS accounts,

00:26:31.991 --> 00:26:33.153
we can just reflect on this

00:26:33.232 --> 00:26:34.093
moment fondly.

00:26:34.133 --> 00:26:38.856
So, I mean, for the record,

00:26:39.017 --> 00:26:40.438
AWS isn't going to block you because the

00:26:42.366 --> 00:26:44.189
ROI on utilizing cloud

00:26:44.229 --> 00:26:46.210
resources to mine crypto is

00:26:46.309 --> 00:26:47.711
so low that you're pretty

00:26:47.770 --> 00:26:49.853
much just paying AWS.

00:26:50.753 --> 00:26:52.275
But it is a good indication

00:26:52.315 --> 00:26:53.355
that there is malicious

00:26:53.655 --> 00:26:54.957
activity happening on your account.

00:26:54.977 --> 00:26:55.757
So it is something that they

00:26:55.777 --> 00:26:57.378
will for sure investigate.

00:26:58.159 --> 00:26:59.820
And that I think is as much

00:26:59.861 --> 00:27:01.842
of a tangent on this that I

00:27:01.902 --> 00:27:03.743
want to go down for today.

00:27:04.845 --> 00:27:05.766
I think we should talk about

00:27:05.806 --> 00:27:07.548
the low code with Rainforest.

00:27:07.709 --> 00:27:08.971
I love low code stuff.

00:27:09.211 --> 00:27:10.553
How did this come about and

00:27:12.115 --> 00:27:12.736
how does it work?

00:27:12.816 --> 00:27:13.978
I want to know all about it.

00:27:15.276 --> 00:27:17.977
yeah for sure um so when I

00:27:18.237 --> 00:27:19.196
first joined rainforest

00:27:19.237 --> 00:27:20.876
over seven years ago our

00:27:20.916 --> 00:27:21.856
model was a bit different

00:27:21.876 --> 00:27:22.916
we had a bunch of human

00:27:23.096 --> 00:27:24.577
testers it was kind of the

00:27:24.657 --> 00:27:26.998
gig uber model of I have

00:27:27.018 --> 00:27:28.038
something I want to test

00:27:28.458 --> 00:27:29.419
here's my test cases

00:27:29.439 --> 00:27:30.098
they're all written in

00:27:30.138 --> 00:27:32.058
plain english and we'll

00:27:32.098 --> 00:27:33.098
provide a bunch of humans

00:27:33.159 --> 00:27:35.700
for you to to go test your

00:27:35.720 --> 00:27:37.779
application right including

00:27:37.819 --> 00:27:39.019
some exploratory stuff like

00:27:39.039 --> 00:27:40.240
you mentioned go click all

00:27:40.280 --> 00:27:41.721
over this page and try and

00:27:41.760 --> 00:27:42.621
find problems with it

00:27:43.661 --> 00:27:45.141
And that worked really well.

00:27:46.321 --> 00:27:48.061
It was true end-to-end testing.

00:27:48.501 --> 00:27:50.803
We load your app in a

00:27:51.643 --> 00:27:53.962
virtual machine inside of a web browser.

00:27:54.522 --> 00:27:55.243
They're actually clicking

00:27:55.284 --> 00:27:56.423
the buttons and confirming

00:27:56.443 --> 00:27:57.443
there's things on the screen.

00:27:58.223 --> 00:27:59.483
But what we found is that

00:27:59.544 --> 00:28:01.884
humans are inefficient and expensive,

00:28:02.005 --> 00:28:02.625
as we all know.

00:28:02.644 --> 00:28:04.065
That's why we have automation, right?

00:28:05.185 --> 00:28:06.685
And so we kind of shifted

00:28:07.645 --> 00:28:08.445
Over to automation,

00:28:08.486 --> 00:28:09.767
but we want to do something

00:28:09.906 --> 00:28:10.926
a bit different from what

00:28:10.946 --> 00:28:11.948
everyone else was doing,

00:28:11.988 --> 00:28:14.528
which is these code based tools,

00:28:15.328 --> 00:28:17.029
Dom based interactions,

00:28:17.470 --> 00:28:18.970
and instead we built it all

00:28:19.069 --> 00:28:20.030
on the visual layer.

00:28:21.131 --> 00:28:22.991
So the way it works is.

00:28:24.085 --> 00:28:25.445
you go in you load your app

00:28:26.106 --> 00:28:27.387
and uh you essentially just

00:28:27.407 --> 00:28:28.488
like take screenshots of

00:28:28.528 --> 00:28:29.909
things right click on this

00:28:30.509 --> 00:28:33.432
um type into this field uh

00:28:33.451 --> 00:28:35.493
I can give it an ai an ai

00:28:35.554 --> 00:28:36.914
prompt and say you know log

00:28:36.994 --> 00:28:38.736
in and check check out in

00:28:38.756 --> 00:28:41.258
the cart and then when you

00:28:41.317 --> 00:28:43.720
execute things it loads in

00:28:43.779 --> 00:28:45.181
the same environment right

00:28:45.201 --> 00:28:46.301
you have your your staging

00:28:46.342 --> 00:28:48.503
environment hopefully you have some um

00:28:49.263 --> 00:28:52.145
some seed data with login information.

00:28:52.165 --> 00:28:53.707
You can load that all in the rainforest.

00:28:54.106 --> 00:28:55.887
It goes in and runs this

00:28:55.928 --> 00:28:58.189
whole workflow for you.

00:28:58.209 --> 00:28:59.930
The output of it is a video

00:29:00.089 --> 00:29:01.230
of the thing being tested.

00:29:01.871 --> 00:29:03.551
Results on each step.

00:29:04.972 --> 00:29:06.554
Things like HTTP logs,

00:29:06.854 --> 00:29:08.234
JavaScript console logs,

00:29:08.535 --> 00:29:09.615
all the information that

00:29:09.634 --> 00:29:11.215
you need to actually debug

00:29:11.256 --> 00:29:12.237
things when something

00:29:12.257 --> 00:29:13.597
breaks instead of it just saying,

00:29:13.617 --> 00:29:13.778
you know,

00:29:13.798 --> 00:29:15.719
like in a unit test and it's like failure,

00:29:15.778 --> 00:29:16.898
like one does not equal two.

00:29:18.746 --> 00:29:20.826
And so by doing things at

00:29:20.866 --> 00:29:22.008
that visual level,

00:29:22.268 --> 00:29:23.749
it offers a lot of flexibility.

00:29:24.410 --> 00:29:25.369
The first thing is that

00:29:25.390 --> 00:29:26.990
we're not stuck inside of the browser,

00:29:27.291 --> 00:29:27.551
right?

00:29:28.672 --> 00:29:32.414
We do primarily focus on web-based testing,

00:29:32.795 --> 00:29:33.556
but that does not mean

00:29:33.596 --> 00:29:35.196
you're stuck inside of the browser.

00:29:36.207 --> 00:29:37.449
it means you can do things

00:29:37.509 --> 00:29:39.570
like install a Chrome extension, right?

00:29:39.691 --> 00:29:41.153
Open another tab in your browser,

00:29:41.432 --> 00:29:42.894
install a Chrome extension,

00:29:43.174 --> 00:29:43.855
interact with that

00:29:43.895 --> 00:29:45.458
extension because while

00:29:45.478 --> 00:29:46.940
you're still inside the browser,

00:29:46.980 --> 00:29:48.342
you're outside of the scope

00:29:48.582 --> 00:29:49.863
of that webpage where you

00:29:49.942 --> 00:29:51.085
usually are interacting

00:29:51.644 --> 00:29:52.547
just through the DOM.

00:29:54.347 --> 00:29:57.432
You can install some type of

00:29:57.512 --> 00:29:58.875
desktop application and

00:29:58.914 --> 00:29:59.756
test it through there

00:29:59.816 --> 00:30:01.518
because since we're working

00:30:01.557 --> 00:30:02.378
at the visual layer,

00:30:02.460 --> 00:30:04.422
it doesn't care what you're testing.

00:30:04.461 --> 00:30:06.265
It doesn't care what your tech stack is.

00:30:06.285 --> 00:30:08.186
It just cares that it loads

00:30:08.228 --> 00:30:08.847
in the machine.

00:30:10.048 --> 00:30:12.630
And it also offers a lot of

00:30:14.330 --> 00:30:17.852
more flexible and robust in

00:30:17.932 --> 00:30:19.412
avoiding flakiness and

00:30:19.451 --> 00:30:20.893
brittleness to small changes.

00:30:21.333 --> 00:30:23.013
We have fallback methods.

00:30:23.253 --> 00:30:24.973
As much as I've been kind of

00:30:25.013 --> 00:30:26.914
hammering that testing with

00:30:26.934 --> 00:30:28.134
the DOM is not a great idea,

00:30:28.275 --> 00:30:29.796
we do offer DOM fallbacks

00:30:30.455 --> 00:30:31.636
because sometimes it makes sense.

00:30:31.676 --> 00:30:32.836
Sometimes I don't care about

00:30:32.856 --> 00:30:34.637
the visual appearance of the button,

00:30:34.657 --> 00:30:36.038
and all I care about is

00:30:36.938 --> 00:30:38.338
that there's a button there, right?

00:30:40.140 --> 00:30:40.859
in reality,

00:30:41.000 --> 00:30:43.240
there are variables that we can't control,

00:30:43.320 --> 00:30:43.601
right?

00:30:44.281 --> 00:30:46.182
A very common scenario is my

00:30:46.222 --> 00:30:48.683
marketing team is running experiments.

00:30:49.044 --> 00:30:50.505
Every time I load this page,

00:30:50.545 --> 00:30:51.744
the button says something different.

00:30:51.805 --> 00:30:52.605
It looks different.

00:30:53.026 --> 00:30:54.666
And so we don't want to tie

00:30:55.007 --> 00:30:56.147
the visual appearance

00:30:57.888 --> 00:31:00.853
to the pass fail result of this test.

00:31:00.873 --> 00:31:02.094
So I'll use something else.

00:31:02.114 --> 00:31:03.256
I'll use a DOM selector.

00:31:03.615 --> 00:31:05.679
We also have like AI search.

00:31:05.699 --> 00:31:07.381
You could say something like the button,

00:31:07.421 --> 00:31:08.382
the login button at the

00:31:08.402 --> 00:31:09.202
bottom of the page.

00:31:10.124 --> 00:31:12.166
And so the important points

00:31:12.207 --> 00:31:13.208
here is you don't write any

00:31:13.248 --> 00:31:14.348
code whatsoever.

00:31:14.910 --> 00:31:16.269
We have an intuitive UI that

00:31:16.289 --> 00:31:17.371
you do all of this through,

00:31:17.851 --> 00:31:18.790
which means you don't need

00:31:18.851 --> 00:31:20.550
skilled engineers to do it.

00:31:20.590 --> 00:31:22.912
A lot of teams have QA

00:31:22.951 --> 00:31:24.511
engineers that their job is

00:31:24.571 --> 00:31:26.712
to just write tests all the time.

00:31:27.752 --> 00:31:29.913
Other teams,

00:31:30.354 --> 00:31:31.673
the engineer is responsible

00:31:31.693 --> 00:31:32.855
for writing these tests,

00:31:32.994 --> 00:31:34.914
but they need very specific

00:31:34.974 --> 00:31:36.194
domain knowledge.

00:31:36.315 --> 00:31:37.135
I need to know

00:31:38.576 --> 00:31:39.477
about the thing that I'm

00:31:39.517 --> 00:31:41.077
testing like from a product

00:31:41.097 --> 00:31:41.897
standpoint what does this

00:31:41.938 --> 00:31:42.959
thing do I need to

00:31:43.058 --> 00:31:44.799
understand the code I need

00:31:44.819 --> 00:31:45.960
to know how to write these

00:31:46.000 --> 00:31:48.461
tests with a no code

00:31:48.481 --> 00:31:49.842
solution anybody can do

00:31:49.883 --> 00:31:52.203
this right it's it's up to

00:31:52.304 --> 00:31:54.765
your team who owns quality

00:31:54.785 --> 00:31:57.527
who owns these tests for us

00:31:57.767 --> 00:31:59.548
it is usually the the

00:31:59.647 --> 00:32:01.209
engineer that is shipping

00:32:01.249 --> 00:32:02.148
the code we write the

00:32:02.189 --> 00:32:03.910
rainforest tests with it or

00:32:03.990 --> 00:32:05.151
our product and design team

00:32:05.250 --> 00:32:06.531
owns it because like I was saying

00:32:06.832 --> 00:32:08.932
They're very tied to our user workflows,

00:32:08.992 --> 00:32:09.173
right?

00:32:09.192 --> 00:32:09.553
They're like,

00:32:09.613 --> 00:32:11.153
this is how we designed this thing.

00:32:11.773 --> 00:32:13.015
Engineers are going to build it.

00:32:13.394 --> 00:32:15.075
And then any of us that have

00:32:15.275 --> 00:32:16.596
knowledge about how this

00:32:16.675 --> 00:32:17.536
user flow is supposed to

00:32:17.615 --> 00:32:19.237
work can own this test.

00:32:20.017 --> 00:32:21.597
So it makes it much easier

00:32:21.657 --> 00:32:23.858
to both write and maintain

00:32:23.878 --> 00:32:25.078
your tests over time.

00:32:25.579 --> 00:32:26.180
And then, you know,

00:32:26.200 --> 00:32:27.079
if that person leaves your

00:32:27.119 --> 00:32:28.421
company and has all of that

00:32:28.721 --> 00:32:30.241
domain knowledge on how it works,

00:32:30.521 --> 00:32:31.201
you just need someone who

00:32:31.241 --> 00:32:32.423
knows how the app works and

00:32:32.442 --> 00:32:33.623
they can update your test suite.

00:32:34.332 --> 00:32:34.791
Now,

00:32:34.811 --> 00:32:35.932
I feel like one of the biggest

00:32:35.992 --> 00:32:37.773
mistakes that I keep seeing

00:32:37.874 --> 00:32:38.815
over the course of my

00:32:38.855 --> 00:32:41.036
career is as companies grow,

00:32:41.076 --> 00:32:42.116
they tend to have more,

00:32:43.137 --> 00:32:45.298
allegedly more software, more code,

00:32:46.099 --> 00:32:47.421
which may or may not end up

00:32:47.461 --> 00:32:50.162
in a giant ball of mud mass

00:32:50.201 --> 00:32:52.183
or even an extensive number

00:32:52.403 --> 00:32:53.904
of quote unquote

00:32:53.964 --> 00:32:55.846
microservices that

00:32:55.905 --> 00:32:56.807
communicate and really

00:32:56.967 --> 00:32:57.767
depend on each other.

00:32:59.028 --> 00:32:59.868
there was always this

00:33:00.288 --> 00:33:02.050
challenge by someone who

00:33:02.112 --> 00:33:04.614
wanted to have a test that

00:33:04.755 --> 00:33:06.016
required somehow

00:33:06.096 --> 00:33:07.557
interacting with all of these components.

00:33:09.231 --> 00:33:10.471
And they never really could

00:33:10.512 --> 00:33:12.053
understand that one of the

00:33:12.073 --> 00:33:12.673
whole points of

00:33:12.833 --> 00:33:15.173
microservices was to isolate testing.

00:33:15.634 --> 00:33:17.734
But I think we live in the reality,

00:33:17.755 --> 00:33:18.596
which is there are some

00:33:18.635 --> 00:33:20.175
companies that do have a

00:33:20.236 --> 00:33:21.656
giant ball of mud that have

00:33:21.997 --> 00:33:23.537
thousands of binaries that

00:33:23.576 --> 00:33:25.117
have to be installed and running servers.

00:33:25.617 --> 00:33:27.219
Is there a strategy that,

00:33:27.638 --> 00:33:29.579
I don't mean to pick on your company.

00:33:29.700 --> 00:33:30.500
I don't know if there,

00:33:30.559 --> 00:33:31.380
I don't think there is a strategy.

00:33:31.400 --> 00:33:32.020
I think the strategy is

00:33:32.121 --> 00:33:32.901
write microservices,

00:33:33.240 --> 00:33:35.182
but I can imagine that, you know,

00:33:36.021 --> 00:33:36.923
as a SaaS company,

00:33:36.942 --> 00:33:37.563
the last thing we want to

00:33:37.603 --> 00:33:39.064
tell our customers is, yeah,

00:33:40.203 --> 00:33:41.644
have you tried not having that problem?

00:33:43.986 --> 00:33:44.987
Have you tried writing to

00:33:45.007 --> 00:33:45.747
your package manager?

00:33:45.886 --> 00:33:47.788
That tends to be the solution that I see.

00:33:47.807 --> 00:33:48.989
That one is everybody's favorite.

00:33:50.037 --> 00:33:52.678
Yeah, distributed monolith always works.

00:33:52.817 --> 00:33:53.838
Publish all your binaries

00:33:53.858 --> 00:33:54.999
that remotely depend on

00:33:55.019 --> 00:33:56.099
each other to a third party

00:33:56.119 --> 00:33:57.240
solution and then pull

00:33:57.259 --> 00:33:58.161
those out at runtime.

00:33:59.280 --> 00:33:59.902
Always works.

00:34:00.082 --> 00:34:00.882
Best solution ever.

00:34:01.662 --> 00:34:02.143
Maybe AJ,

00:34:02.182 --> 00:34:04.064
you have some insight here on

00:34:04.743 --> 00:34:05.644
either something that works

00:34:05.703 --> 00:34:06.384
or something that works

00:34:06.404 --> 00:34:07.865
with Rainforest QA to deal

00:34:07.884 --> 00:34:08.806
with those situations.

00:34:08.846 --> 00:34:09.826
Or maybe you just, you know,

00:34:09.885 --> 00:34:11.126
it's not something that is handled today.

00:34:12.027 --> 00:34:12.527
Yeah, for sure.

00:34:12.788 --> 00:34:13.487
We do have a bunch of

00:34:13.527 --> 00:34:14.949
different microservices running.

00:34:15.550 --> 00:34:17.150
And I think I'm going to

00:34:17.170 --> 00:34:19.693
refer back to the testing pyramid, right?

00:34:20.213 --> 00:34:21.134
Is we test each one of those

00:34:21.173 --> 00:34:22.755
microservices in isolation.

00:34:22.994 --> 00:34:23.554
Absolutely.

00:34:24.076 --> 00:34:26.077
Maybe we test as we go up to

00:34:26.097 --> 00:34:27.737
the next layer of our integration test,

00:34:27.958 --> 00:34:30.460
we test some interactions between them,

00:34:30.519 --> 00:34:30.760
right?

00:34:31.079 --> 00:34:32.541
The kind of core integration.

00:34:33.501 --> 00:34:35.083
you know, handshake interactions,

00:34:35.182 --> 00:34:37.724
whatever is the the main

00:34:37.764 --> 00:34:38.864
functionality of these two

00:34:38.905 --> 00:34:40.465
microservices talking to each other.

00:34:40.565 --> 00:34:41.766
Maybe we have some tests there.

00:34:42.347 --> 00:34:43.507
But at the end of the day,

00:34:43.588 --> 00:34:45.889
these end to end tests are comprehensive,

00:34:46.248 --> 00:34:47.130
right?

00:34:47.289 --> 00:34:48.510
If anything in that

00:34:48.550 --> 00:34:50.271
microservice architecture is failing,

00:34:50.351 --> 00:34:52.693
presumably my test is going to fail.

00:34:53.313 --> 00:34:54.494
And at the end of the day,

00:34:54.833 --> 00:34:56.215
all we really care about in

00:34:56.255 --> 00:34:57.735
theory is what the user

00:34:57.775 --> 00:34:59.456
gets when they're interacting with it.

00:35:00.137 --> 00:35:01.818
So if I'm just clicking a button,

00:35:01.978 --> 00:35:03.119
maybe there's a thousand

00:35:03.139 --> 00:35:05.141
microservices that are involved in this,

00:35:05.782 --> 00:35:07.364
and maybe I'm not directly

00:35:07.403 --> 00:35:08.764
testing each one of those.

00:35:09.025 --> 00:35:10.166
But by implementing it as an

00:35:10.286 --> 00:35:11.146
end to end test,

00:35:11.688 --> 00:35:13.048
I am very confident that

00:35:13.068 --> 00:35:14.070
they're all working because

00:35:14.090 --> 00:35:14.831
my test passed.

00:35:15.891 --> 00:35:17.853
And so being smart about how

00:35:17.873 --> 00:35:18.853
you implement each one of

00:35:18.893 --> 00:35:22.215
those layers in an efficient way, right?

00:35:22.396 --> 00:35:24.157
Lots of unit tests on each

00:35:24.257 --> 00:35:25.597
microservice and then this

00:35:26.079 --> 00:35:27.260
overarching test that just

00:35:27.300 --> 00:35:28.300
makes sure everything is

00:35:28.340 --> 00:35:30.342
working together is usually

00:35:30.362 --> 00:35:31.623
the way to go about this.

00:35:32.181 --> 00:35:32.322
I mean,

00:35:32.362 --> 00:35:33.081
maybe it's a technical

00:35:33.121 --> 00:35:34.282
implementation question.

00:35:34.382 --> 00:35:34.543
Like,

00:35:34.623 --> 00:35:36.623
where is the environment running that

00:35:36.682 --> 00:35:37.804
the Rainforest tests are

00:35:37.864 --> 00:35:38.684
actually executing?

00:35:38.923 --> 00:35:40.585
Is this some sort of binary

00:35:40.625 --> 00:35:42.905
or CLI that's run on the client side?

00:35:43.025 --> 00:35:45.585
Or are they sharing with you

00:35:45.726 --> 00:35:47.626
a set of microservices with

00:35:47.847 --> 00:35:49.106
deployment instructions so

00:35:49.126 --> 00:35:49.987
that you can run them

00:35:50.027 --> 00:35:51.088
within your own infrastructure?

00:35:51.990 --> 00:35:52.251
Sure,

00:35:52.630 --> 00:35:55.311
usually our requirement is that you

00:35:55.333 --> 00:35:56.393
need to be able to access

00:35:56.452 --> 00:35:57.893
it via a web URL.

00:35:58.313 --> 00:36:00.235
So the kind of standard way

00:36:00.414 --> 00:36:01.614
that a Rainforest test is

00:36:01.675 --> 00:36:03.396
run is we provide you a VM

00:36:04.617 --> 00:36:05.916
and that VM has a browser

00:36:05.976 --> 00:36:08.998
on it so I can specify Chrome on Windows.

00:36:09.139 --> 00:36:11.840
And the first step of your

00:36:11.880 --> 00:36:14.740
test is going to be a navigation.

00:36:14.780 --> 00:36:16.021
Navigate to this URL.

00:36:16.061 --> 00:36:17.422
This is where my web app lives.

00:36:19.226 --> 00:36:20.528
There are some different use

00:36:20.548 --> 00:36:21.489
cases where you can

00:36:21.570 --> 00:36:22.972
absolutely go download a

00:36:22.992 --> 00:36:24.454
binary and install it and

00:36:24.494 --> 00:36:26.315
do whatever you want with it.

00:36:26.416 --> 00:36:27.277
Our out of the box

00:36:27.318 --> 00:36:29.440
functionality is to

00:36:29.760 --> 00:36:31.402
primarily test those web apps.

00:36:32.184 --> 00:36:33.826
So that's where we focus,

00:36:33.846 --> 00:36:34.827
but you certainly have the

00:36:34.847 --> 00:36:36.188
flexibility to do whatever

00:36:36.208 --> 00:36:37.271
you want with those VMs.

00:36:37.751 --> 00:36:38.552
No, I mean, I think,

00:36:38.652 --> 00:36:39.675
I think that approach is genius.

00:36:39.715 --> 00:36:40.916
Basically it's out of scope

00:36:40.956 --> 00:36:42.099
for setting up the environment,

00:36:42.139 --> 00:36:43.181
unless you want it to be in

00:36:43.242 --> 00:36:46.148
scope of which, you know, then it's a,

00:36:46.208 --> 00:36:47.269
it's a virtual machine go

00:36:47.309 --> 00:36:48.652
to town on however you want

00:36:48.672 --> 00:36:49.273
to deal with it there.

00:36:50.000 --> 00:36:50.280
Right.

00:36:50.420 --> 00:36:52.581
And by kind of forcing

00:36:52.621 --> 00:36:54.702
people to give it a public URL,

00:36:55.003 --> 00:36:58.625
we're nudging them towards good practices,

00:36:58.724 --> 00:36:59.025
right?

00:36:59.105 --> 00:36:59.644
For sure.

00:37:00.065 --> 00:37:01.286
Set up a staging environment,

00:37:01.306 --> 00:37:02.427
a QA environment,

00:37:03.067 --> 00:37:03.947
and make it mirror

00:37:03.967 --> 00:37:05.168
production as much as possible,

00:37:05.268 --> 00:37:06.449
which includes being able

00:37:06.489 --> 00:37:08.070
to navigate to it in a URL.

00:37:09.010 --> 00:37:10.530
And these are small things

00:37:10.550 --> 00:37:11.371
that we see with some of

00:37:11.411 --> 00:37:12.512
our new clients are like, well,

00:37:12.552 --> 00:37:14.333
I don't have a staging environment.

00:37:15.472 --> 00:37:16.393
And sure,

00:37:16.454 --> 00:37:17.233
I guess you could load your

00:37:17.253 --> 00:37:18.534
production environment in there,

00:37:18.614 --> 00:37:20.635
but let's show you how to

00:37:20.934 --> 00:37:22.195
test this properly and not

00:37:22.215 --> 00:37:24.436
shoot yourself in the foot.

00:37:24.476 --> 00:37:25.476
I love that you're saying that.

00:37:25.637 --> 00:37:26.697
The number one feedback I've

00:37:26.717 --> 00:37:27.597
always seen here is we

00:37:27.637 --> 00:37:28.557
can't expose our

00:37:28.637 --> 00:37:31.159
non-production environment publicly.

00:37:31.179 --> 00:37:32.219
People can't know what we're

00:37:32.438 --> 00:37:33.460
currently working on.

00:37:33.719 --> 00:37:34.380
They will use that

00:37:34.420 --> 00:37:35.599
information maliciously

00:37:35.639 --> 00:37:37.041
against our company in some way.

00:37:38.943 --> 00:37:39.023
Yeah,

00:37:39.043 --> 00:37:40.003
like what are they gonna do with it

00:37:40.043 --> 00:37:40.503
though?

00:37:41.123 --> 00:37:45.204
I have seen some interesting mistakes,

00:37:45.264 --> 00:37:46.786
like maybe we're cloning

00:37:46.846 --> 00:37:48.186
our production database and

00:37:48.246 --> 00:37:50.646
not sanitizing sensitive

00:37:50.668 --> 00:37:51.708
information from it or

00:37:51.748 --> 00:37:52.367
something like that.

00:37:52.708 --> 00:37:53.728
Yes, absolutely,

00:37:53.768 --> 00:37:55.088
you're doing some bad things,

00:37:55.949 --> 00:37:57.409
but there are certainly ways to do this.

00:37:57.710 --> 00:38:00.170
And I'm of the opinion,

00:38:00.471 --> 00:38:01.532
who cares if people are in

00:38:01.572 --> 00:38:03.311
your testing environment, like worst case,

00:38:03.351 --> 00:38:05.052
they blow up your testing environment.

00:38:06.458 --> 00:38:07.641
whatever.

00:38:07.721 --> 00:38:08.342
And in that case,

00:38:08.382 --> 00:38:10.286
you figured out how they

00:38:10.306 --> 00:38:10.806
could blow up your

00:38:10.847 --> 00:38:11.829
production environment

00:38:11.889 --> 00:38:13.331
without losing prod.

00:38:14.012 --> 00:38:14.492
Exactly.

00:38:14.512 --> 00:38:16.657
Yeah.

00:38:16.677 --> 00:38:17.378
I think there's, um,

00:38:19.380 --> 00:38:20.702
That's, you know,

00:38:20.722 --> 00:38:22.181
like part of the

00:38:22.362 --> 00:38:24.123
undocumented learning curve

00:38:24.182 --> 00:38:27.043
of working in this industry, you know,

00:38:27.063 --> 00:38:27.965
because people who are

00:38:28.045 --> 00:38:30.626
early in their careers think things like,

00:38:30.786 --> 00:38:34.188
oh, I shouldn't expose staging until,

00:38:34.847 --> 00:38:35.088
you know,

00:38:35.108 --> 00:38:36.288
they learn that that's actually

00:38:36.449 --> 00:38:37.628
probably a good thing,

00:38:37.668 --> 00:38:39.369
but like nowhere in any

00:38:40.998 --> 00:38:43.199
computer science or course

00:38:43.278 --> 00:38:45.019
or bootcamp or anything,

00:38:45.420 --> 00:38:46.981
do they cover these kinds of things?

00:38:47.021 --> 00:38:47.661
And so I think that's

00:38:47.760 --> 00:38:49.481
actually like a really

00:38:49.581 --> 00:38:52.443
valuable add on service

00:38:53.923 --> 00:38:54.445
that you get from

00:38:54.505 --> 00:38:56.025
Rainforest or that you get

00:38:56.065 --> 00:38:57.465
from working with people

00:38:57.505 --> 00:38:59.166
who are more experienced is

00:38:59.206 --> 00:39:00.307
just like learning that

00:39:00.387 --> 00:39:02.007
tribal knowledge that's

00:39:02.027 --> 00:39:03.889
gonna help you out later in your career.

00:39:04.128 --> 00:39:04.750
So you don't have to

00:39:04.829 --> 00:39:06.530
reinvent the wheel and

00:39:06.590 --> 00:39:07.510
solve problems that we

00:39:07.550 --> 00:39:08.952
actually solved years ago.

00:39:09.494 --> 00:39:11.195
I mean, that's well, I mean,

00:39:11.335 --> 00:39:12.376
we've unfortunately had to

00:39:12.476 --> 00:39:14.197
append our documentation with like,

00:39:14.478 --> 00:39:16.498
here explicitly are the

00:39:16.518 --> 00:39:17.780
sensitive pieces of data

00:39:17.820 --> 00:39:18.780
that are relevant to our

00:39:18.820 --> 00:39:19.961
third party application.

00:39:20.422 --> 00:39:21.143
This is sensitive.

00:39:21.182 --> 00:39:21.922
This is sensitive.

00:39:22.264 --> 00:39:23.684
Like, this is not sensitive.

00:39:23.764 --> 00:39:25.326
This is like the application ID,

00:39:25.385 --> 00:39:25.905
not sensitive.

00:39:25.925 --> 00:39:27.226
Like, do not try to encrypt this.

00:39:27.246 --> 00:39:28.268
Do not try to secure it

00:39:29.128 --> 00:39:29.889
because people will try.

00:39:29.929 --> 00:39:30.869
Like, how do I do this?

00:39:30.889 --> 00:39:32.811
I'm like, you can't stop it.

00:39:32.851 --> 00:39:34.213
Like, this has to be public.

00:39:35.032 --> 00:39:36.753
on your website, in your application,

00:39:36.813 --> 00:39:37.934
people have to be able to see it.

00:39:38.255 --> 00:39:39.496
You're not going to get around that.

00:39:39.695 --> 00:39:41.938
And I feel like it's more

00:39:41.978 --> 00:39:43.259
than just experience.

00:39:43.358 --> 00:39:44.398
I feel like there's a whole

00:39:44.438 --> 00:39:45.800
level of pragmatism there,

00:39:45.820 --> 00:39:47.081
like weighing the cost

00:39:47.400 --> 00:39:48.722
versus the reward of

00:39:48.862 --> 00:39:50.143
actually trying to sanitize

00:39:50.163 --> 00:39:51.063
that piece of information.

00:39:51.704 --> 00:39:53.224
And having a third party testing service,

00:39:53.264 --> 00:39:53.844
as you mentioned,

00:39:54.806 --> 00:39:56.226
just reinforces that in a

00:39:56.266 --> 00:39:57.206
way like you are going to

00:39:57.228 --> 00:39:59.208
have to expose that to be tested,

00:39:59.349 --> 00:40:01.329
must show that it's not

00:40:01.409 --> 00:40:02.490
actually sensitive information.

00:40:05.289 --> 00:40:06.170
Yeah, definitely.

00:40:06.190 --> 00:40:06.409
To me,

00:40:06.429 --> 00:40:07.911
it just reminds me of the myth of

00:40:07.951 --> 00:40:09.391
the hundred percent test coverage, right?

00:40:09.431 --> 00:40:09.710
It's like,

00:40:09.731 --> 00:40:11.172
can we a hundred percent encrypt

00:40:11.211 --> 00:40:11.711
everything?

00:40:12.311 --> 00:40:13.112
Absolutely not.

00:40:13.612 --> 00:40:15.333
Your end users need to see

00:40:15.353 --> 00:40:16.213
this information.

00:40:16.652 --> 00:40:18.114
I've seen some interesting

00:40:18.173 --> 00:40:20.094
attempts to obfuscate those things.

00:40:20.295 --> 00:40:21.355
I've seen some libraries

00:40:21.394 --> 00:40:23.416
that prevent you from

00:40:23.496 --> 00:40:24.916
opening the JavaScript console,

00:40:24.936 --> 00:40:25.596
for example.

00:40:25.655 --> 00:40:26.036
And it's like,

00:40:26.076 --> 00:40:27.137
what are you hiding in there?

00:40:27.177 --> 00:40:28.516
Maybe you should just not

00:40:28.677 --> 00:40:30.137
put sensitive things in there.

00:40:32.170 --> 00:40:33.990
Here's a wild thought.

00:40:34.050 --> 00:40:34.871
How about you just don't do that?

00:40:34.891 --> 00:40:36.351
Do you have your credentials

00:40:36.431 --> 00:40:38.572
encoded in the HTML on your page?

00:40:38.652 --> 00:40:39.934
Maybe.

00:40:40.393 --> 00:40:40.594
I mean,

00:40:40.673 --> 00:40:42.414
I can't believe you two are joking

00:40:42.454 --> 00:40:43.494
about this, honestly.

00:40:44.675 --> 00:40:45.615
One of the most common

00:40:45.695 --> 00:40:46.637
attacks against AWS accounts.

00:40:46.657 --> 00:40:47.936
So I don't do UI,

00:40:47.996 --> 00:40:49.077
so I can joke about all

00:40:49.097 --> 00:40:50.418
this because none of this is worthwhile.

00:40:50.637 --> 00:40:51.438
It's okay.

00:40:51.498 --> 00:40:52.438
Absolutely none of this.

00:40:52.458 --> 00:40:53.860
I'm just like, uh-uh.

00:40:55.050 --> 00:40:55.329
Jillian,

00:40:55.349 --> 00:40:56.630
you'll have plenty of opportunity

00:40:56.670 --> 00:40:58.231
to get your models encoded

00:40:58.291 --> 00:41:01.114
with AWS Access Keys and Secrets,

00:41:01.173 --> 00:41:02.875
and then you just ask the model, hey,

00:41:02.914 --> 00:41:03.896
can I have an Access Key

00:41:03.916 --> 00:41:05.137
and Secret that are valid

00:41:05.496 --> 00:41:06.938
that work for any AWS account?

00:41:07.518 --> 00:41:08.639
I did actually accidentally

00:41:08.679 --> 00:41:11.179
push my AWS credentials to GitHub once,

00:41:11.280 --> 00:41:12.760
and the amount of emails

00:41:12.780 --> 00:41:14.742
that I got from AWS was just like...

00:41:16.197 --> 00:41:16.898
It was unreal.

00:41:16.998 --> 00:41:17.418
It was a very,

00:41:17.458 --> 00:41:18.860
it was a very bad day for me.

00:41:18.920 --> 00:41:20.181
It was a very, very bad day.

00:41:20.460 --> 00:41:22.483
So I've done other stupid things,

00:41:22.543 --> 00:41:24.043
but I don't do the same stupid thing.

00:41:24.083 --> 00:41:25.065
So I can sit here and be

00:41:25.125 --> 00:41:27.106
very smug about this, like this.

00:41:30.728 --> 00:41:32.329
That is like, that is, I've always,

00:41:32.929 --> 00:41:34.150
I've often wondered about that.

00:41:34.190 --> 00:41:37.090
Like the speed that AWS and

00:41:37.231 --> 00:41:39.132
other malicious people can

00:41:39.231 --> 00:41:40.952
identify that you committed

00:41:41.092 --> 00:41:44.054
an AWS access key to a GitHub repo.

00:41:44.074 --> 00:41:45.014
It was instant.

00:41:45.034 --> 00:41:46.496
It was like right then.

00:41:46.516 --> 00:41:47.936
Cause as soon as I did it, I was like,

00:41:48.237 --> 00:41:48.836
oh no.

00:41:48.916 --> 00:41:50.057
And tried to, you know,

00:41:50.117 --> 00:41:51.217
and like try to like make

00:41:51.237 --> 00:41:53.599
the GitHub repo private and nope,

00:41:53.619 --> 00:41:54.440
it was instant.

00:41:54.480 --> 00:41:56.221
They knew, they knew it was out there.

00:41:56.972 --> 00:41:57.813
Yeah, I mean, it's bad.

00:41:57.873 --> 00:41:58.152
I mean,

00:41:58.574 --> 00:41:59.894
I think I saw a bunch of statistics

00:41:59.934 --> 00:42:02.538
on this that for AWS keys and on GitHub,

00:42:02.577 --> 00:42:03.699
it's about thirty seconds

00:42:03.739 --> 00:42:05.039
to two minutes having been

00:42:05.079 --> 00:42:06.280
exposed in the repository

00:42:07.141 --> 00:42:08.443
anywhere in any format.

00:42:08.483 --> 00:42:10.264
So like commit at the

00:42:10.304 --> 00:42:11.766
beginning of the repository where

00:42:12.347 --> 00:42:13.867
It was there, but then got removed.

00:42:13.907 --> 00:42:15.489
So it's not in plain text anymore.

00:42:15.509 --> 00:42:16.349
You have to go back through

00:42:16.369 --> 00:42:17.030
the get history.

00:42:17.050 --> 00:42:18.670
It's still about two minutes.

00:42:19.170 --> 00:42:21.552
Then there's exposure on

00:42:21.592 --> 00:42:23.773
Stack Overflow and places

00:42:23.813 --> 00:42:24.773
like I don't know who uses

00:42:24.853 --> 00:42:26.434
Facebook in connection with their work,

00:42:26.494 --> 00:42:27.916
but that was another place.

00:42:27.936 --> 00:42:29.315
And then Instagram and

00:42:29.376 --> 00:42:30.737
Reddit are somewhere

00:42:30.777 --> 00:42:32.978
between two and four or five days.

00:42:33.079 --> 00:42:33.719
And then there's a couple

00:42:33.759 --> 00:42:35.139
other ones where it's six and more.

00:42:36.420 --> 00:42:37.260
Some of those you have to

00:42:37.300 --> 00:42:38.820
thank like GitHub for like

00:42:38.880 --> 00:42:40.981
they'll actually discover secrets there.

00:42:41.041 --> 00:42:42.041
So if you provide a third

00:42:42.101 --> 00:42:43.661
party application that has

00:42:43.702 --> 00:42:45.422
credentials like at authoress,

00:42:45.443 --> 00:42:47.342
we have our secret keys registered there.

00:42:47.402 --> 00:42:49.123
So if one of our customers

00:42:49.184 --> 00:42:50.704
exposes keys for our

00:42:50.824 --> 00:42:52.664
service on GitHub will get

00:42:52.704 --> 00:42:53.885
notified automatically

00:42:53.945 --> 00:42:55.186
revoke those keys and send

00:42:55.206 --> 00:42:56.525
them an email telling them

00:42:56.565 --> 00:42:57.445
that they did something

00:42:57.465 --> 00:42:58.686
that they probably did not

00:42:58.726 --> 00:43:01.226
want to do multiple times

00:43:01.347 --> 00:43:02.628
if that's if necessary,

00:43:02.688 --> 00:43:03.688
because that's happened as well.

00:43:06.853 --> 00:43:08.456
I want to switch topics here real quick,

00:43:08.576 --> 00:43:08.956
AJ,

00:43:09.195 --> 00:43:12.219
because you've been with Rainforest QA

00:43:12.239 --> 00:43:14.121
for over seven years now,

00:43:15.202 --> 00:43:19.346
which is unusual in the tech industry.

00:43:19.465 --> 00:43:21.588
So I'm curious about what

00:43:21.628 --> 00:43:25.231
are the things that you

00:43:25.271 --> 00:43:28.233
look for in a job that have

00:43:28.293 --> 00:43:29.976
been fulfilled at

00:43:30.056 --> 00:43:31.998
Rainforest that keep you there that long?

00:43:33.690 --> 00:43:34.349
Yeah, for sure.

00:43:34.731 --> 00:43:36.371
First and foremost is the people.

00:43:37.672 --> 00:43:37.932
Actually,

00:43:37.972 --> 00:43:39.893
when I was interviewing with Rainforest,

00:43:40.614 --> 00:43:42.076
the last person I talked to

00:43:42.115 --> 00:43:43.396
told me something like,

00:43:44.036 --> 00:43:45.418
I say it Rainforest because

00:43:45.438 --> 00:43:45.998
of the people.

00:43:46.039 --> 00:43:46.938
And I was like, okay,

00:43:46.978 --> 00:43:49.780
that's what everyone says.

00:43:49.800 --> 00:43:51.242
Oh, we're family, right?

00:43:51.262 --> 00:43:51.742
Yeah.

00:43:52.583 --> 00:43:55.164
And then I quickly drank the Kool-Aid,

00:43:55.224 --> 00:43:55.585
I think.

00:43:55.625 --> 00:43:56.606
And I found myself saying

00:43:56.626 --> 00:43:57.427
that on interviews.

00:43:57.467 --> 00:43:57.766
And I'm like,

00:43:57.827 --> 00:43:59.527
I know this sounds like a load of crap,

00:43:59.547 --> 00:43:59.867
but it's true.

00:44:02.030 --> 00:44:04.510
And I think the hiring process is super,

00:44:04.550 --> 00:44:06.012
super important, right?

00:44:06.092 --> 00:44:06.351
Yeah.

00:44:06.391 --> 00:44:07.853
Both finding people that are

00:44:07.893 --> 00:44:09.614
qualified for the job, obviously,

00:44:09.673 --> 00:44:10.954
but are good culture fits.

00:44:11.894 --> 00:44:13.536
We have a pretty small team,

00:44:13.655 --> 00:44:14.755
so there's nowhere to hide.

00:44:15.797 --> 00:44:16.797
If you are not doing your

00:44:16.836 --> 00:44:18.318
job or you're not up to par,

00:44:18.338 --> 00:44:20.119
you're going to be exposed pretty quickly,

00:44:20.918 --> 00:44:21.239
which

00:44:22.159 --> 00:44:25.503
leads us to have a very reliable team.

00:44:26.083 --> 00:44:28.204
We are distributed globally,

00:44:28.344 --> 00:44:30.907
so there's a lot of handoff.

00:44:31.126 --> 00:44:32.887
I'm going to sleep, you're waking up,

00:44:33.108 --> 00:44:34.168
here's what I did.

00:44:34.568 --> 00:44:35.809
And I trust when I wake up

00:44:35.829 --> 00:44:36.931
that you're just going to

00:44:36.951 --> 00:44:37.811
have this thing done.

00:44:38.512 --> 00:44:39.893
And if you're not one of those people,

00:44:39.932 --> 00:44:40.653
you're probably not going

00:44:40.673 --> 00:44:41.855
to fit at Rainforest.

00:44:42.815 --> 00:44:45.277
So really, really qualified, experienced,

00:44:45.338 --> 00:44:45.737
smart,

00:44:45.797 --> 00:44:47.880
reliable people makes life so much

00:44:47.980 --> 00:44:48.360
easier.

00:44:49.360 --> 00:44:50.442
And then the other piece of

00:44:50.521 --> 00:44:53.204
it is the mission that we're on,

00:44:53.244 --> 00:44:54.786
the technology that we're building.

00:44:55.306 --> 00:44:58.047
I think when I was first exposed to it,

00:44:58.907 --> 00:44:59.668
The first time I shipped

00:44:59.708 --> 00:45:01.510
code with Rainforest, it was kind of like,

00:45:01.550 --> 00:45:01.789
wow,

00:45:01.809 --> 00:45:03.411
how have I been shipping code before

00:45:03.451 --> 00:45:03.711
this?

00:45:03.791 --> 00:45:04.612
And the answer was I was

00:45:04.652 --> 00:45:06.753
probably breaking things all of the time.

00:45:07.273 --> 00:45:08.875
And you don't notice until

00:45:09.074 --> 00:45:10.016
user catches it in

00:45:10.056 --> 00:45:11.836
production two days later or whatever.

00:45:14.900 --> 00:45:15.800
It's something that I'm

00:45:15.840 --> 00:45:16.782
really passionate about.

00:45:16.862 --> 00:45:18.244
I think as a front-end engineer,

00:45:18.324 --> 00:45:20.985
we get really caught up on the details.

00:45:21.686 --> 00:45:23.268
There's all these visual layers.

00:45:23.329 --> 00:45:24.931
There's these very specific

00:45:24.990 --> 00:45:26.172
human interactions.

00:45:26.271 --> 00:45:27.233
I like building things that

00:45:27.273 --> 00:45:28.914
humans are actually interacting with.

00:45:30.516 --> 00:45:32.737
And that kind of naturally

00:45:32.757 --> 00:45:35.759
leads you to a quality assurance mindset,

00:45:35.818 --> 00:45:36.079
right?

00:45:36.199 --> 00:45:37.099
I want everything to be

00:45:37.179 --> 00:45:38.400
perfect all of the time.

00:45:38.460 --> 00:45:39.621
How do I ensure this?

00:45:40.661 --> 00:45:41.661
And so the combination of

00:45:41.702 --> 00:45:42.682
really great people and

00:45:42.722 --> 00:45:43.722
working on something that

00:45:43.782 --> 00:45:44.403
I'm actually really

00:45:44.443 --> 00:45:46.425
passionate about and I want

00:45:46.465 --> 00:45:47.625
to see the rest of the

00:45:47.644 --> 00:45:49.326
world adopt these correct

00:45:49.365 --> 00:45:51.286
ways of testing things, in my opinion,

00:45:51.306 --> 00:45:51.728
of course,

00:45:53.268 --> 00:45:55.389
just makes it makes it easy to work here.

00:45:55.409 --> 00:45:56.909
Yeah, right on.

00:45:56.969 --> 00:45:57.291
That's cool.

00:45:59.086 --> 00:45:59.568
That's cool.

00:45:59.867 --> 00:46:01.389
Is there you guys obviously

00:46:01.429 --> 00:46:04.652
do a lot of front end type testing?

00:46:04.693 --> 00:46:06.034
Is there a particular

00:46:06.695 --> 00:46:08.538
industry or vertical that

00:46:09.278 --> 00:46:11.822
you have got a lot of

00:46:11.862 --> 00:46:13.282
experience in or something

00:46:13.302 --> 00:46:15.005
that has worked really well

00:46:15.025 --> 00:46:16.407
that makes a really cool story?

00:46:19.940 --> 00:46:21.181
Something I've been involved

00:46:21.222 --> 00:46:22.663
in that makes a cool story.

00:46:22.864 --> 00:46:22.963
Ooh,

00:46:23.043 --> 00:46:24.105
I don't know if I have a good answer

00:46:24.144 --> 00:46:24.704
for you, honestly.

00:46:25.365 --> 00:46:25.786
Like I said,

00:46:25.806 --> 00:46:27.067
I've been at Rainforest for so long,

00:46:27.086 --> 00:46:28.708
that's all I can think about, I guess.

00:46:29.670 --> 00:46:30.090
Right.

00:46:30.349 --> 00:46:31.530
Do you attract a certain

00:46:32.891 --> 00:46:34.474
customers with financial

00:46:34.673 --> 00:46:37.896
apps or with web-based gaming apps,

00:46:37.936 --> 00:46:38.657
or is there a particular

00:46:38.697 --> 00:46:39.858
vertical that tends to

00:46:39.898 --> 00:46:42.039
gravitate towards your service?

00:46:44.161 --> 00:46:45.161
I think not really.

00:46:45.181 --> 00:46:45.722
And I think that's one of

00:46:45.742 --> 00:46:46.402
the things that makes it

00:46:46.503 --> 00:46:48.824
cool is it's a very generic testing tool,

00:46:48.884 --> 00:46:49.224
right?

00:46:50.824 --> 00:46:53.387
There are some limitations.

00:46:53.427 --> 00:46:54.166
But in general,

00:46:54.206 --> 00:46:55.807
if you could load your app on a machine,

00:46:55.847 --> 00:46:56.989
you could probably test it

00:46:57.009 --> 00:46:57.849
with Rainforest,

00:46:58.969 --> 00:47:00.911
not caring about what the tech stack is,

00:47:00.951 --> 00:47:01.931
those kinds of things.

00:47:02.972 --> 00:47:05.032
So there's a very wide range

00:47:05.092 --> 00:47:08.514
of users that we have from, yeah,

00:47:08.574 --> 00:47:10.795
there's some financial companies.

00:47:12.097 --> 00:47:14.398
doing some what I always find interesting,

00:47:14.438 --> 00:47:15.500
kind of like testing

00:47:15.519 --> 00:47:16.480
visually things like

00:47:16.800 --> 00:47:18.742
spreadsheet style apps,

00:47:18.802 --> 00:47:20.422
like their tables and things like that.

00:47:21.443 --> 00:47:22.724
And then we have some really

00:47:22.744 --> 00:47:24.085
cool like visual tools,

00:47:26.068 --> 00:47:26.907
like drag and drop

00:47:26.947 --> 00:47:27.849
interfaces where you're

00:47:27.869 --> 00:47:29.110
building things like, you know,

00:47:29.269 --> 00:47:32.112
Lego style building where

00:47:32.152 --> 00:47:33.793
there's probably, to my knowledge,

00:47:33.833 --> 00:47:35.414
not any other great way to

00:47:35.474 --> 00:47:37.076
test something like that.

00:47:37.789 --> 00:47:38.409
Like, what do you say?

00:47:38.530 --> 00:47:39.909
Are all my Legos on the page?

00:47:40.130 --> 00:47:40.871
Yeah, they are.

00:47:40.891 --> 00:47:42.632
Are they kind of oriented this way?

00:47:42.652 --> 00:47:43.411
Like, yeah, they are.

00:47:43.452 --> 00:47:44.492
But how does it look, right?

00:47:44.672 --> 00:47:45.594
What does the user see?

00:47:46.514 --> 00:47:49.476
So the real sweet spot is

00:47:50.295 --> 00:47:51.336
really visual-based

00:47:51.456 --> 00:47:52.717
applications because I

00:47:52.737 --> 00:47:53.338
don't think there's other

00:47:53.358 --> 00:47:55.159
great solutions for them out there.

00:47:55.800 --> 00:47:56.519
But in general,

00:47:56.559 --> 00:47:57.840
being a kind of generic

00:47:58.340 --> 00:48:00.262
visual testing application,

00:48:00.342 --> 00:48:02.382
it really applies to anything.

00:48:02.583 --> 00:48:04.304
Right on.

00:48:04.324 --> 00:48:04.525
For...

00:48:06.436 --> 00:48:08.679
A lot of web-based front ends,

00:48:08.699 --> 00:48:10.481
it's all Node.js based.

00:48:10.501 --> 00:48:14.827
Do you have a favorite Node.js type tool?

00:48:14.847 --> 00:48:16.949
Are you like a React fan or

00:48:18.391 --> 00:48:19.572
Next.js or Vue?

00:48:19.592 --> 00:48:21.034
Do you have a personal preference?

00:48:21.954 --> 00:48:24.056
Yes, I am a React fanboy for sure.

00:48:26.097 --> 00:48:27.677
I started, you know,

00:48:28.038 --> 00:48:29.818
we rewind all the way back

00:48:29.838 --> 00:48:31.599
to like the jQuery days and stuff.

00:48:31.639 --> 00:48:31.800
Right.

00:48:31.820 --> 00:48:33.460
I see that and I have nightmares still.

00:48:34.141 --> 00:48:34.820
We have some,

00:48:34.860 --> 00:48:35.721
we actually have some of that

00:48:35.760 --> 00:48:37.041
floating around in our like,

00:48:37.581 --> 00:48:39.143
like our admin applications

00:48:39.222 --> 00:48:40.043
and stuff where it's like a

00:48:40.063 --> 00:48:41.563
Rails backend and they're like, yeah,

00:48:41.583 --> 00:48:42.903
we got jQuery in there.

00:48:43.885 --> 00:48:45.125
And then my first thought is always like,

00:48:45.144 --> 00:48:47.206
well, like, how do you test that jQuery?

00:48:47.226 --> 00:48:48.206
And the answer is we don't.

00:48:50.068 --> 00:48:50.989
throw a couple rainforest

00:48:51.009 --> 00:48:51.909
tests at it and call it

00:48:51.929 --> 00:48:55.612
good um and I I started um

00:48:55.632 --> 00:48:57.094
I started with angular back

00:48:57.134 --> 00:48:59.896
in the day oh right on back

00:49:00.115 --> 00:49:01.697
angular one anyways was

00:49:01.717 --> 00:49:03.117
kind of the reverse of

00:49:03.498 --> 00:49:04.960
react we're like we're

00:49:04.980 --> 00:49:05.840
gonna put your javascript

00:49:05.900 --> 00:49:08.081
in your html rack took the

00:49:08.161 --> 00:49:08.842
approach and we're gonna

00:49:08.862 --> 00:49:09.923
put your html and your

00:49:09.963 --> 00:49:10.864
javascript you know just

00:49:11.244 --> 00:49:12.806
smush it all together um

00:49:12.905 --> 00:49:14.226
and it's come a very very

00:49:14.286 --> 00:49:15.307
long way I must say

00:49:16.168 --> 00:49:16.548
So yeah,

00:49:16.568 --> 00:49:17.951
I find working with React very

00:49:18.132 --> 00:49:19.373
easy and intuitive,

00:49:19.634 --> 00:49:21.215
and it's very nice that the

00:49:22.036 --> 00:49:22.898
general JavaScript

00:49:22.918 --> 00:49:24.942
community has supported

00:49:24.981 --> 00:49:26.264
that and has pushed that forward.

00:49:26.284 --> 00:49:28.887
Because especially with all

00:49:28.927 --> 00:49:29.889
software and technology,

00:49:29.909 --> 00:49:31.431
but especially in front-end development,

00:49:31.931 --> 00:49:35.096
it's really easy to pick the

00:49:35.135 --> 00:49:37.197
wrong tool long term.

00:49:37.538 --> 00:49:39.179
I pick this thing, it's great,

00:49:39.661 --> 00:49:40.981
and then we find a better way to do it,

00:49:41.001 --> 00:49:42.523
and they just abandon the project.

00:49:43.744 --> 00:49:45.967
This is true with anything open source,

00:49:45.987 --> 00:49:48.469
and we've run into this a lot of times,

00:49:48.751 --> 00:49:50.652
even with open source testing tools.

00:49:53.896 --> 00:49:54.215
Actually,

00:49:54.255 --> 00:49:57.077
we had a very large Enzyme test

00:49:57.137 --> 00:49:58.918
suite on our React application,

00:49:59.199 --> 00:50:00.539
and we ran into something like this.

00:50:01.500 --> 00:50:04.721
There was a new way of testing React apps,

00:50:04.740 --> 00:50:06.641
which was the React testing library.

00:50:07.302 --> 00:50:09.583
And Enzyme kind of said, yep,

00:50:09.623 --> 00:50:10.684
that's a better way to do it.

00:50:11.003 --> 00:50:11.583
We're going to stop

00:50:11.623 --> 00:50:13.605
supporting after a good version,

00:50:13.625 --> 00:50:16.007
like React, or React .

00:50:14.865 --> 00:50:16.025
I'm like, well,

00:50:16.045 --> 00:50:19.007
we want to upgrade to React .

00:50:17.887 --> 00:50:19.047
It's like, well,

00:50:19.128 --> 00:50:20.407
none of your Enzyme tests work.

00:50:22.668 --> 00:50:23.409
Yeah, exactly.

00:50:23.469 --> 00:50:23.909
Exactly.

00:50:23.949 --> 00:50:24.791
Too bad for us.

00:50:25.291 --> 00:50:26.552
And so now you start waiting

00:50:26.572 --> 00:50:28.914
the options of, well, how do we upgrade,

00:50:28.954 --> 00:50:29.153
right?

00:50:29.193 --> 00:50:30.994
Do we just say let's not upgrade,

00:50:31.775 --> 00:50:33.496
which is going to bite you really quickly,

00:50:33.556 --> 00:50:33.757
right?

00:50:33.777 --> 00:50:35.097
Especially at the pace all

00:50:35.117 --> 00:50:36.239
these JavaScript libraries

00:50:36.298 --> 00:50:37.099
are being updated.

00:50:37.559 --> 00:50:39.121
I want that new shiny thing.

00:50:39.181 --> 00:50:40.722
I want support for that thing.

00:50:41.262 --> 00:50:43.443
And I don't want to be stuck in the past.

00:50:43.804 --> 00:50:45.106
The more you get stuck in the past,

00:50:45.166 --> 00:50:46.567
the harder it is to catch

00:50:46.606 --> 00:50:47.768
up with everything else, right?

00:50:48.507 --> 00:50:49.929
And so our options were

00:50:49.969 --> 00:50:52.670
basically rewrite all these

00:50:52.831 --> 00:50:55.393
however many thousand enzyme tests.

00:50:56.853 --> 00:51:00.835
Or we could just nuke them all, which is,

00:51:02.717 --> 00:51:04.739
it reminds me of these

00:51:04.778 --> 00:51:06.260
memes I see about junior

00:51:06.280 --> 00:51:07.239
engineers and the intern,

00:51:07.260 --> 00:51:08.840
where their commit message is,

00:51:09.121 --> 00:51:10.081
I nuked all the tests

00:51:10.141 --> 00:51:11.123
because they were failing

00:51:11.143 --> 00:51:12.222
and I couldn't make them pass.

00:51:13.244 --> 00:51:15.385
Return true in all the tests because, yeah,

00:51:15.405 --> 00:51:16.025
it's one of the past.

00:51:16.045 --> 00:51:17.567
The only reasonable way to do things.

00:51:18.126 --> 00:51:19.427
Yeah.

00:51:20.748 --> 00:51:23.230
And and it sounds kind of

00:51:23.250 --> 00:51:24.230
like an overreaction.

00:51:24.269 --> 00:51:25.231
But as we started to kind of

00:51:25.271 --> 00:51:26.851
think about these testing philosophies,

00:51:26.911 --> 00:51:27.612
we're like,

00:51:27.632 --> 00:51:29.253
we have end to end test

00:51:29.273 --> 00:51:31.434
coverage on all of these things.

00:51:31.554 --> 00:51:31.855
Right.

00:51:32.855 --> 00:51:34.516
And a lot of the front end tests,

00:51:34.615 --> 00:51:37.056
even though they're unit tests, they

00:51:39.211 --> 00:51:40.373
they load things in a

00:51:40.413 --> 00:51:41.454
headless browser and we're

00:51:41.474 --> 00:51:42.914
kind of recreating what an

00:51:43.034 --> 00:51:43.996
end-to-end test does.

00:51:44.496 --> 00:51:45.617
So we chose to keep all of

00:51:45.637 --> 00:51:47.097
our actual unit tests,

00:51:47.197 --> 00:51:48.358
all the kind of business

00:51:48.418 --> 00:51:50.041
logic that didn't use Enzyme,

00:51:51.302 --> 00:51:52.563
nuke all the Enzyme tests

00:51:52.663 --> 00:51:53.583
and just lean into a

00:51:53.623 --> 00:51:54.724
Rainforest test because we

00:51:54.744 --> 00:51:56.166
know if the Rainforest tests are passing,

00:51:56.206 --> 00:51:57.327
we don't need all of these

00:51:57.367 --> 00:51:59.688
redundant tests anymore and

00:52:00.148 --> 00:52:01.349
instant productivity boost.

00:52:01.369 --> 00:52:01.969
Like I don't have to

00:52:02.010 --> 00:52:03.552
maintain all of these things anymore.

00:52:03.612 --> 00:52:04.833
I don't have to upgrade them.

00:52:05.992 --> 00:52:06.914
I could just get them out of

00:52:06.954 --> 00:52:08.193
my way and I can upgrade

00:52:08.213 --> 00:52:09.335
all my dependencies.

00:52:09.775 --> 00:52:11.356
And because we have really

00:52:11.376 --> 00:52:12.677
good end-to-end test coverage,

00:52:13.056 --> 00:52:13.416
we could do that

00:52:13.456 --> 00:52:14.438
confidently and know that

00:52:14.458 --> 00:52:15.498
we're not breaking things.

00:52:16.679 --> 00:52:17.378
So yeah,

00:52:17.619 --> 00:52:19.219
choosing dependencies can be quite

00:52:19.260 --> 00:52:20.000
tricky sometimes,

00:52:20.039 --> 00:52:21.260
especially in the JavaScript world.

00:52:22.148 --> 00:52:23.728
Did you find some places

00:52:23.748 --> 00:52:24.630
that you still wanted to

00:52:24.730 --> 00:52:26.451
reintroduce some of the

00:52:26.490 --> 00:52:28.472
React testing library for, I don't know,

00:52:28.512 --> 00:52:30.653
component level testing of the UI,

00:52:31.173 --> 00:52:33.675
or have you kept with like

00:52:33.695 --> 00:52:34.317
a hundred percent of the

00:52:34.356 --> 00:52:36.458
decision to not have that

00:52:36.518 --> 00:52:37.858
layer of testing anymore

00:52:38.378 --> 00:52:39.440
regarding the UI components

00:52:39.460 --> 00:52:40.760
because you focus on the

00:52:41.521 --> 00:52:42.963
full picture and then

00:52:42.983 --> 00:52:45.103
testing for the user flow

00:52:45.304 --> 00:52:46.684
and also whatever you have

00:52:47.306 --> 00:52:48.766
with the interaction with the backend?

00:52:49.713 --> 00:52:50.833
Yeah, we still have some of it,

00:52:50.934 --> 00:52:53.434
and we drew the line at user interactions,

00:52:53.514 --> 00:52:53.735
right?

00:52:54.094 --> 00:52:56.516
So React has this idea of hooks,

00:52:56.936 --> 00:52:59.577
which are basically just chunks of logic.

00:52:59.597 --> 00:53:00.998
It's just a function that I

00:53:01.018 --> 00:53:02.898
can use inside of a component.

00:53:03.619 --> 00:53:05.940
We stopped having any React

00:53:05.980 --> 00:53:08.221
testing library tests that

00:53:08.300 --> 00:53:09.681
were actual user interactions,

00:53:09.721 --> 00:53:10.762
no clicking on things,

00:53:10.822 --> 00:53:11.922
and instead we used it to

00:53:11.981 --> 00:53:13.143
test the functionality,

00:53:13.163 --> 00:53:14.503
the logic of those hooks.

00:53:16.664 --> 00:53:18.003
it's essentially a unit test

00:53:18.023 --> 00:53:19.304
but it's testing a specific

00:53:19.385 --> 00:53:20.945
react thing and it requires

00:53:20.965 --> 00:53:22.704
the the testing library to

00:53:22.744 --> 00:53:24.485
do that everything else

00:53:24.545 --> 00:53:25.686
kind of gets hoisted up to

00:53:25.706 --> 00:53:26.746
the end-to-end testing

00:53:26.786 --> 00:53:29.065
level and it's nice to just

00:53:29.106 --> 00:53:30.786
say hey designer hey

00:53:30.827 --> 00:53:32.527
product manager like go at

00:53:32.547 --> 00:53:33.527
this test coverage while

00:53:33.586 --> 00:53:34.947
I'm busy hacking on things

00:53:34.967 --> 00:53:35.628
and I don't have to worry

00:53:35.648 --> 00:53:39.469
about this anymore so

00:53:39.489 --> 00:53:41.588
that's actually um go ahead jillian

00:53:42.005 --> 00:53:42.085
Oh,

00:53:42.105 --> 00:53:43.646
I was just gonna say I'm so impressed

00:53:43.686 --> 00:53:45.226
with people who can keep up

00:53:45.246 --> 00:53:46.447
with like the UI and

00:53:46.467 --> 00:53:48.268
JavaScript plan because I've tried.

00:53:48.789 --> 00:53:50.250
I've tried like a few times

00:53:50.309 --> 00:53:52.630
and it just it then everything changed.

00:53:52.731 --> 00:53:53.291
I was like, alright,

00:53:53.331 --> 00:53:54.311
I'm not doing this anymore.

00:53:54.351 --> 00:53:55.012
I'm gonna go.

00:53:55.032 --> 00:53:55.532
I'm gonna go do high

00:53:55.552 --> 00:53:56.413
performance computing that

00:53:56.432 --> 00:53:57.773
hasn't changed in like thirty years.

00:53:57.793 --> 00:53:59.295
It's gonna be hard.

00:53:59.715 --> 00:53:59.894
Yeah,

00:53:59.934 --> 00:54:01.076
you definitely start feeling like

00:54:01.115 --> 00:54:01.615
Sisyphus.

00:54:01.635 --> 00:54:04.077
You're just pushing that rock up the hill.

00:54:04.677 --> 00:54:05.998
And every time you get to the top,

00:54:06.099 --> 00:54:06.918
someone tells you that

00:54:06.958 --> 00:54:08.280
you're actually on the wrong hill.

00:54:12.474 --> 00:54:13.076
I was going to say that

00:54:13.115 --> 00:54:14.217
seems like a really

00:54:15.137 --> 00:54:18.260
interesting approach that I

00:54:18.280 --> 00:54:19.061
hadn't thought of when we

00:54:19.141 --> 00:54:20.181
initially started talking,

00:54:20.222 --> 00:54:23.684
but you can replace having

00:54:23.704 --> 00:54:24.824
to write a lot of your

00:54:24.844 --> 00:54:26.867
tests in your React app by

00:54:27.086 --> 00:54:28.367
using Rainforest,

00:54:28.648 --> 00:54:30.090
by just focusing on what

00:54:30.798 --> 00:54:32.639
the end user experience is

00:54:32.679 --> 00:54:33.800
and testing for that,

00:54:34.161 --> 00:54:35.081
you can save yourself from

00:54:35.121 --> 00:54:36.181
having to write a lot of

00:54:36.242 --> 00:54:37.983
tests in the React standard library.

00:54:38.523 --> 00:54:40.364
So that's where the trade-off is though,

00:54:40.423 --> 00:54:40.664
right?

00:54:40.744 --> 00:54:42.465
Because these tests then are

00:54:42.505 --> 00:54:45.007
testing more functionality at once.

00:54:45.427 --> 00:54:46.648
And so if there is a problem,

00:54:46.688 --> 00:54:47.728
you don't necessarily know

00:54:48.168 --> 00:54:50.128
like which line of code is

00:54:50.168 --> 00:54:51.210
causing the issue or what

00:54:51.510 --> 00:54:52.451
interaction there is.

00:54:53.331 --> 00:54:54.052
you know there really is

00:54:54.072 --> 00:54:55.231
like how valuable is that

00:54:55.271 --> 00:54:57.293
flow I think and that's

00:54:57.313 --> 00:54:58.153
something that as you

00:54:58.193 --> 00:54:59.074
pointed out aj like you

00:54:59.094 --> 00:54:59.954
sort of have to determine

00:55:00.014 --> 00:55:01.195
up front like where is the

00:55:01.235 --> 00:55:02.697
value of your testing and

00:55:02.836 --> 00:55:03.556
how do you get the most

00:55:03.597 --> 00:55:04.998
value out of which pieces

00:55:05.018 --> 00:55:06.119
you're adding and where

00:55:06.139 --> 00:55:07.278
you're validating it etc

00:55:07.358 --> 00:55:08.659
and so yeah I mean in your

00:55:08.679 --> 00:55:09.960
case the ends the enzyme

00:55:09.981 --> 00:55:10.721
tests weren't actually

00:55:10.740 --> 00:55:11.902
providing the right value

00:55:11.961 --> 00:55:13.943
in the first place um so

00:55:13.983 --> 00:55:14.903
definitely switch them over

00:55:15.643 --> 00:55:16.364
Yeah, absolutely.

00:55:16.385 --> 00:55:17.344
And it's kind of a question

00:55:17.364 --> 00:55:18.806
of redundancy too, right?

00:55:19.266 --> 00:55:20.608
Like, is redundancy good?

00:55:20.987 --> 00:55:21.507
Sometimes.

00:55:21.568 --> 00:55:22.389
Like, I can be really,

00:55:22.449 --> 00:55:23.329
really sure and I can have

00:55:23.349 --> 00:55:24.369
some extra confidence that

00:55:24.389 --> 00:55:25.871
the thing isn't going to break.

00:55:26.371 --> 00:55:27.032
But most of the time,

00:55:27.052 --> 00:55:28.452
it just slows us down, right?

00:55:29.373 --> 00:55:30.414
I find that the...

00:55:31.414 --> 00:55:33.378
often the best time to add

00:55:33.458 --> 00:55:35.320
more unit test coverage is

00:55:35.380 --> 00:55:36.501
when something breaks, right?

00:55:37.061 --> 00:55:38.583
Because if my end-to-end

00:55:38.603 --> 00:55:40.045
tests are all passing,

00:55:40.246 --> 00:55:41.106
but something's broken,

00:55:41.907 --> 00:55:43.409
very often it's some kind of edge case,

00:55:43.449 --> 00:55:43.610
right?

00:55:43.650 --> 00:55:45.731
It's either some weird user behavior,

00:55:45.771 --> 00:55:46.753
some weird input,

00:55:46.813 --> 00:55:48.695
some weird sequence of events.

00:55:49.155 --> 00:55:50.197
And those things are usually

00:55:50.237 --> 00:55:51.378
better captured in a unit

00:55:51.418 --> 00:55:54.840
test because it's easier to

00:55:55.340 --> 00:55:57.461
kind of implement that specific scenario,

00:55:58.362 --> 00:55:59.842
that specific line of code

00:55:59.882 --> 00:56:01.204
that is the offender here

00:56:01.925 --> 00:56:03.485
versus creating a whole new

00:56:03.565 --> 00:56:04.425
end-to-end test to just

00:56:04.445 --> 00:56:05.467
cover some edge case.

00:56:06.166 --> 00:56:07.007
Those tests are going to

00:56:07.027 --> 00:56:09.789
just get longer and longer and just be...

00:56:10.592 --> 00:56:11.934
kind of confusing, honestly.

00:56:11.954 --> 00:56:12.474
It's like, well,

00:56:12.934 --> 00:56:13.996
why am I just like clicking

00:56:14.036 --> 00:56:15.376
in all of these random spots,

00:56:15.416 --> 00:56:16.157
doing these things,

00:56:16.197 --> 00:56:17.338
trying to cover these edge cases?

00:56:17.358 --> 00:56:18.360
Like just write a unit test

00:56:18.400 --> 00:56:24.847
for it and call it good.

00:56:24.927 --> 00:56:26.750
I really like the emphasis on, you know,

00:56:26.789 --> 00:56:28.070
testing for business logic

00:56:28.130 --> 00:56:29.413
and just in general having

00:56:30.891 --> 00:56:33.233
Not everything controlled by the engineers,

00:56:33.253 --> 00:56:34.713
because I find for myself, you know,

00:56:34.733 --> 00:56:35.914
like I'll write something

00:56:35.934 --> 00:56:36.695
and then I'll hand it off

00:56:36.715 --> 00:56:37.755
to a user and then they

00:56:37.795 --> 00:56:38.936
immediately start using it

00:56:38.976 --> 00:56:40.597
in some way that I didn't even think of.

00:56:40.657 --> 00:56:41.117
And that, you know,

00:56:41.137 --> 00:56:41.757
and then we do like a

00:56:41.797 --> 00:56:42.737
couple rounds of this.

00:56:43.097 --> 00:56:44.458
So being able to cut back on

00:56:44.498 --> 00:56:46.880
that person who writes

00:56:46.960 --> 00:56:48.219
thing who does not actually

00:56:48.320 --> 00:56:49.521
use the thing and then just

00:56:49.581 --> 00:56:50.541
immediately being able to

00:56:50.581 --> 00:56:51.762
push it off to an end user.

00:56:52.885 --> 00:56:53.606
Yeah, absolutely.

00:56:54.967 --> 00:56:55.226
Yeah.

00:56:55.407 --> 00:56:57.528
And things like testing and

00:56:57.568 --> 00:56:59.110
staging environments are great for this.

00:56:59.150 --> 00:57:00.010
We push code to those

00:57:00.050 --> 00:57:01.072
environments all the time,

00:57:01.753 --> 00:57:03.393
give them to a PM and say,

00:57:03.653 --> 00:57:06.257
go run and try and break this thing,

00:57:06.317 --> 00:57:06.556
right?

00:57:07.418 --> 00:57:08.759
Don't always want to do that in production,

00:57:08.818 --> 00:57:09.079
right?

00:57:09.099 --> 00:57:10.619
Like if the thing's not fully baked,

00:57:10.960 --> 00:57:11.740
I don't want to correct

00:57:11.760 --> 00:57:13.302
something in the database or whatever.

00:57:13.782 --> 00:57:15.244
And so having places to push

00:57:15.304 --> 00:57:17.266
that and have people early

00:57:17.286 --> 00:57:19.307
in the process iterating on this

00:57:19.688 --> 00:57:22.148
Finding the major bugs, the minor bugs,

00:57:22.208 --> 00:57:25.269
the stylistic bugs is super,

00:57:25.309 --> 00:57:26.809
super valuable than having

00:57:26.869 --> 00:57:31.811
one of your users find it later.

00:57:31.891 --> 00:57:32.211
Right on.

00:57:33.072 --> 00:57:34.612
So you live in Tahoe.

00:57:34.911 --> 00:57:35.713
Do you get outdoors a lot?

00:57:36.773 --> 00:57:37.253
I do.

00:57:38.152 --> 00:57:39.753
I live here with my wife and my dog.

00:57:39.813 --> 00:57:41.934
He's a lab husky mix.

00:57:42.355 --> 00:57:43.914
So he kind of thrives in the summer,

00:57:44.295 --> 00:57:45.255
thrives in the winter.

00:57:45.396 --> 00:57:46.916
There's lots of snow out right now.

00:57:47.744 --> 00:57:49.887
And so we're outside pretty much every day,

00:57:50.146 --> 00:57:52.971
snowboarding, hiking, kayaking,

00:57:53.050 --> 00:57:53.731
all that kind of stuff.

00:57:54.432 --> 00:57:54.793
Right on.

00:57:55.155 --> 00:57:56.617
How long have you lived in the Tahoe area?

00:57:57.987 --> 00:57:58.086
Um,

00:57:58.106 --> 00:57:59.969
I've been here for about five years now.

00:57:59.989 --> 00:58:01.148
I, uh,

00:58:01.188 --> 00:58:02.690
I grew up in the San Francisco Bay

00:58:02.771 --> 00:58:03.710
area and I was part of the

00:58:03.751 --> 00:58:05.311
great COVID migration out here.

00:58:06.393 --> 00:58:06.432
Uh,

00:58:06.472 --> 00:58:08.875
we always wanted to get here eventually.

00:58:09.554 --> 00:58:10.715
And, uh, I was lucky.

00:58:10.735 --> 00:58:11.076
Uh,

00:58:11.115 --> 00:58:12.496
I was still working at Rainforest at

00:58:12.516 --> 00:58:14.478
the time and already remote.

00:58:14.518 --> 00:58:17.320
So the transfer up here to, from remote,

00:58:17.960 --> 00:58:20.083
uh, near an office to remote,

00:58:20.143 --> 00:58:20.822
it actually doesn't matter

00:58:20.842 --> 00:58:21.704
how far you are from the

00:58:21.744 --> 00:58:23.105
office was very easy.

00:58:24.184 --> 00:58:25.005
And we're also real

00:58:25.045 --> 00:58:26.487
fortunate that we were not

00:58:26.527 --> 00:58:28.248
the only ones doing this migration.

00:58:28.288 --> 00:58:29.068
So we've made lots of

00:58:29.108 --> 00:58:30.108
friends that were like, yeah,

00:58:30.128 --> 00:58:30.989
we live down the street

00:58:31.009 --> 00:58:32.070
from you in the city and we

00:58:32.110 --> 00:58:33.010
all live here now.

00:58:33.751 --> 00:58:35.210
So it's a very different life,

00:58:35.311 --> 00:58:36.472
but we love it.

00:58:36.492 --> 00:58:37.572
And I don't think we're ever leaving.

00:58:38.233 --> 00:58:38.813
Ah, that's cool.

00:58:39.072 --> 00:58:39.333
Yeah.

00:58:39.434 --> 00:58:39.773
Right on.

00:58:39.974 --> 00:58:41.233
Tahoe is a beautiful area.

00:58:41.695 --> 00:58:45.536
Yeah, it really is.

00:58:45.577 --> 00:58:45.876
Cool.

00:58:46.097 --> 00:58:46.416
All right.

00:58:46.436 --> 00:58:47.597
Should we move on to some picks?

00:58:49.871 --> 00:58:53.275
Before we do, any final thoughts on QA,

00:58:53.414 --> 00:58:55.297
rainforest tips,

00:58:55.797 --> 00:58:57.099
guidance that you want to leave us with,

00:58:57.139 --> 00:58:57.259
AJ?

00:58:59.440 --> 00:59:00.802
I think just recapping is

00:59:00.822 --> 00:59:02.143
finding the balance between

00:59:02.384 --> 00:59:04.826
confidence and velocity, right?

00:59:05.797 --> 00:59:07.398
Everybody needs to set their

00:59:07.538 --> 00:59:09.338
own bar for quality.

00:59:11.579 --> 00:59:13.000
What is my ratio between

00:59:13.099 --> 00:59:14.581
confidence and velocity?

00:59:15.181 --> 00:59:15.840
Determining that for

00:59:15.860 --> 00:59:17.061
yourself is the most

00:59:17.101 --> 00:59:18.061
important thing here.

00:59:18.242 --> 00:59:21.503
And keeping in mind that not

00:59:21.563 --> 00:59:22.384
only is it velocity,

00:59:22.423 --> 00:59:23.304
but a lot of times it's the

00:59:23.364 --> 00:59:25.445
sanity of your engineers.

00:59:25.465 --> 00:59:26.465
We don't want to spend all

00:59:26.485 --> 00:59:27.686
of our time writing tests.

00:59:28.925 --> 00:59:31.387
So finding that balance and

00:59:31.847 --> 00:59:32.507
doing things in an

00:59:32.768 --> 00:59:35.188
efficient way is the key to success.

00:59:36.976 --> 00:59:37.297
Right on.

00:59:38.077 --> 00:59:40.599
And I think that's very use

00:59:40.619 --> 00:59:41.780
case specific too, you know,

00:59:41.800 --> 00:59:42.840
because the right answer

00:59:42.880 --> 00:59:45.884
for a financial app is

00:59:45.943 --> 00:59:47.063
going to be very different

00:59:47.144 --> 00:59:49.646
than the right answer for

00:59:49.686 --> 00:59:51.387
like a social media app.

00:59:51.447 --> 00:59:51.947
Absolutely.

00:59:54.090 --> 00:59:54.429
Cool.

00:59:54.510 --> 00:59:56.150
All right, Jillian, calling you out first.

00:59:56.170 --> 00:59:57.351
What'd you bring for a pick today?

00:59:58.373 --> 01:00:00.775
I am going to pick Drive by Dave Kellett.

01:00:00.894 --> 01:00:03.976
It is a sci-fi graphic novel

01:00:04.077 --> 01:00:05.097
and I think it's on its...

01:00:05.864 --> 01:00:06.945
I think it's like releasing

01:00:06.985 --> 01:00:08.485
the fourth one this summer,

01:00:08.525 --> 01:00:09.246
but it's so good.

01:00:09.306 --> 01:00:10.525
And it's so nice and wholesome,

01:00:10.666 --> 01:00:12.146
which is very nice because like,

01:00:12.547 --> 01:00:13.766
I really like sci-fi,

01:00:13.806 --> 01:00:14.867
but I don't really like

01:00:15.146 --> 01:00:18.648
violence or gore or, you know,

01:00:18.827 --> 01:00:20.728
icky fluids or just,

01:00:20.829 --> 01:00:21.708
I don't like any of that.

01:00:21.809 --> 01:00:21.989
Okay.

01:00:22.009 --> 01:00:22.789
I don't like any of it.

01:00:22.829 --> 01:00:23.630
And this is just so

01:00:23.670 --> 01:00:24.849
wholesome and adorable.

01:00:24.889 --> 01:00:26.550
And the main character is very cute.

01:00:26.911 --> 01:00:27.731
So that's it.

01:00:27.771 --> 01:00:28.210
That's the pick.

01:00:29.534 --> 01:00:30.514
got a whole bunch of copies

01:00:30.534 --> 01:00:31.474
for christmas and I'm like

01:00:31.494 --> 01:00:32.615
making people read them and

01:00:32.635 --> 01:00:33.617
I'm gonna I'm gonna have

01:00:33.637 --> 01:00:35.297
like a little little indie

01:00:35.318 --> 01:00:36.739
graphic novel cult going on

01:00:36.798 --> 01:00:37.918
soon enough great right on

01:00:37.978 --> 01:00:43.402
all right warren what'd you

01:00:43.422 --> 01:00:48.266
bring uh yeah so I just got back from

01:00:49.076 --> 01:00:51.418
a long hiatus being away from the show.

01:00:51.657 --> 01:00:52.538
I was on vacation.

01:00:52.657 --> 01:00:53.878
And so I think this pick is

01:00:54.478 --> 01:00:55.320
really accurate.

01:00:55.760 --> 01:00:56.701
Very short book.

01:00:57.541 --> 01:01:02.063
Highly recommend Tao Te Ching by Lao Tzu,

01:01:02.364 --> 01:01:04.625
which is the founder of Taoism,

01:01:05.166 --> 01:01:06.507
spelled Taoism, in case

01:01:07.547 --> 01:01:08.307
in case you've seen it

01:01:08.347 --> 01:01:09.889
written but never pronounced before.

01:01:09.989 --> 01:01:11.009
And there's just so much

01:01:11.148 --> 01:01:13.210
good stuff that is in the

01:01:13.251 --> 01:01:16.612
book that can be applied to everyday life,

01:01:16.773 --> 01:01:18.054
working environment, et cetera.

01:01:18.114 --> 01:01:19.273
It's incredibly short.

01:01:19.313 --> 01:01:20.295
There's only like a hundred

01:01:20.335 --> 01:01:21.675
and eight principles or so.

01:01:22.315 --> 01:01:24.297
And it starts off great with

01:01:24.858 --> 01:01:26.418
the Tao that can be told is

01:01:26.458 --> 01:01:27.539
not the eternal Tao.

01:01:27.898 --> 01:01:30.240
Like you can't write down the whole truth.

01:01:30.420 --> 01:01:32.041
There's something that's never said.

01:01:32.202 --> 01:01:33.603
It's impossible to convey everything.

01:01:34.161 --> 01:01:35.242
And I know it sounds so

01:01:35.362 --> 01:01:37.804
philosophical to go down this path,

01:01:37.824 --> 01:01:39.206
but I feel like going

01:01:39.226 --> 01:01:40.427
through these really helps

01:01:40.467 --> 01:01:41.708
to put into perspective

01:01:41.748 --> 01:01:42.869
thinking outside the box

01:01:42.909 --> 01:01:44.552
with solving certain

01:01:44.592 --> 01:01:46.494
problems or interactions or

01:01:46.534 --> 01:01:47.775
the communication we have every day.

01:01:48.556 --> 01:01:49.876
Highly recommend.

01:01:49.936 --> 01:01:50.458
Right on.

01:01:50.717 --> 01:01:50.938
Cool.

01:01:52.224 --> 01:01:53.706
AJ, what you got for us?

01:01:54.306 --> 01:01:55.608
Yeah,

01:01:56.108 --> 01:01:57.568
my reading and listening choices are

01:01:57.588 --> 01:01:58.610
kind of all over the map,

01:01:58.630 --> 01:01:59.351
but I did have an

01:01:59.451 --> 01:02:00.871
interesting one recently.

01:02:00.891 --> 01:02:02.253
It was called The Light Eaters.

01:02:02.893 --> 01:02:04.193
It's about plants and

01:02:04.233 --> 01:02:05.175
specifically this idea of

01:02:05.235 --> 01:02:06.396
plant intelligence.

01:02:06.976 --> 01:02:08.117
So obviously intelligence is

01:02:08.157 --> 01:02:08.938
a loaded word.

01:02:08.978 --> 01:02:10.398
They're not intelligent like

01:02:10.418 --> 01:02:11.099
you and I. They're not

01:02:11.280 --> 01:02:12.880
debating QA strategies and

01:02:12.900 --> 01:02:13.581
things like that,

01:02:14.181 --> 01:02:15.063
but they do have a lot of

01:02:15.123 --> 01:02:16.583
intelligent-like behavior.

01:02:16.784 --> 01:02:17.605
They communicate.

01:02:17.644 --> 01:02:19.025
They recognize their kin and

01:02:19.965 --> 01:02:21.206
They hear sounds,

01:02:21.226 --> 01:02:23.128
they transform themselves

01:02:23.168 --> 01:02:24.568
based on the visual

01:02:24.588 --> 01:02:25.168
appearance of the

01:02:25.208 --> 01:02:26.268
environment around them.

01:02:27.349 --> 01:02:28.329
And so I found it really

01:02:28.369 --> 01:02:29.070
interesting and gave me a

01:02:29.090 --> 01:02:30.010
lot to think about,

01:02:30.590 --> 01:02:32.032
especially when I'm out in

01:02:32.092 --> 01:02:34.032
nature with the wife and dog,

01:02:34.092 --> 01:02:36.153
just kind of staring at trees and stuff.

01:02:36.414 --> 01:02:38.494
um so yeah check it out no

01:02:38.514 --> 01:02:39.635
plants are intelligent for

01:02:39.655 --> 01:02:40.875
sure a hundred percent

01:02:40.914 --> 01:02:42.096
totally with you there's a

01:02:42.275 --> 01:02:43.175
there's a good one if you

01:02:43.516 --> 01:02:44.536
are out and there's plants

01:02:44.596 --> 01:02:46.336
or grass being cut and you

01:02:46.916 --> 01:02:48.418
notice the smell of you

01:02:48.438 --> 01:02:50.057
know freshly cut grass what

01:02:50.097 --> 01:02:52.298
is that it's a fear um

01:02:52.679 --> 01:02:54.039
intensely a fear pheromone

01:02:54.059 --> 01:02:54.860
that's been sent off to

01:02:54.900 --> 01:02:56.659
warn other grass that that

01:02:56.739 --> 01:02:58.280
there is danger around like

01:02:58.300 --> 01:02:59.800
that is the sign of intelligent life

01:03:00.768 --> 01:03:01.568
Yeah, for sure.

01:03:01.628 --> 01:03:02.791
There's lots of super

01:03:02.831 --> 01:03:03.931
interesting examples in

01:03:03.952 --> 01:03:04.833
this book and just like

01:03:05.534 --> 01:03:07.797
plants acting like animals essentially.

01:03:07.836 --> 01:03:10.280
And it's kind of a mind

01:03:10.400 --> 01:03:11.221
blowing experience.

01:03:13.704 --> 01:03:14.784
I read a book recently and I

01:03:14.804 --> 01:03:16.327
can't remember which one it was,

01:03:16.847 --> 01:03:17.849
but I've been studying

01:03:17.909 --> 01:03:19.990
mushrooms a lot lately and this book,

01:03:21.197 --> 01:03:23.079
showed where mushrooms

01:03:23.219 --> 01:03:24.478
actually act as a

01:03:24.518 --> 01:03:26.539
communication agent for

01:03:27.199 --> 01:03:28.980
trees in the forest.

01:03:29.139 --> 01:03:33.041
And so like a specific set

01:03:33.081 --> 01:03:34.001
of insects can start

01:03:34.021 --> 01:03:35.882
attacking trees on one end of the forest.

01:03:36.302 --> 01:03:37.402
And then the mushroom,

01:03:37.682 --> 01:03:39.543
because it's the mycelium

01:03:39.603 --> 01:03:40.664
that grows underneath the

01:03:40.684 --> 01:03:41.784
entire forest floor,

01:03:42.284 --> 01:03:43.784
will relay that information

01:03:44.144 --> 01:03:46.126
to the other trees in the forest.

01:03:46.166 --> 01:03:47.885
And so by the time the

01:03:47.965 --> 01:03:49.226
insects work their way down

01:03:49.286 --> 01:03:50.447
to those trees,

01:03:51.186 --> 01:03:52.527
that those trees are

01:03:52.568 --> 01:03:53.748
producing a scent or a

01:03:53.809 --> 01:03:55.568
pheromone that actually

01:03:56.429 --> 01:03:58.490
repels the insects by the

01:03:58.510 --> 01:03:59.192
time they get there.

01:03:59.211 --> 01:04:01.293
And I thought that was super cool.

01:04:01.413 --> 01:04:03.733
That is cool.

01:04:03.753 --> 01:04:04.954
I'm in on like a mushroom

01:04:04.974 --> 01:04:07.155
and foraging Facebook group.

01:04:07.376 --> 01:04:08.115
And everybody just like

01:04:08.135 --> 01:04:09.117
takes pictures of fun

01:04:09.137 --> 01:04:10.318
mushrooms that they find

01:04:10.777 --> 01:04:11.657
when they're out and about.

01:04:11.677 --> 01:04:14.179
And it's just such a nice

01:04:14.219 --> 01:04:15.760
little group because it's so chill.

01:04:15.860 --> 01:04:16.320
That's it.

01:04:16.400 --> 01:04:17.521
There's like, there's no drama.

01:04:17.541 --> 01:04:18.262
There's no nothing.

01:04:18.302 --> 01:04:19.742
It's just look at this mushroom I found.

01:04:21.956 --> 01:04:23.438
There's an app called

01:04:23.577 --> 01:04:25.918
iNaturalist that I use for that.

01:04:25.938 --> 01:04:27.099
You can take a picture of

01:04:27.639 --> 01:04:28.320
not just mushrooms,

01:04:28.340 --> 01:04:29.820
but anything you find that

01:04:29.840 --> 01:04:31.001
you can identify and then

01:04:31.081 --> 01:04:32.340
upload it to iNaturalist.

01:04:32.380 --> 01:04:35.202
And it will try to auto

01:04:35.222 --> 01:04:36.503
detect what it is for you,

01:04:36.523 --> 01:04:37.762
but then other people will

01:04:37.822 --> 01:04:40.264
come in and confirm or tell

01:04:40.284 --> 01:04:41.204
you what that actually is.

01:04:41.505 --> 01:04:42.905
That was pretty cool.

01:04:43.005 --> 01:04:44.485
I used to do that a lot as a kid.

01:04:44.525 --> 01:04:45.365
I'd have like the field

01:04:45.405 --> 01:04:46.387
guides and go out with my

01:04:46.407 --> 01:04:47.347
field guide and try to like

01:04:47.387 --> 01:04:48.608
identify all the plants.

01:04:49.027 --> 01:04:50.128
But now we have an app for that.

01:04:50.849 --> 01:04:51.668
There's an app for that.

01:04:53.666 --> 01:04:54.266
Always.

01:04:54.327 --> 01:04:55.226
Will, what's your pick?

01:04:55.867 --> 01:04:58.710
My pick is there's a series

01:04:58.909 --> 01:05:01.092
on Netflix called Kunk on Earth,

01:05:01.831 --> 01:05:03.413
and I thought my sense of

01:05:03.432 --> 01:05:05.695
humor was really, really dry,

01:05:06.735 --> 01:05:10.699
but this lady takes it to a

01:05:10.759 --> 01:05:11.579
whole new level.

01:05:12.099 --> 01:05:13.581
This series is just

01:05:13.661 --> 01:05:15.382
hilarious because she sits down.

01:05:15.742 --> 01:05:19.224
It's like the history of Earth, basically,

01:05:19.726 --> 01:05:21.347
but she'll sit down with

01:05:22.224 --> 01:05:24.065
legitimate world renowned

01:05:24.385 --> 01:05:26.387
experts in their field and

01:05:26.547 --> 01:05:27.967
ask them the most off the

01:05:28.007 --> 01:05:29.168
wall questions and that to

01:05:29.208 --> 01:05:29.827
me the hot was the

01:05:29.847 --> 01:05:31.028
highlight of the series is

01:05:31.048 --> 01:05:31.889
just the looks on their

01:05:31.929 --> 01:05:33.530
faces when she would ask

01:05:33.550 --> 01:05:35.130
them these questions that

01:05:35.190 --> 01:05:36.510
had absolutely nothing to

01:05:36.550 --> 01:05:37.271
do with what they were an

01:05:37.331 --> 01:05:39.512
expert in but super

01:05:39.612 --> 01:05:40.652
entertaining series

01:05:41.032 --> 01:05:42.652
definitely ten out of ten

01:05:42.693 --> 01:05:44.233
stars kunk on earth on

01:05:44.273 --> 01:05:45.974
netflix a hundred percent

01:05:46.074 --> 01:05:46.675
and you know there's

01:05:46.715 --> 01:05:47.835
actually two other things

01:05:47.855 --> 01:05:48.936
there's kunk on um

01:05:50.103 --> 01:05:51.364
uh britain I think and then

01:05:51.384 --> 01:05:52.063
there's like one on

01:05:52.103 --> 01:05:53.445
christmas and shakespeare

01:05:53.465 --> 01:05:55.387
so you have some episodes

01:05:55.467 --> 01:05:57.367
too oh sweet I will have to

01:05:57.427 --> 01:05:58.349
check those out because I

01:05:58.429 --> 01:06:02.231
love her sense of humor all

01:06:02.251 --> 01:06:04.612
right I've never heard that

01:06:04.672 --> 01:06:08.315
that's fun yeah it's very

01:06:08.355 --> 01:06:11.637
very accurate all right

01:06:12.402 --> 01:06:14.005
That brings us to the end of the episode.

01:06:14.125 --> 01:06:15.947
Thank you everyone for listening.

01:06:16.568 --> 01:06:17.449
Jillian, Warren,

01:06:17.550 --> 01:06:18.510
thank you for joining me

01:06:18.751 --> 01:06:19.612
hosting the show.

01:06:19.972 --> 01:06:21.394
And AJ, thanks for coming on the show,

01:06:21.414 --> 01:06:21.635
man.

01:06:21.715 --> 01:06:22.996
It's been a pleasure talking to you.

01:06:23.476 --> 01:06:24.318
Thanks so much for having me.

01:06:24.338 --> 01:06:24.958
It was a lot of fun.

01:06:25.559 --> 01:06:26.039
Right on.

01:06:26.601 --> 01:06:27.422
Glad to hear that.

01:06:27.663 --> 01:06:29.465
And I will see everyone next week.

