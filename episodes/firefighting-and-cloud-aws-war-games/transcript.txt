There we go. What's up, everyone? Welcome to another episode of Adventures in DevOps. Warren, thanks for joining me again. Yeah, I think you don't need to thank me every time I decide to show up. I know we said that we were going to have maybe a cool fact at the beginning of every episode, and I try to come up with one, although I do believe last time Jillian committed to bringing the fact. Maybe it's a coincidence that she's just not here today. I will have to step in and share something. I forgot the pin for my backup phone and I didn't remember how many digits it was. And on Android, apparently you can keep going forever. So I was on one hundred and fifty attempts. of trying to guess what this pin is and it wasn't like like I have no I don't care about factory resetting it but you know I just wanted to see like can I get it and actually a hundred and fifty one I finally got it I had up the pit the pin size to twelve digits and like that was like a realization for me so you know if you forget your android pin just keep trying there's there's no there's no time I mean there's a thirty second timeout prep um per attempt but other than that you just keep going so is that like manual brute force attack Is that the category this would fall into? Yeah, for sure. Right on. Cool. I'm excited about today's episode. Joining us today, we have Matt Lee from Schematical and from cloudwargames.com. Looking at your background here, Matt, co-founder of drawnby.ai, author of shiporgetoffthepot.com, and then gymnastics coach for eighteen years. and out of Madison, Wisconsin. Welcome Matt. Thanks. Thanks for having me. Yeah. Um, yeah, shipper get off the pod.com. I'm not doing any more, but, uh, the, um, I actually did write a book on coaching gymnastics called hacking, fear, tips, tricks, and strategies, how to help high performing athletes through mental issues. So fun facts. Right on. My youngest son did gymnastics from, I think, from when he was about ten all the way up until his senior year in high school. And his senior year, I mean, you're probably well aware of this, like the number of collegiate positions for men's gymnastics is very, very small. And so he knew that that wasn't going to get him anywhere and he wanted to participate and some kind of activity at school because for his entire education, he would get out of school, his mom would be waiting in the parking lot and she would drive him an hour to the gymnastics facility and he would work out for four hours doing his homework in the car. And that was his life growing up. So his senior year, he wanted to do something that was school related and that was the end of his gymnastics career. But it's a commitment and there's so much mental to it. Absolutely. Yeah, it's not an uncommon story. Unfortunately, men's gymnastics is just not doing as well these days. Too many competitors, this sport, parkour and other things. Right, for sure. Yeah. And I think the commitment to it just kind of kind of just like self filters, you know, so that when you do get to those people that are there, you've got some very committed individuals. Yeah, you play football, you play soccer, no one plays gymnastics. Right. Fair point. Cool. So tell us a little bit about, actually first, it looks like you've been in Wisconsin for a long time. Are you a Wisconsin native? Yeah, born and raised. I've traveled the world, but I keep coming back here and about four years settled down, bought a house out in the countryside, a little north of Madison. and been loving it. Right on. Madison is fantastic. I lived there for two years, and I will say that I love being there in the summer. That's the only qualifier that I find. Summer and fall, yeah. You can get this time of year, and that is nice. What's your current temperature today? Oh, it's actually really nice. I was on site earlier. I let the dogs out, and I do some jumping jacks to wake up, get myself ready for the podcast, and Got to be around ten degrees. So it's actually very pleasant compared to the year twenty we were close to a week ago. Yeah, that's balmy. Right on. So cloud. I'm going to mess up the name. Damn it. Sorry about that. Cloudwargames.com. Tell us a little bit about that. And don't feel bad about messing with the games. I keep calling it Cloud Watch Games because I'm so used to it. I stay with Cloud Watch all day long on AWS, Amazon Web Services. and uh you know with cloud war games yeah so this um goes back a little bit if you don't mind me going back I had a team I was running uh I think I had like eleven people on staff and I was I needed to come up with a training um idea a project for that so I've come up with a couple different games over the years and different tools to help out my devs and so one of them was the predecessor to cloudboard games which is where I would take a whiteboard and draw and dragon-style game with them. And what I did, besides just writing down all these different things, is I had hundreds of scenarios of things that had gone horribly wrong over the years that I would then throw at them. And I'd say something like, I'd give them a brief, which would be like, all of a sudden, your website's timing out. You know, what is that? And they'd have to walk through and tell me how they wanted to solve it. And so this one, in this case, all rule from one of the various instances or resources running there and sort of time out. So I've got all these other ones incident cannot deploy. And so it's, you know, you don't get a lot of information a lot of times when people come to you saying there's a problem. Like at the time it's customer service person saying our guys, you know, our shopping cart is disappearing randomly for our e-commerce store. People all of a sudden the shopping cart's empty, you know, so using that, master. And it was a pretty good training tool. You can really figure out who was, you know, thinking outside the box, who was like really analytical or who just kind of, I don't know, you know, it turned out to be a great sales tool as well. You walk the client through this and they're like, that can go wrong. Like that can happen. You're like, yeah, I can. What would you do? I don't know. I guess I'd call you. All right. So that is how it started. Then, uh, Literally last Thursday, I was on a mastermind group, and I was talking about some goals I got. I was going to launch a community for people to want to learn AWS. I was telling them about my idea for WarGames, which is where we spin up actual infrastructure, like AWS infrastructure. Because we've got infrastructure as code. It's not like I have to manually do this. I just spin it up, and then I basically knock down a part of it or fill up a database or remove a security group or something or DDoS attack myself for the fun of it. And then people will, the participants, the hot seat participants, which people with their cameras on, ideally, will be sitting there and they'll be like, hey, they'll try and fix it. And there's a couple different variables. I've got a beginner, intermediate, and advanced. So like the beginner one, maybe they would just talk to me and I'll fix it. I might view the screen. The advanced ones, I'll give them the actual AWS keys and say, here you go. Go ahead and fix it. available to all ages uh so I'm getting creative with it but yeah that was the impetus of uh oh yeah so friday I bought the domain cloudworkdance.com and then I set it up and sent out a mailing list to my measly hundred subscribers and I had the biggest reaction I've ever seen I've got people signing up coming out of the woodwork I have no idea who they are and uh then I emailed you guys and then you guys were like you want to be on so here I am five days later and uh Well, I'm glad it's going, you know, so quickly for you, you know, to have a hundred different scenarios that must have taken quite a long time. Like, I'm just thinking back throughout my career and like, I don't know if I could come up with like a hundred things that had gone wrong and have the whole scenario. I mean, for sure, more than a hundred things have gone wrong in my career. It's just, you know, having remembered them or have written them down, like that must have taken some effort on your part. I am a compulsive. I mean, I think I showed you guys in the preview. I am a compulsive note taker. and journaler and whatnot. I actually have multiple journals. I have a journal by the side of my bed, journal here, journal there. I've got business notebooks, I guess. So I piece it together. And you know, if I'm not, I write it down. If there's another scenario, if something goes wrong, I also make a comic about it sometimes, so. Right, yeah, you shared some of your comics with us when we were emailing back and forth. Are those something you publish regularly? I try and do them. I was doing them twice a week, but now that my content schedule's changed and I'm doing more video content publicly, again, I'm probably only going to do once a week, but we'll see. Right on. That's still a lot. That's, you know, fifty-two a year. That's still a lot of content. I'll be honest. They're not all bangers, but some of them take up. Do you find that through through your I mean, having kept in journals of all of the different scenarios and what had happened, what went wrong and how it was fixed, like did that have a beneficial impact for your career? Or do you just find that you are able to consume that information now to make the cloud war games? I mean, I had thought, and this idea I had thought about coming back to for a long time. So I have been keeping them. And a lot of times now, I mean, I would just write a deal to my deal emailing list. If there's something that goes wrong or something I fear about, here's one that I want to really run a snare through is the S-III ransomware attack that's out there right now. I'm going to attack myself with that. That should be fun. But yeah, I write it down and mail it out to people. So now, yeah, I guess collecting all that data has been helpful. I mean, in the last year, I've been better I hired a business coach, and I've been better at sharing that information. Before, I'd write it down just because I specifically take notes. And then now, it's like I'm actually finding and helping other people get updates on Amazon, get updates on things I'm an expert in that I enjoy doing. So yes, I think it's got a beneficial impact, but I didn't really capitalize on that until fairly recently. Yeah, I mean, the fact you just mentioned this like I can't believe I haven't been keeping track of every single bug that I've run into that has some sort of, you know, out as it turns out, you know, and then a story because I feel like there is some novel interesting thing there that is worth sharing and. Now I'm starting to think, would I give this advice to even experienced senior engineers? Oh, you know what? Start keeping a personal journal of these sorts of things. I usually talk about it in a business context. It's great to keep track of what you're doing from a brag standpoint so that you can report on it during your hopefully quarterly performance evaluation. You have a list already of everything you've done. and I think there's a lot to be said there but I think there's another level here of like the interesting technical challenges that you had to face and how you sort of tackled them because like you've already found a new opportunity based off of what you've written down to you know turn into a business yeah I mean it's a good habit to do after action reports especially when you're training a junior or something like that you know they make a mistake you know a fairly expensive mistake maybe you know they delete something they shouldn't and then We just, you know, let's say I got a client, you know, their website goes down, let's say it costs them a hundred thousand dollars an hour. Junior takes down that website for a while. They can look at it like, oh my God, we lost all this money. Or you just say, oh, we invested this much into our junior learning important lesson. Let's have them present that in an after action report to the whole team. So we got, you know, there's a positive from it. Here's, you're writing the SOPs for the business, standard operating procedures for the business. I don't know what not to do, you know? That's something I try and push towards my developers. Fail forward faster. Know where to fail at, where you can make mistakes at. Fail on staging. Nuke staging out of the water and slow down our dev team for a day still costs us less than if you nuked production for even a few minutes. Learn where to fail, learn how to fail. This is one of those rants you get worried about. I want to come back to something. There's been a couple of things you've said that have stood out to me, and I want to come back to those, even though they have nothing to do with cloudwargames.com. You mentioned that you're in a mastermind and then you also talked about your journaling. And those are two of like the consistent things that like if you study like high impact, high performing people like those two things. come up over and over again. So how did you get into a mastermind and what does that look like for you? Uh, I'm actually in several, um, and, uh, we can do a whole other podcast on the consulting side of things, instruction, your business, which I'm going to save for another time. But, uh, there, there's one where I am, uh, a group coaching, uh, where, where they do live Q and A's and stuff like that aimed at solo, um, consultants, expertise, people who want to, with themselves as experts. I would never call myself the expert, but I've been doing this a long time. So that's a good one. I have direct access to the main community guy there. And the other one is the Room Around Robin approach, where I found that one, I think, through another community, actually a third community, where it's actually got very limited interaction, but they do things. And I can give you guys the name to some of this stuff if you want later, but I'm actually starting to know I'm hoping to start another mastermind group, but I've kind of deprioritized that for, uh, CTU for, um, Cloud of Oregon. See, now I don't even remember the name. Um, because that's, that's got way a lot of traction right now, but I would strongly advise that, especially if you're, you're, you're going out there and starting on your own and you're not part of the big team. If you're, if you're starting your own consulting, you need that sounding board. I'm very fortunate to have a informal business partner that we have just, we are, always bouncing ideas off each other. Cause it can be, you know, in a vacuum when you're trying to get clients, it can be, you know, seem very daunting, seem very dark. Yeah, for sure. I've, I belong to a mastermind that I've been in for well over ten years now. And it's, it's been, it's been the difference in my career because like our sole purpose in that group is to call each other out on our bullshit and hold each other accountable. And it's made a difference. Yeah. We actually, we actually did a full episode dedicated to, uh, Will's being called out on his bullshit. I mean, cause there's a lot of it. Like those, the guys in my mastermind, they have a full-time job calling me out on my bullshit. Yeah. Uh, My most valuable people are the people that are the bluntest with me. They're willing to be like, stop building developer tools, you fool. Right? And giving them away for free. I think that's the important caveat there. Yeah. For sure. And then on journaling, is that a daily exercise for you? Yep. Let the dogs out, and then it's pretty much straight to journaling. And then I've recently been trying to do more journaling in the evening, actually. to close the thought loop. I have a lot of trouble sleeping, and I wake up in the middle of the night, and I'm like, oh, all these things I should do, so right before I go to bed, I try and write down anything that's open-ended here on a piece of paper, and I've got sticky notes on the side of the bed that I'll write, oh, to-do, to-do, to-do, and that way I could be like, okay, tomorrow, Matt, we'll get to this, Yeah, I think there were a non-trivial number of times where in order to sleep well at night, I had to write up a whole email regarding a situation and then just not send it. Not send it that night. That's the important factor there. Yeah, for sure. When you're frustrated, definitely don't click send. But, you know, it's because those thoughts are going around in your head, and it's like I'm constantly focused on whatever that is, whatever problem it is, whether or not I did the right thing in that situation, and sometimes just, I mean, I know from a fact now, I have to terminate those threads, whatever the thread is that I picked up and I started just getting it done, whether it's writing an email. I use, like, every single kind of scheduling tool tool available. Like I will delay emails to myself. I will snooze them. I will send myself future emails. I'll use calendar events, anything to get stuff off of my radar and into some sort of temporal delay so that I can come back to it later when I'm like at the right time. Yeah, that's a big one. You talk about, you know, you're frustrated and you write that email. When I get frustrated with something or possibly even a colleague or something like that, I write it on a sticky note and a month later it's a comic. So I just, you know, that's how I do. I don't send it to them necessarily unless it's, you know, funny. Yeah. No, that's great. Right on. So we'll come back to Cloud War Games. You've got people signing up for it. Is it like, are you operating like scheduled head-to-head matches or is it a single player experience? What's the interface look like? I like to do it with small teams. So I'm thinking right now we've got four people in the hot seat. We're going to experiment with our initial batch. So that means I've got two events. Four people could be on camera. Mike's hot. And hopefully anybody else that wants to be in the wait list or whatever, the gallery, they can chat quietly. But like I said, I'm going to do three tiers of it. And in the future, I might do four people sign up for big dinner, four people sign up for intermediate, four people sign up for advanced or something. but the, you can kind of just hang around if you did the beginner one and you can listen to the intermediate and the advanced, but I don't want the advanced people solving the intermediate one instantly there. And so the way I do it is there'll be a pre kind of, let's just say it's an hour long session. First, fifteen minutes, you get in there, you get your bearings. You can, I'll send out network diagrams using my pixel art network diagram software that I use for my YouTube videos. And I had a time and I'll set up a terraform ahead of time. So then people can get a feel for that. Um, we get in there, maybe you set up your dashboard, you know, you figure out your firefighting tools for the first few minutes. And then I do the brief and I say, customer service just called and said, you know, that we, we just sent out, this is actually, this is probably my first one. So preview for those of you guys, I don't know when this is coming out, but preview for the first advanced one, uh, customer service shows up and says, we just sent out a lot of emails from our primary email address that people get. and it's for a pharmaceutical ad of some nature. It's like that. And we don't do that. So what just happened? So, and that happened to me, that did happen to me. And it also was a conflict. So, you know, and then after that, let's just say, fifteen minutes to a half an hour diagnosing. So you got to do diagnosis first. And then from there, they got to come up with a solution. And I'm going to give read access to my AWS account to anybody on there. I'm not going to give you right access. So you get to tell me the solution. I'm not never giving anybody else right access to that. And then from there, last fifteen minutes after action report, you know, I kind of give them a peek behind the scene. What did I do and how could you have improved the speed at which you diagnose the situation? So. Oh, that's cool. That's cool. Are you recording these for creating a YouTube channel where people can watch it after the fact? Yes. I mean, one thing I thought about is that part of the need for this thing is that there are so many AI-generated resumes out there. It's tough for people, software engineers, DevOps people, to stand out in that stack of resumes. Also, so many people are using AI to code. And I'm not against that, but the standard coding tests don't work so well. So this, I want them to record. And I want them to share that, be able to share this with perspective hiring people. You know, on the other side of this, if you're hiring people, how do you know that they're actually able to problem solve? Don't you want to kind of get a feel for it? Don't you want to see if they are collaborative in nature or are they more like, I'm going to just go heads down and not tell anybody what I'm thinking. You know, you want to get a feel for that. Maybe there's, you know, you want one or the other, but this could be a really powerful hiring tool, I think. Oh yeah, for sure. Yeah. Yeah. Cause then you get like a little insight into what this, what it's like to work with this person under pressure, which is everything that you want to know before hiring a person, but have no way to test it. Yeah. And then the flip side, it's a great way to inoculate yourself to stress. I see so many developers and the, you know, the CEO comes running in and saying, we're losing money, we're losing money. And they're screaming and everything. And they're just like, Oh yeah, they lock up, you know, and this inoculates you from the stress. We talk about, dealing with this type of stress. Because in my gymnastics career, if you're spotting somebody and you mess up, you could significantly injure or harm an athlete. You know, this, some rich guy loses a bunch of money, but no one dies. And so if you put that in that perspective, it makes it easier to handle this stressful situation. I mean, for sure, there's not a lot of opportunity to practice emergency situations in the tech. Right. And so the only time we're in that situation is when we really mess up. I mean, some companies do like there is this idea in the industry, oh, you should, you know, practice your run books, you know, databases being down, regional failures, et cetera. But I think that a majority of companies, the ones who need to practice at the most because they are in too much in firefighting modes are exactly the ones who don't practice it. Yeah. So I mean, this this could be more than just a hiring tool. Realistically, this could be like out of band practice for engineers at any company to sign up and be like, hey, you know, go through this equivalent, you know, live training, right? Continue education on how to do these things. You know how you're going to respond in that situation and then potentially be graded or get opportunity like feedback on how they can improve. Yeah, I mean, I could see myself being bringing this into a large company. and then looking at their infrastructure setting up a drill similar to their infrastructure and knocking it over and doing trainings internally I mean there's there's all sorts of options I mean back to the kind of individual side I'd love to have a leaderboard and championships eventually I've got ideas for all sorts of fun stuff to do but yeah there's I think there's a lot that can be done with this could be like the next next iteration of um like e-gaming, like the professional gamers. Yeah. You're actually not, not just, I am a gamer obviously, but you know, a little more productive than just, you know, Fortnite. Yeah. So I think I saw, Will, you were into CrossFit. I can see the CrossFit games for, you know, ops people, for infrastructure people. Oh yeah, for sure. I'm sure no one ever heard me say this before, but what I've done with work, what I want to do is go home and play another game. Play a game that's exactly the same as what I do for work every day. With higher stakes, potentially, than what I'm doing at work. Yeah. I'm hoping people do that. So far, it seems like people are interested. Yeah. I think it's exciting. I think it's like... Well, I'm going to make that a little stronger statement. I know that there are a lot of people who are early in their career, and DevOps is one of those industries that it's so hard to get into because you can't get into DevOps without having DevOps experience, and you can't get DevOps experience without working in DevOps. And this actually gives you a way to solve that problem. That is Thursday's comic, by the way. You have to have five years of experience for this entry-level job or whatever. How do you have chicken and egg? This might solve that problem, though, you know? Yeah, I mean, I think it's sort of the same thing, though, where people don't leave the university and go directly into the executive role, where realistically part, I think one of the most important aspects of DevOps is sort of understanding the connection of the business and what you're trying to execute and running it and how that impacts the technology and what it actually means for uptime and providing that as a value add to whoever your users or customers are. And I think one of the huge challenges there is that's just not really something you're taught in any level of education system. You don't go to your chemistry class or your physics or calculus and be taught about how that provides value to end users somewhere and how critical that is. I mean, because if you were, then you could sort of maybe make the jump there. But I feel like that's one of the biggest things, the lack of experience, but also the lack of attention to how to utilize those skills in a real-world environment. And I think the email sent out that has a business impact starts to scratch that. It's not just that there is an emergency situation. It could just be about a debugging experience, like how did this happen? But understanding that there is a real impact to real customers somewhere that someone will care and money is getting lost. I think that's the sort of thing that a lot of people are insulated throughout their academic career. Yeah, that's the I see engineers making a lot of decisions based on ones and zeros and not dollars and cents. I like that tagline, right? I see it happening. And as a business owner, I I have to take into account the bottom line. Recently, I had a major outage for one of my clients right before the holiday season, and we had a triage. We actually had to decide to have a bunch of different domains. It's not Coke or Pepsi or anything, but think about how Pepsi owns Mountain Dew and it owns KFC or whatever, it owns Taco Bell. One of those, Mr. Pibb was down and was causing problems that rippled across the whole system. We had to triage that and say, listen, we don't sell that much, Mr. Pibb. Shut it down. We don't care. It's interesting. We had to do that in real time while firefighting. That was a pretty exciting day. Same type of concept I see with the open source software versus paying Amazon. If you're a big company, you've got thousands of people and you can save millions of dollars, it makes sense to host your own cluster of XYZ. But if you're a smaller company and The engineers are getting that, oh, yeah, my man hours are being wasted maintaining this thing, and we're only getting an ROI of one-third of what my man hours are spent, you know, what they're paying me to maintain this cluster. Then what are we doing it for? You know, so that's a very important skill that, yeah, you're right, I don't teach in schools. Yeah, for sure. I think it's something I've said on this podcast at, at least a billion times, like no company cares about how tight and compact and efficient your Docker file is. And because they only care about what value it's providing to the customers who are paying money to that business. And I think that's the biggest career advice anyone in this industry can learn is your technical skills are a tool used by the business. They're not the product. And to be clear, I'm not saying there's one right answer for the other. You've got to take into account the bigger picture and say, you know, we're a company this size, you know, how much time should I be spending on this? Or is that moving the needle for the company? You know, because you always got to pick what, you know, is important there. So I'm sorry, I didn't mean to interrupt you. No, I was done. That was it. I mean, I think this goes in another direction as well, and I'm sort of curious your perspective, Matt, is that right now I know there's a... Allegedly, the job economy is not great for knowledge workers, and I'm curious if you see particular opportunities in some way, or really, how do you stand out? Are there particular things that do help engineers in this area or throughout the industry stand out compared to, we talked about AI-generated resumes, or other aspects that they could really lay on? Any thoughts on that? Yes, tons. The first thing is that I'm actively talking to several companies that are creating large language models, LLMs, to basically replace me and my designs so they can just put in words and then it spits up Terraform and it goes. They're not there yet. They're a long way from it, be able to maintain it, but they'll get there. That means I'm out. That's my whole job there. just like elevator operators back in the day. When was the last time you saw an elevator operator? Been quite some time. So who wants to stand in a hot box with people's enclosed space like that, especially after COVID and everything? Oh my gosh, no. So no more elevator operators, but they need engineers to maintain those things. Those things fall apart. That could be real bad for you. So you've got to evolve. That's something that I can't, They're like, okay, I'm going to be the one typing in the code for the CSS or pixel pusher. And you're like, no, you want to be a step above that. And you want to find that next step. So things I do to stand out, I mean, I make sure they see my face. I do a ton of content on stuff. I try and, you know, basically, I mean, I'll be honest with my content. Sometimes I'm just reading in the news. And that way they see my face and they can recognize me there. But that's something I personally had to get over. I'm an introvert, oddly enough. I probably don't seem it, but I introvert by nature, extrovert by necessity. So, you know, don't be afraid to make videos about stuff. Some of my videos, one of my videos from, this always bugs me, but I did a video where I was trilaborating Wi-Fi signals in between projects to track down printers and different things just because I was bored out of my mind and I put it on YouTube. And it's still one of my most popular videos and I don't do that. I have no cap, I have no, So this stuff like that, you know, the communication, that's a huge skill. You need to, I mean, even if you're typing into an LLM, some guy in a suit is going to come up and say, Hey, we need this bigger picture thing. And then you can sure go ahead and type to our army of LLMs and have it generated. But if they can't do that prompt, there's value to you doing that. So find a way to bridge that gap between human and machine. It's just, we're just changing the way that works, you know? So find ways to add value to other people. That's one thing I obsess over. Now that this tool here, my winners, I'm going to send right to my clients. They're like, you need a guy? I need a girl. I need a person, whatever. Here you go. This one just won. This one solved my puzzle in two seconds flat. Yeah, that's what I would do. Communicate. That's it. Give them a wide surface area. Don't communicate the same way everybody else does. There's a reason I use pixel art everywhere. People remember it. I love my clients' death. They gamed as kids. We're at the perfect age to game as kids. They remembered know mario bros and so they see that and they remember so stand out and and and communicate you know I love the perspective on spend some time creating content because it really does resonate with the there's only so much you can do of practicing LeetCode interviews or learning a new programming language. But really take that next step of doing literally anything else. If everyone's focusing on tech, focus on creating content or making some artwork or using LLMs or whatnot or hand-drawn or making comics because that is some way that you can really stand out. You can put on your resume, oh yeah, and also all of these comics are me. This is something about me that really stands out, that's unique for who I am compared to everyone else who's trying to compete for the same job. I think right now, I think this is always true, it's always now is the best time to say even start your own company. I see like a lot of resumes are like practice projects by engineers who are interested, like, oh, I made a recommendation engine or I made this other thing. And the most important question I always ask is, why did you do that? Like, what was your end goal here? And it's like, oh, I just wanted to do a project. I'm like, OK, well, that doesn't really mean anything to me. You had no bounds, no, no restrictions, no constraints on what you were doing. You just went wherever you felt like it. What's way more interesting is, oh, I was actually trying to make a business or I was actually trying to automate my my pictures being uploaded to LinkedIn or whatever. And like, I had a real problem that I actually needed to solve. And this is how I went about solving it. That's a way more interesting thing to hear as a potential interviewer. So, you know, the content's great. The web comics are great. You know, anything that really makes you stand out as an individual. Yeah. Another thing that pops into mind is the T skill set. You know, you don't want to be a generalist. You know, if you can find a niche, a niche that's in demand, you know, then folks are, I think my AWS niche for my consulting business is too wide. I'm trying to figure out how to like zero that in. Like maybe I'm just going to do WAF, you know, or now that I've got these trainings, I'm probably going to focus on that. But, you know, I was thinking about just being the WAF commander, web application firewall, because I fight DDoS attacks all day long and I could do a whole course on that. I know we teach a whole course on that. So, but yeah, find a niche that's in demand and dive on in and, I've got a discord full of a hodgepodge of brand developers and they had these really cool projects, but they, that are niche and they, they just don't showcase them. And they tell you about it in Texas. Like you've got cameras everywhere. You're computing important screen, just screen recorded and show this cool project, you know, off as much as you can. Yeah. Yeah. It's definitely, um, we're moving from like a technical marketplace to a creator marketplace. And it's, I think what both of you are saying really highlights that it's the technical skills are the foundation, but then as the creator, you have to showcase and market those to make you stand out and then identify like, here's the thing that I do like on the T like you've got the top line of the T here where everyone has the same skillset. And then here's where I go deep. Yeah. I'm not saying don't, you know, don't learn things outside your purview, but don't make that your public facing persona. You know, you, I, I know how to do a lot of things. I could do WordPress to anybody ever, but you know, Because publicly, I have a very particular thing I talk about. And you've got a very short amount of time to get people's attention right now with all the spam and garbage out there. So you've got to figure out a way to do that very quickly and find people that have your problem. I solve million-dollar problems for some of my clients. Everybody find the businesses that are suffering from your stuff. I mean, I've got criteria that I use for lead gen work. They are, they run AWS. Great. You know, I have a very specific size requirement. I don't want to be too big. Got an HR department. You're probably bigger than you don't need me. And then if you've gone down recently that I'm talking to you because you've, you've got the pain. You've like, if your site's slowing down because you're growing too fast, I want to talk to you right away and you want to talk to me. So if you have that criteria, then it makes it so, out to the Lambo Joe's that doesn't have the need that you can scratch. You want to be like, this is your problem. This is my expertise. This is how I can solve that problem. This is how I've solved it a hundred times. Case studies. It's a big thing I'm working on this year is getting more case studies on my website. Show them how you solve that exact problem. Put a coin in me, I'm going to keep going. Yeah, definitely. Now I'm going to ask you another question. The sort of issues that you see come up for each of your customers and from your experience, do you feel like they are sort of repetitive in any way? Like, oh, you've seen this problem before? Or do you see that some of these problems, they are actually nuanced and new in some way that you haven't experienced? Yes and no. The people problems I see, That pops up quite a bit. So I don't do a lot of hands-on work for my clients. I do advisory and oversight quite a bit. So they pair me with a project manager, and they say, we've got this problem. We want to scale up to this thing. I do a design, and then I work with PM to hand that off to other people to do. So I train other people. I see a lot of people problems that are repetitive. The technology problem, yes, nine times out of ten, it's a security group problem. So that's true. But with that said, past that, there's always new technologies. We're getting DDoSed in ways I've never seen before. It's quite fascinating. Actually, if you guys will indulge me, I've got one kind of more prop like the game that you guys might find interesting real quick. I'm going to digitize this. Oh, no, the spinners. I lost the spinner. Oh, well. So you talk about repetitive stuff. When I had some mid-level junior devs, a lot of times they'd get stuck on things and they'd be like, I don't know what to do. I don't know what to do. They'd come up to me and a lot of times it became repetitive. So I took the top like ten or twenty things that, I don't know how many things it is, that was happening, including check the security group, you know, and I put a spinner on this thing and I said, you can't bug me until you've spun it at least, you know, I think I said three times, tried three different things. I'm like, you got to tell me you've already checked the logs. You've already, I'm not going to explain that abbreviation, but, um, yeah, add more logging, you know? So this is actually coming soon to, uh, to cloud at war games. Uh, for the beginners, I won't take this away from the advanced people. This is like, you got a free spin, you know, spin. Yeah. And, uh, Exactly. Phone a friend. Ask your peer before you come asking me. Like another junior might actually have the solution to work together, collaborate people. And not just in the same company. I find that, especially above the senior level, a lot of engineers haven't realized that they can go outside the company to solicit assistance. You don't need to pay someone, but there are communities out there that you can go to. And it's so ridiculous to me that at SMBs, small, medium businesses, not giant modelists, the FANG companies, etc., you know at smaller sizes you just don't have anyone that's more experienced than you in the company you have no one to mentor you no one to sort of bounce ideas off of and they're like well what do I do and I'm like well how many how many discord servers are you in like I'm like in thirty or forty or something like there are those out there where people you know are willing to provide assistance if you just ask the question publicly and the idea that they're just not even they don't even see this as an opportunity is like like really great additional source of valuable information that you're missing out on Yeah. I mean, that's part of the reason I am starting a community for my niche is that there's absolutely people are, you know, where do I go? Where do I go? I love that I've got these communities I can go to about my business and all that other stuff. But if you're an engineer and, you know, for a smaller company at least, and you're running on Amazon, like there's probably no one else that knows more than you and you need answers. And it's like, yeah, you take a course, that you can bounce off there's some additional value to it so that's with all the ai going on you can just chat gpt all day but you know to have somebody else that actually breathes and has a pulse that understands your pain even sometimes you just event to about like oh it's the security group for the hundredth time why did I make that mistake again you know so uh I completely agree with you I think that's a huge value if you're not in one of those you know I would strongly recommend Yeah. And it seems like cloud war games is going to be like a foundation for helping you identify those groups. Cause you get in, you start working with people that you don't know. And then you just start chatting from there. It looks like those are just going to naturally form as a result of this. I would love that. I hope, I hope there's some, cause you, you do get some good relationships that are formed in foxholes, so to say, you're in the fire there. It's like, you know, you, you, if, if someone cracks under pressure, you know, but yeah, I've got some guys that I'm pretty excited with because we've sweated it out, you know, in bad times. And, you know, there's, you'd be amazed how quickly you forge those relationships. Sorry. Hopefully the audio is still good. Well, I mean, the, The worse the situation is, the more interesting and honestly, the thing that you can sort of look back at later to sort of enjoy it, the better the story it is that you can, you know, walk through like, oh, there was these decisions that were made and there were problems there. And then and then you're able to tell that story later. Like, it's a much better story if everything just worked right all the time. Like your job would be boring and you would leave after when you retire and be like, you didn't do anything. But the fact you can look back and be like, oh, like there was one time the website was down because someone did this and it took forever. Like that's a great story that you can tell. Yeah. Yeah. I tell my parents this stuff. My mom's like, you know, I don't know how you can handle this stuff. This sounds so bad. I'm like, well, if this stuff didn't go down occasionally, we didn't get sorry. We didn't get attacked like this. then I wouldn't have a job. So, you know, it's kind of like, that's, there's, I find these kinds of outliers. The problem is you design a system that's so solid, it doesn't go down. So then they don't need you anymore. But luckily the internet's full of evil people attacking us. So it gives me a job. Sorry. That sounds weird to say. It's always opportunity somewhere. Yeah. right on so um you've been you're literally just a week into cloud war games right less than a week but yeah yeah what was the trigger that made you decide to to to start this so I I had thought of it as a side part for my kind of community I was creating because I I wanted to help I'm trying my mission try and find as many people that I can add value to their lives And, you know, some of my big clients, you know, that's, that's great. But what if a mom and pop tiny little shop comes to me and need something? I can't offer them as much one-on-one time. So I was like, I'll, I'll build a community and then they can, you know, share information just like we've been talking about and I can help more people and it works out for all of us. But then I was in the mastermind group and I was like, one of the events we're going to do is the war gaming. And they're like, no, no, no, that's the front and center thing. Like that's, I can see companies hire you just to go in and do war games or all these other things. And then, They got me hyped up and I'm like, I'll have it launched. I'll have it launched by tomorrow. And I said, I'll have it. I'll have a post. I'll have a video and I'll have a landing page. And I tied my hands because I, in the same way with a, I was like, no coding. Okay. You can't, no over-engineering. Luckily I'm a horrible designer. So I was like, I'm not going to design. I'll just use a template. And I set up just a convertkit.com, this landing page. And I used Calendly to schedule the first couple and I just wrote some emails there. So no coding. Cause I, I do have a tendency to over-engineer if I allow myself. And so here we are Monday morning and I had five people signed up and now it's doubled already. It's over doubled since then. So it's moving. And then now I'm on this podcast. So yeah, that was just the mastermind group. They focused me. It really was good. Just cut away the other stuff and focus, you know? yeah for sure that's like another um benefit of that is having people who will well like you said just focus you you know because we tend to over engineer it and you think oh man I've got to have a website and I need um a database to store the people's information and get their profiles and I need authentication and But honestly, by having someone hold you accountable to it, you have the MVP in less than five days without having to do any of that stuff that's not actually going to test your idea or not. Yeah. And I will say there's also some other factors here. It's a hot dog business being as I had all these other ingredients just sitting around like I already have open source Terraform scripts I manage. And I used to run my entire infrastructure and some of my client stuff. So I already had that. And that's why I'm like, oh, I could spin up a domain that we can knock down. Actually, I bought ExplodeMe.com yesterday, which is gonna be where we attack. So I can spin that up. I mean, it's not quite ready yet, but I can have it up in a few hours. But all I gotta do is take some of these scenarios that I've got written down and make them more formal. I was trying to like hot dogs, a bunch of other pieces of meat that you got, the little leavings of you put them together and now you got hot dogs and baloney or whatever else. So, so that was uniquely that I was lucky enough to have that, fortunate enough to have that. So. Right on. How long have you been in the mastermind groups? How long have you been doing that? Yeah, on and off throughout the years, but I, over the last two years, I really went heads down. I, I hired a business coach and I think it was twenty twenty two. They didn't quite work out. But then I found this solo expertise one in twenty twenty three. The beginning of that, that was great. I actually ended up engaging the founder of that for a one on one coaching. And we met yesterday. It's phenomenal. And I threw a parallel. I found a parallel group that was more hands off small best dot com that then I found another person for another mastermind group. that was more hands-on and I jumped in with them and I think I almost mentor them as much as they mentor me luckily at this point, but yeah, that's what a mastermind group is. So that's, that's been, uh, it was about nine months ago there and I'm looking for more and I'm probably going to start another one in the next few weeks. Well, maybe months, I should say next few months, I'm going to finish. Right on. Cool. And then your, um, your cartoons that you release, where do you release those at for anyone who wants to see those? I have my mailing lists, my socials, and then I push them. If they're relative to Terraform, I push them in those Terraform groups here and there, r slash Terraform. If they're relevant, r slash Programmer Humor, that's where I launch a bunch of them. Those are the ones where I get the most views. Yeah. Yeah. Yeah. And there was one week when there was, yeah, there was nevermind. There was one that was relevant to something we said earlier that I just came out last week, but I don't think I can connect the threads anymore. So the one you sent that cracked me up was the, um, the Y two K one. Cause I like, I know people that in, they went into bunkers and I've never seen them since. And so pretty frequently I wonder like, wow, did they, cause some of them were going to stay in their bunkers for like, ten or twenty years, and I was like, did they stay? Like, are they still alive? What happened when they came out? And I don't know where any of them are. Yeah, I got to thinking, I was, this could be an annual one, cause this is actually a release on the thirty-first of December, but I got to thinking, what's the dumbest thing that you could go back into a bunker and live your life in hiding for? Javascript everywhere? What? And they had a little bit of a controversy to it because, you know, of course, there's like half the Internet hates JavaScript and half the Internet's like JavaScript. Let's put it in everything. Right. That helped. It definitely helped it go up the numbers. Sure, sure. I mean, if people, I know about this controversy and I just, I wonder if the people who are against JavaScript will be more in favor or against whatever LLM generated programming language the whole world ends up utilizing in the future. I mean, we'll be forced by our robot overlords to use the one true programming language, whatever that is. And I wonder if they'll be okay with that or whether or not they'll have wished to go back to the days of JavaScript and everything. You just gave me an idea for a camera. We're arguing about JavaScript versus not JavaScript. But what about, we can all agree that people that use no code solutions are fools. I think I probably get pinned in the anti JavaScript crowd a lot. And I'm not, I'm not anti JavaScript. Like the point I try to drill in there is I, that JavaScript's not always the right answer. You don't hire a carpenter based on the type of hammer that they use. You hire them based on their ability to build a garage or a house or a fence or whatever you are. And I think JavaScript, to me, is a tool. And so JavaScript's not always the right answer. So it's not that I'm against JavaScript. I'm against saying JavaScript is always the answer. Yeah, I mean, I was definitely in my life on the like they're just all the program language are tools. But, you know, I've definitely come more around to the fact that every single one of these tools has some specific quirks which change the utility in the solution space that we're in. And so it actually is more important that we evaluate whether or not this tool, this language, what it implies, how it works, who the maintainers are, what their mentality for the long term is for the type of solution that we're building. And I feel like we're still very much stuck in the fact of whether or not people sort of like the tool itself. Like I like hammers, I don't like hammers rather than the the company that manufactures the hammers is who we should be evaluating. Yeah. Yeah. From from my thoughts on JavaScript, from a business standpoint are, you know, it's probably a little dated now, but back in, let's just say the mid two thousand tens, I can hide if you're going to if you're going to write PHP and have a website, you know, you're going to need to have JavaScript in the browser. Right. That's just you can't run PHP in the browser. Same thing with Java. Same thing with a lot of things. So a lot of these developers that I was finding had some amount of JavaScript background. And I found that you can repurpose that little bit of JavaScript in the browser to run server side if you wanted to. Much easier. So it was more of a cost efficient thing. I could take a PHP dev that's full stack and make them into a Node.js dev without breaking the bank on that one. With that said, now with AI being a big thing, it would be silly to try and use to run neural networks in JavaScript. I know because I've tried it. It's probably not a good idea. So, but no, yeah, you can, so you're right. You got to pick the right tool for the job, but it was strictly on like a, who could I, you know, we can cast a wider net and hire people that have JavaScript experience and, you know, so we can get a wider range of people coming in, better applicants and ideally a better outcome. So that was, that's that business, you know, numbers, you got to kind of do that calculus as well. But again, you're right. Not the right tool for AI, not the right tool for a lot of things. Yeah, but it might be the right tool for your business because you just need a versatile programmer who can get shit done. Yeah. If I'm hiring for the top Python devs, a lot harder to figure out how to hire those guys than just, you know, top Java devs. For sure. So for people who want to go check out Cloud War Games, cloudwargames.com. Cloudboardgames.com. Yep, that's where you find me. This is the time where I'm supposed to kind of tell you all the different things. I was trying to tee it up to let you plug the website, but then I just plugged the website for you and stole the answer out from under you. I butchered it. For the release of the episode on the website, adventureindevops.com, there'll be a bunch of blurbs along with whatever links you want us to post there. So if you want to just respond to us after the podcast, all of the things that we've talked about in this episode, for anyone who's interested, we'll all be listed there. Sure. Okay. Well, yes, cloudwargames.com is where you can find that. Schematical.com, that's the word schematic with AL at the end, is where you can find most of my writing, schematical.com. And soon, I haven't announced this publicly. This is the first time I'm announcing it. I actually just spent the last three months of my life building a video course for O'Reilly's, the publishing company. No, it's an on-demand video course. They wanted me to say on-demand. On-demand video course for O'Reilly Publishing. And so that will be live, hopefully, by the next two weeks or so, maybe by the time this comes out. So if you want to learn Zero to Hero on AWS Security and Animated Guide to Security in the Cloud, that will be there. Um, so if I'm over-plugging this, feel free to cut it, but, uh, I'm super interested in this. So now this is a, an animated course on AWS security. Yes. Yes, it is. Actually, if you, if you want, I've got a diagram here that I queued up. Okay. We can cut this if you want, but, uh, if you guys want, I'm actually, we can play a micro round of cloud war games right now. Let's do it. Can I present here? share screen share screen so this right here you guys tell me if you could see it we can now anyone listening to the podcast can't so I'm going to narrate it for them okay here we go all right we have our infrastructure here this is a network map all right and we've got a user right here so this I'm going to go as fast as I can because I know we're I want to be respectful of your time, but a request come in, hits the application load balancer, hits the application server, then your shopping cart, so I should set the tone, e-commerce store. You're running an e-commerce store here. The shopping cart's stored in Redis. So they say, hey, I want to buy this thing. It goes into Redis, goes back to the application layer, and now they've added it to their cart. And... Let's just say that they actually go to make a purchase. It's the application server. We're doing event-driven architecture. Oh, oh, oh, oh, maybe it's not the right one. All right, we're gonna forget about the animation for now. Event-driven architecture pumped into Kinesis. That updates the database saying a purchase was made. It updates the inventory management software. It updates the product worker which charges them and updates the mail service and all that stuff there. All right, I'm getting to the details here. Here's the scenario, okay? Customer service comes to you and says, We are getting reports that people are missing stuff in their cart. They're adding stuff to their cart and all of a sudden when they go to checkout, it's not there. They go to another page, it's not there. All right, what do we do? So I'm going to highlight this real quick. We're looking at an animated diagram of an AWS environment, right? And is this part of the Cloud Wars games interface? It will be. It's not actually, this is running locally right now because I've never bothered to put it on a website, but it'll be up eventually. I'll use it locally if I have to for now. Right on. Okay, so there's stuff missing from their cart. I'm assuming that the cart is persisted somewhere in some data store somewhere? That is correct. It is in Redis. Right on. So do we have a way to check the logs on Redis or check the whatever is writing logs to Redis? It's running on ElastiCache. ElastiCache does have events. I don't know if you can get directly to the logs there, but you can log into Redis and run some stuff. You've got metrics too. Don't forget you do have CloudWatch metrics. I guess the first question is like, is the data in the database where it's supposed to be? If we're using Redis, like Redis Commander or something to tell us whether or not the items are actually in the shopping cart store. Yeah. So you go in there, you've got, let's call it a hundred thousand keys and you look at it, there is data in there. You can, I wouldn't do this step for you normally, but I'm going to do it just because I'm going to speed things along. You go in there and you try and add things to your cart. Of course, Does the cart for the customer who's complaining, are you able to have a session for that that you can track to check to see if there are actual items for that session in the cart? So this is where I want to go like a five-sided die. Do you have a technical-minded customer or not? Okay, you just rolled. Do you have a technical-minded customer? They can open up their browser and copy the cookie for the session and send it to you. And so, yes, you have their session. I mean, I always assume they're not a technical customer. And so you try to get them to purchase some fake item in the cart that only, only their session will, will have access to a magic URL. Right. That allows you to attract it. Yeah. Yeah. I love that. Yeah. I was just being nice because we don't want to be for the sake of time, but yes, I love that solution. This is the type of solution, but I didn't, I wouldn't have thought of that. I would have thought this is the type of stuff you can get with these type of games. Well, we got to debug this stuff for real all the time at our company. I mean, we're not e-commerce, but we do login and access control. And so it's always a point of contention, like why didn't this user have access to this resource at this particular moment? And so figuring that out requires a bunch of things. So we have ways to give our customers information that they can inject into their environment when they're performing the sort of investigation that we can see on our side so that we can highlight exactly which traces make sense. Otherwise, you know, you're looking at all of the data for every customer in order to narrow that down. Yeah. So, I mean, you said technical customer or some magic solution. And are we getting their items in the cart or is their session busted? You check the session against the red state of the session key there. Items are gone. Not there. There's nothing there. There's nothing for that key. Key's gone. So you mentioned ElastiCache. I'm assuming that wasn't just randomly throwing out words. Where's that at in this pipeline? Redis running on AWS is ElastiCache. I just don't have. ElastiCache is a service that runs value key stores. Okay. I got a couple different ones, but I picked Redis. It's my go-to. Gotcha. Understood. So they put something through the browser, in the cart, never made it up, never made it into Redis. Who's responsible for sending it to Redis? To clarify, so just Again, I'm giving you way too much here. I never said it didn't make it into Redis in the first place, just to be clear. Or it just got deleted instantaneously. By the time it gets to the cart, by the time you look at it, it's no longer there. So there could be some sort of TTL on the items that are going into the cart or some other process that's eliminating them from Redis. Or, of course, not getting there in the first place. Yeah. So just to speed us along, I'm going to drop what I would give as a hint. that you do have cloud watch logs for, uh, for Reddit. So you could ask me what they are saying. Well, what are the logs saying? So number of items is pretty number of items went up, but flatlines. Okay. CPU usage is fine. Um, number of evictions is up quite a bit evictions. Oh, so they got, they got evicted. Um, Yep. And then I guess the usable memory dropped. So again, I'm going to simulate this. I wasted one of my real juicy ones, but I guess it's probably good here. So yeah, evictions are up. So what's the solution there? So I don't use Redis a whole lot. So obviously, it seems like Redis evicted for some reason because it either has like a max number of key values that it can store or it ran out of space. Yep, that is correct. It just runs out of data. You can set eviction policies, but in this case, I think the default is to just start evicting the older ones. And so that's what happens is they, it filled up. Maybe it was a big shopping day, you know, and you didn't expect this much, this many people to put stuff in the cart. And so it filled up more. I mean, it's, again, I'm going to just kind of speed through this, but possibly you could look at it and some change made the payload of each key Instead of just the product IDs and quantities, we're caching the metadata and the products. For some reason, somebody accidentally messed up and put that in there. And now it's just bloated. So the fix would – I'll let you guys present the fix if you guys have anything there. I know I've told you the problem. I think the emergency fix is increase the size of Redis so that we – That's probably what I would do. And then the long-term fix would be to fix the bug that had them catch all that stuff. Actually happened once. Actually happened. They had to cache a bunch of HTML in there that was like, I'm like, this is a JSON object with HTML in it. Like, what are you doing here? Stop caching that stuff in this thing. But it happened. So, yeah. All right. Congratulations. action report and so on and so forth. So, yeah, I mean, this is great. I'm actually sort of curious on the scenario is, is using Redis as a temporary store for the cart, a common pattern in e-commerce stores. When at early stage. Yeah. So a lot of my clients, you know, I love them to death clients understand they, you know, they, they start off with something simple like WordPress and then they start slapping more things in there. Not the way I would do it, Now, the way I would do it is, I mean, there's a lot of data you can extract from carts. It's not ephemeral data. You'd want to know who's adding what, when, where. You can send a reminder, emails, all that stuff. But with devs, a lot of times it's just stuff everything in the session and then pray. Yeah, I mean, I get I get the perspective of knowing that it's temporary data. It's not the order hasn't been created yet. So storing it in a data store that may not be persistent. I also get the idea that people believe that Redis is this non ephemeral data store and you know, go ahead and use it as your source of truth database. But in the mature businesses, as you said, you actually don't even want to throw away that session data. As soon as you have it, you might as well be persisting it for permanency so that you can evaluate, why didn't that convert to an actual order? Why didn't that person come back? And then once they do actually click buy and payment gets processed, you don't need to convert it from your temporary data store into a permanent one. You already have it there. The payment is sort of separate. I'm actually trying to get you to exactly what you're describing for the video I did on Amazon Glue and putting that data in a long-term cold source, basically telling people the difference between a source of truth, ephemeral, and long-term red shifter, big data analytics tools, data warehouse, data lake type situation. This is one of your videos that's going on on demand on O'Reilly? No, that's my YouTube I'm going to stop sharing since I didn't prepare for that one. Will's gone dark for me. He's got no camera on. He's hiding from the public. Oh, and anonymous. Yeah. I mean, I think this is a good point to maybe wrap up the episode, unless there's anything, last words you want to share about Cloud WarGames or your consultancy. No, I want to thank you both for being the first participants It's somewhat an unofficial capacity there, but thank you both for being the first participants. I know we kind of played a micro around there, but I invite you once I get this thing moving, I'd invite you guys to come and participate. And if you guys are game, maybe I come back and run a full length game with you guys or something of that nature. So it's just throwing that out there if you're interested. That'd be a blast and would love to have you back on at any time. For that, and there's a bunch of other topics we like touched on here that I think would be cool to dig deeper on. Yeah, for sure. I'm all in. It would be my pleasure. You let me know when and I'll, you know, another guest drops out, come find me. We'll do. With that, should we move on to picks, Will? We should. Ah, man. Words are hard. Yeah, right? Just like to take this opportunity to point out to everyone that English is my native language and I still screw it up. You should see me editing my videos. A lot of swearing. For sure. I used to do quite a few YouTube videos and did some video courses and stuff. And my wife would always give me a hard time. She would say, I can always tell how it's going by how many cuss words I can hear coming out of your office. Then at one point I made like a blooper reel where I just took all the cuss words that I cut out of all my videos. And it was like an eight minute stream of just some of the most offensive language that has ever been recorded. Yeah. All right. Anyway, on to pics. Warren, you brought it up, so I'll go first. A couple of weeks ago, I picked Kunk on Earth, the Netflix special. I think that was when we had AJ Funk on. He said that there was a new one called Kunk on Life. I watched that, and I thought Kunk on Earth was so great that there would be no way a follow-up to it could be as entertaining as And I'm happy to tell you that I was wrong on so many levels. So Kunk on Life, go check that out on Netflix. Just the sense of humor there and the dryness of that sense of humor had me just rolling on the floor laughing. Just absolutely amazing. And they accidentally made it educational as well. So go check that out. Well, I definitely will because I liked all of the other series by Philomena. Yeah. I guess that's her stage name and not the actress's name. Mine is... I guess I also have a show. I read the books, Three-Body Problem by Leo Tsichin. This is actually one of the scenarios where I actually like the series better. I think the series is absolutely fantastic. Some of the books are good, but the series... absolutely really well done uh I really look forward to the follow-up seasons um if you haven't seen it or read the books I highly recommend there's a lot of good philosophical ideas that are brought up okay give me the high level of what it's about because I'm just assuming from the title three body problem this is how to get away with murdering someone but I may be wrong No, it actually has to do with the unsolvability of finding out without the initial conditions what the path and orientation of a solar system with three masses in it is. Ah, okay. That's not going to be as useful to me as I thought it was at first. Without spoiling really that much, one of the very close solar systems in our galaxy in the Milky Way to our solar system is one with three stars in it. It's science fiction, really good, philosophical dilemmas, absolutely fantastic, well done. Is that the Alpha Centauri system? That you're referring to? Yeah. Yeah. Because they originally thought it was one star and then found out that it was two binary stars in orbit with another star close by, I think. Yeah. Yeah. Yeah. It's four light years away. Right. Just across the street. Yeah. So, Matt, what do you got for us? Yes. you got all this Einstein stuff. I did not come prepared for that. I got the comic book, Scott Pilgrim versus the world. Nice. Yeah. They do a lot of pixel art in there and I've been doing, and I've been dropping them on my desk and I've been doing a lot of, um, comic book stuff. So I'm like, okay, this would be a good thing to pick up. And I'm trying to look at screens less before bed. So I've been, uh, just reading through this lately. Um, Yeah, not quite as big, as interesting as the three-body problem, but it helps me go to sleep. What was that last thing that you held up? Scott Pilgrim vs. the World. That's volume one, volume two. I see. I didn't know it was a written work of art. Yeah, I believe that's how it started, and then I think they made the video game and then the movie. Interesting. But the video game, the art for that is a guy named Paul Robinson, I think, perhaps G or whatever. And he's just a phenomenal pixel artist. And I just, I, my work doesn't come close to his and I got a style that I could do in two seconds, but he spends like years building these amazing animations. It's phenomenal. So. Right on. Cool. Well, Matt, thanks again for coming on the show. This has been a blast and we will definitely have you back on. For everyone else, check out cloudwargames.com. And anywhere else that you hang out, you hang out on like X, LinkedIn, any of that kind of stuff. You can find me most of those places at Schematical. I try and grab it anywhere I can. Okay. Yeah. So check it out on Schematical. And thanks for listening. And we'll see everyone next week.